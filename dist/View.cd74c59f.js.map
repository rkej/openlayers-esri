{"version":3,"sources":["../../../src/ol/tilegrid/common.js","../../src/ol/util.js","../../src/ol/functions.js","../../src/ol/AssertionError.js","../../src/ol/asserts.js","../../src/ol/math.js","../../src/ol/centerconstraint.js","../../src/ol/ObjectEventType.js","../../src/ol/obj.js","../../src/ol/events.js","../../src/ol/Disposable.js","../../../src/ol/events/Event.js","../../../src/ol/events/Target.js","../../../src/ol/events/EventType.js","../../src/ol/Observable.js","../../src/ol/Object.js","../../src/ol/array.js","../../src/ol/resolutionconstraint.js","../../src/ol/rotationconstraint.js","../../src/ol/ViewHint.js","../../src/ol/ViewProperty.js","../../src/ol/string.js","../../src/ol/coordinate.js","../../src/ol/easing.js","../../../src/ol/extent/Corner.js","../../../src/ol/extent/Relationship.js","../../src/ol/extent.js","../../../src/ol/geom/GeometryType.js","../../../src/ol/geom/GeometryLayout.js","../../../../src/ol/geom/flat/transform.js","../../src/ol/sphere.js","../../../src/ol/proj/Units.js","../../../src/ol/proj/Projection.js","../../../src/ol/proj/epsg3857.js","../../../src/ol/proj/epsg4326.js","../../../src/ol/proj/projections.js","../../../src/ol/proj/transforms.js","../../src/ol/proj.js","../../src/ol/transform.js","../../../src/ol/geom/Geometry.js","../../../src/ol/geom/SimpleGeometry.js","../../../../src/ol/geom/flat/area.js","../../../../src/ol/geom/flat/closest.js","../../../../src/ol/geom/flat/deflate.js","../../../../src/ol/geom/flat/inflate.js","../../../../src/ol/geom/flat/simplify.js","../../../src/ol/geom/LinearRing.js","../../../src/ol/geom/Point.js","../../../../src/ol/geom/flat/contains.js","../../../../src/ol/geom/flat/interiorpoint.js","../../../../src/ol/geom/flat/segments.js","../../../../src/ol/geom/flat/intersectsextent.js","../../../../src/ol/geom/flat/reverse.js","../../../../src/ol/geom/flat/orient.js","../../../src/ol/geom/Polygon.js","../../src/ol/View.js"],"names":["const","let","super","arguments","i"],"mappings":";;;;;;;AoDAA,AFAA,ArCAA,ADGA,AYHA,ACAA,AcGA,AXHA,ADAA,AmBGA,ACAA,AhBHA,AGGA,AlCHA,AGGA,AOHA,AHAA,AYAA,ACAA,AhBGA;A6CAA,AjBAA,AjBAA,ADAA,ARAA,AWAA,AIHA;AoBAA,AGAA,AjCAA,ACIA,A2BAA,AOAA,ACAA,APDA,APAA,ACCA,ACJA,AhCAA,ADAA;A8CGA,ALHA,AMIA,ApBJA,AGAA,AIGA,ArBCA,ADAA,ARJA,AEAA,ASIA,ACDA,AjBHA;AkDGA,AEAA,AzCEA,A2BAA,AOAA,ACAA,AOFA,AdCA,APAA,AsBDA,AnDHA,AmBAA,AOUA;AYPA,AMHA,ACAA,AbAA,ArBKA,ADAA,AGLA,ACAA;AiCIA,AEJA,AzCMA,A2BAA,AOAA,ACAA,AOFA,AdCA,APAA,ACLA,AqBIA,AzBOA;AYXA,A3BMA,ANHA,eFIe,AYAA,ACAA;A+BFf,ANwBA,ANtBA,AOAA,ACAA,AOFA,AdCA,AxCEOA,AUAP,A6CHA,ApCGE,ACAA,EDAA,ACAA,EpBAW,AUAP,IUAE,EAAE,CDAC,EAAE,CTAG,ASDD,CNCA,AWAA,ACAA,EfEb,CUHa,EpBCc,GAAG,EAAzBA,CUEL,UAAA,GAAc;AcDd,ACAA,AMAFA,AIDAC,AzBGE,AKJF,ADPA,AKSE,ACAA,AXTF,AJGA,EmBME,ACAA,ANAA,ACAA,EWAI,AIDF,KVCK,AMAE,AIDF,EVCE,CADI,AMCD,AIDF,AfCA,CIAC,ALAA,CgBDbA,AfCc,CIAC,ALAA,WCFA,EICA;A2BRf,ACWO,APXP,AjCAA,AYUE,ACAA,AcFF,AOAA,AQFA,AdCA,ATGE,AEVF,AsBMA,ApCCe,ACGb,AlBFK,A4BRP,A7BOO,EuBGL,ACAA,AMAA,AXAA,OgCCc,ArBDP,A7BFO,ADDA,CmBGN,CWAC,CXAC,ClBFL,CsBEO,ACAA,CGAC,ADAA,CHAC,ACAA,AvBFO,CuBAR,AxBDR,GmDIA,ArBFO,A9BFa,CmDIC,S5BHb,M4BGR,EAAsC,MAAtC,EAA8C,GAA9C,EAAmD,MAAnD,EAA2D;AAChE,A5BDA,ACAA,AGAA,ADAA,AIAA,A5BDF,AiBHe,AJPf,AdSE,AGTF,AgBUO,AiBPP,ArCKE,EuBGA,ACAA,AGAA,ADAA,AIAA,EHAE,AzBDE,EyBCA,AGAA,CNAC,AEAA,CIAC,CqBCC,A3BDA,AEAA,AzBFA,AmBCO,CGCN,ACHK,AGEA,EJCH,AOFE,C7BAZ,EkDGa,CzBFA,EyBEG,AjDFE,AkBAb,CAAmB,E+BEL,C5BJN,E4BIS,C/BFjB,EAA2B,G+BEhC,EAA8B,A/BFzB,EAAkC,aAAlC,EAAiD;A+BGpD,A5BDF,ACAA,AcHF,AXGE,ADAA,AmBHF,ACTA,AOOA,AdCA,ATIE,A5BFgC,AoDHlC,AnDEO,AFCN,AmBCCD,ApBHA,EuBIA,ACAA,AGAA,ADAA,AIAA,GHAG,CPDG,CICD,AGAA,CGAC,CqBCCC,A3BDA,ArBHO,CqBDD,AMIL,CPAC,CIFI,CwBGF,A5BDA,AGAA,AIHC,CqBIA,CzBDC,AvBHR,CAAgB,CgDIN,CAAb,A/BFgB,E+BEA,CAAC,A/BFE,G+BEC,ChDJjB,EuBCQ,AvBDmB,GgDI9B,EAA4B,EAAE,A/BFE,C+BEhC,ChDJG,CgDI8B,ChDJQ,CiBEJ,SAAlB,GAA8B,MAAM,CAAC,OAAP,CAAe,aAAf,CAA9B,GAA8D,KAAK,MAAxFD;AoBCK,AWEDA,A5BNS,ACKb,AGAA,ADAA,AIAA,AKHFC,AjCAkC,AYVlC,ARaE,AHHA,AkBPF,ADSEA,AiBZF,ArCQ4B,EwBK1B,AGAA,ADAA,AIAA,AxBAA,E6BHE,CRGC,CxBHC,AiBEA,CICC,AGAA,AxBHA,C2BGC,CUDQ,AhBCP,C2BCG,A3BNG,AMKL,A5BHwB,EyBAnB,CwBIA,AzBDF,ANDA,CeFC,CTGC,AxBHmB,CiDIhB,A7CDF,AHHd,AiBEc,ApBJuB,CmCEtB,AjCAiB,C4BDpB,AxBII,AHHA,CqCEX,ALFPA,CKE2B,OdFZ,CNEa,CAAC,E+BEI,CAAC,GXF3B,CpBAS,CoBA4B,ApBAP,C+BEG,E/BFxB,C+BE2B,A/BFzCA,C+BE+B,CXF1B,AWEDD,EXF8C,GAA7C,EAAkD,MAAlD,EAA0D;AAC/DC,AEDK,ACCA,AQED,AvCDJ,AYAA,AGAA,ADAA,AmBJF,AQFA,AvBME,AIAK,AhCCL,AOCA,AHTa,AgDCf,AnDGI,AmBAG,AFEL,ApBJE,EYKF,AYAA,AGAA,ADAA,AIAA,AVDA,IoBAI,AWEA,A3BDA,AGAA,ClBEG,CGFD,AYAA,AGAA,CeFQ,ACCA,AjBCP,AQAO,AZHA,AFEP,CRCC,ATHA,CuBGC,AxBCT,CkBFU,ApBJF,C8BKG,CIAN,A/BHO,CqCEC,AVCA,ARHR,CbKL,AaLqB,AtBFT,CkCKU,AZHjB,CkBEW,A5BLH,C4BKbA,A/BGmB,AaLK,AFEP,CMHJ,CyBKM,AnDNX,CmDMY,AnDNF,ESOlB,AWHsB,ClBEtB,AkBFuB,CsBDlB,AxCGO,AkBFF,CsBDsB,ACC3B,CAA4B,AQEP,ArBNd,CVIe,ClBE3B,CiDA6B,CAAV,AjDAD,CiDAd,GAA8B,ChDJ1B,CAAmB,GiBEY,CsBDlC,AtBCmC,CuBAnC,CDD4C,CCCC,ExCF1C,CAAN,AiBEQ,EsBDL,CCCA,AQE4C,A/BFA,CsBDQ,ASGP,CRFQ,C3CJlD,CmDM6C,AnDNnD,C2CIG,EAA0D,AQEP,A/BFxD,IsBDK,EAAgE,ACChE,AQE6C,ERFqB,CQEN,CAAhB,CAA7C,CTHC,EAAwE,SCCxE,EAAmF;AHCxFA,AEDA,ACCAD,AQEI,AvCAJ,AYRa,AGEA,ADKb,AIAA,AIAA,AnCDKA,AGEHA,AOCJ,ANLG,AEGI,AgBXP,ACQE,AFEA,ApBJC,CSFH,CGQE,AcDA,AIAA,AIAA,EnCDW,CCNc,CwCMrB,AGAE,AQEF,CTHCC,A9BGA,AsBDA,CMDC,AVCA,A5BCE,CUAD,APDO,AiBHP,AFEA,CUCC,AIAA,CMDC,AEDA,CAAC,AREV,AhCCY,CwBDD,AJHA,CAAC,CoBCC,AhBEA,AxBCE,CwCHVA,A9BLQ,AQMC,CuBAG,ArBFV,CoBCS,ApBDA,CAAT,AFEU,CsBDC,ACCE,CQED,ApDFS,AMCvB,AiBHc,C6BIC,A9CDO,AiBHpB,CoBCc,ApBDrB,CvBE+B,AqBAxB,C+BEgB,CXFC,CAAC,AdJZ,A3BIRD,AqBAoB,C+BEC,A9CDrB,EmCDuB,AnCCO,GmCDJ,AEDA,AxCGJ,CwCHK,ASGZ,CRFe,EQEA,CAAhB,CXFK,AWEpB,A/BFG,CoBAPC,AEDA,ACCwC,CzCEzB,CwCHyB,ASGA,A/BFA,CsBDC,CxCGH,CiDAlC,CTHwC,AtBCA,EsBD5C,CCCoB,CDD4B,CtBCR,CsBDU,ACCE,AvBAF,CsBDlD,EAAqD,CtBCC,ClBEvC,GAAiC,CkBFE,GAAY,ElBER,CyCFlC,GAAkD,CvBA9B,CuBAxCD,CvBAuE,IAA/B,CAAoC,ElBEd,CkBFtB,IlBEc,AkBF6B,ClBEf,GAAd,EAAmB,CAAnB,CAApDA,IkBFF;AoBCAC,AEDE,ACCFA,AQEG,AvBHE,AlBAP,AEGE,A0BjBF,AZgBE,AmBLF,AQFA,AdTA,ATSc,AGIPD,ACGN,AhCCGA,AOEJ,A6CVA,AnDIC,AEGC,AiBHD,AfCMA,AaCN,ApBPC,C8BCFA,ClBQE,AcDA,EgBFE,AhCAE,AuBDO,A1BCA,EiCCP,AGAA,CAAC,CHAC,AtCEE,C0BHM,AlBAL,CiCCD,AVFS,A1BCA,CiCCR,AGATC,CjCIA,CEFW,AqBJS,A1BCC,EKGR,AVAE,GAAG,CwCHD,AhBEA,CgBFC,AdAb,AKDAD,A1BCuB,CqBAF,AlBK1B,AgBHmB,KcDK,AEDA,AhCKxB,AHLkC,CiCCT,A9BIb,AHLuB,CmCAlB,A9BNJ,C8BMX,CFC0B,C9BI5B,CgCL8B,CFCC,A9BIb,AHLG,GqBAhB,EAAsC,AFJ9B,AnBIiC,CiCCrB,GAAe,AEDA,CFChB,AEDiB,CFCzCC,AEDwC,AdAnC,CcAH,CdAiD,ErBA/B,CqBAf,EAAmD,ArBAI,MqBAvD,ArBA6D,CAAC,CqBAH,KrBA5C,GAAwD,CqBAvE,EAAsE,C1BGJ,IAArD,EKHmE,CqBAhF,A1BIH,E0BJmF,GrBAT,EAAiB,QLG3E,GACE,AKJwD,EAA8B,ELGxF,GACS,eADzBD;A6CHG,ALCJ,AUFI,AxBELA,AlBMA,AEHA,AcDA,AxBGEE,AmBpBJ,ALgBO,AhBLN,EYOC,AcDA,ExBGEA,E0BLI,ChBGD,EmCJS,AKDA,AxCKP,AVELA,AcJY,CYDJ,A1BKRA,G0BLW,C1BKXA,CwBHW,AxBGN,CUZM,CcSE,ExBGbA,E0BLmB,A1BKb,G0BLgB,I1BKtBA,EkDPG,CAA+B,A1BHvB,CEKQ,AZChB,C+BFA,A/BEiC,C+BFC,CnBCJ,EAAnCF,OZCK,EoCHA,ApCG8C,EoCHE,CLChD,EAAmD,GKDnD,EAAwD,CLCxD,EAA2D,AKD3D,EAA6D,CLC7D,EAAgE,GKDhE,EAAqE,CLCrE,EAAwE,MAAxE,EAAgF;APErF,AODAA,AJCA,AQEE,AvBFFC,AhBGA,AcDA,A2BRF,AlBMO,AmBNP,AtCOE,ACDK,ELGL,AcDA,EyBAE,EJHI,AnBCF,CeACA,AfAA,EYAE,ALAO,AlBAA,CkCEN,AvBFA,AhBGA,C+BHC,AfATA,CeAU,A/BGA,CmCJG,CIGD,AhBFP,CKAQ,AGAA,CIDG,A9BCX,CkBAiB,AlBAA,CuBAN,EWEd,CXFF,AGAA,AjBEmB,CdVN,C4BQQ,AGAA,AjBEA,CiBFC,C1BAjB,E0BAoB,A1BAO,EuBAL,CGA3B,EAA8B,A1BAzB,CuBA0B,AGAA,C1BAQ,G0BAJ,EHAnC,EAAuC,EODT,AJC9B,AjBNa,EiBM8B,IID3B;APEdD,AEDF,ACCE,AQEA,AFCG,ArCAL,AcDA,ASFA,AlCDK,AMDL,AUEA,ELGA,AcDA,ASFA,EQAE,AQEA,E5CJE,AUEA,CkCEC,CXFG,AdEF,CgBHC,AOIO,AhDJA,CuCCJ,AdEF,CyBAC,AvCCA,CuBHC,A5BFA,CiCEG,A5BGF,CXJN,AgBCO,CyBDZ,ACCa,ARAA,CQAC,AMGT,CNHU,AQEb,AFCoB,AdHtB,AlCDsB,AMDP,EoCEF,A1BAI,C0BAf,GAAmB,C/BTR,ELOT,EiCEwB,AvBA5B,CuBA6B,CjCFD,AUEA,EgCGvB,EAAkC,CTHX,CAA1BA,AjCFgC,EoCEE,CAAC,CMGhC,C1CLkC,C0CKQ,ENH1B,CAAsB,AMGtC,A1CLL,CoCEqB,CMG+B,A1CLP,CoCEC,CAAC,GAAG,CMG7C,EAAuD,GNHvC,CAAnB,IMGG,EAAiE,QAAjE,EAA2E;ATF9EA,AEDH,ACCE,ASFDC,ADIC,AFCDD,ArBJA,AlBOA,AEHA,AcXa,AmBVf,AQWA,ArBGOA,AGIN,AmBPD,ArDME,AMDE,AUEA,ELGF,EoBPW,EoBEP,AHKE,CrBJDC,AlBOE,C8BNC,CvCDD,CuCCG,AYFF,AxCKA,AoBPS,AzBET,CqBCC,AXCA,CgCGG,ArBJF,AhBIA,AKHR,CuBAW,AYFF,ApBFS,CoBEpBA,AnDCA,AMDY,C0CKG,ArBJF,CqBIG,IjBPXD,CJGL,ChBTa,CgBSQ,ArBDb,CqBCc,ArBDA,CGQtB,EkBPyB,CYCG,CAAC,CZD7B,CqBI+B,CAAC,ArBJF,CAAC,EYCI,EZDA,CYCG,ASGP,CTHH,ASGb,CTHbA,CSGuC,ErBJzC,EAA2C,WqBIa,CAAC,MAAM,GAAG,CAAV,CAAzC,A1CLP,C0CKRA,A1CLE;AiCGA,AYFFC,ADID,AFCCD,ArBJEA,AlBQF,AEJA,AHAF,AKRO,ATOH,AJHH,AMDE,AUEA,ELGD,CKLA,CuBEE,A1BLS,EsCGP,AHKE,ArCAF,EwCLE,AxBCE,AhBIF,CgBJG,AXCF,CRGT,C2CLW,A3CKX,CwCAc,ArBJA,CYCD,C5BXE,APaF,C4CCI,AnCRO,E0BKP,ASGfA,ETHiB,C/BGnB,AJDI,CICF,C+BHoB,AnCED,EmCFJ,EYFS,CZEC,AYFA,AxBCE,CAAC,AnBI9B,C+BH6B,AZDA,CwBDC,AxBC1BA,CnBIF,C+BH8B,CYFC,CZE7B,KYFsB,CAAxBC,A3CKA,OAAA,GAAU;A+BFR,AGDF,AKCK,AEJA,AEELA,AHKAA,ArBJED,AhBIF,AkCRF,AOHA,A5CWE,AKToC,AwCFtC,AjDUM,AYFF,E0BDF,A/BIA,E4BHE,AMLE,ENKA,AYFA,AHKA,AxCAE,CGAD,AHAE,C2CLD,AxBCE,CYCD,AQAO,AEJA,ADOdC,ArBJS,AhBIF,AkCRE,CzCOD,CmCFN,AYFO,AnCEA,CWDG,AnBIA,CkCJD,CAAC,E/BXC,APcT,EAAY,EsCHhB,A1BCE,CRGF,EkCJqB,AlCIE,CkCJvB,ESDwB,CAAC,AxBCE,CAAC,CsBHvB,AtBGwB,CsBHM,AEEP,EJEvB,ApBD2B,CoBCM,AIFP,AxBCJ,CAAzBD,KwBDuB,GAAe,CAAhB,CAAxBC,CFFK,EAA+C,CFI/C,EAAkD,GEJlD,EAAuD,CFIvD,EACL,AELK,EAA4D,EFI5D,EACC,EELD,EAAoE,EFIpE,EACS,EELT,EAA4E,OFI5E,EACsB,iBADtB,EACyC,QADzC,EACmD;ARAtD,ACHJ,AMEI,AJAF,AKEAA,AELAD,AtBGE,AhBIF,A0BTFA,AQAkC,ArCS9B,AKVkC,ATS9B,ADVD,AGMLA,AUEC,ELGD,E4BHE,AZDA,AULE,EEMA,AQCA,AELE,A3CEA,CyCGNC,CpBFM,CYCC,ACHA,AEEA,AKEA,ApBFA,AhBIA,AHAE,ALXK,CwBON,AdN4B,C0BOlC,AQCFA,ApCES,CmCJE,AnBAL,ArBDM,CyCGD,ApBFT,CoBEFA,A5CTK,CUC+B,ATSvB,ADVO,AGML,CyCGD,ApBFA,AULE,AjCSR,CSV4B,CkCQpCA,AvCEE,C6BTiB,CKKnB,AKEkB,ApCdL,ARKR,CKWgB,AFLA,CkCDvB,AMEI,ACEFA,A5CT2B,AGML,CkCDD,ASDE,CHGA,ACED,CpBFC,AnBIrB,ALXG,C4CSLA,AEL0B,AtBGF,CAAD,AxBPS,C4CSN,ApBFZ,ArBDO,CAArBD,CyCGAC,A5CTK,CwBOwB,CAAf,AxBPuB,CCWvB,EuBJmB,GaFnC,CpCMsB,CoCNkB,ApCMjB,CAAD,CAAZ,EuBJkC,AUL5CD,AjCS2B,CuBJkB,CAAD,CaF5C,AbEmC,EaFc,CbEC,AvBIjB,CuBJjB,AvBIkB,CAAD,CAAvB,CuBJ4C,CvBIhB,CoCNtC,EAA0D,GSAtD,A7CMwC,CAAC,CuBJkB,AvBInB,CoCN5C,AbEgE,AvBItD,CuBJqD,AvBGhD,CoCLmD,AbE9D,CaFJ,ApCOU,EoCP2D,CAArE,EAAwE,YAAxE,ApCOgB,EoCPsE,CSD1D,EACT,C7COG,CAAC,CAAD,CAAZ,EAAiB,MAAM,CAAC,CAAD,C6CRL,A7CQlB,E6CP0B,A7COE,M6CRV,A7CQgB,CAAC,C6CPD,A7COA,CAAlC,CAFK,C6CNa,A7CMpB,E6CLyC,MADrB,CAA1BA;AVKC,ACHDA,AMEI,AJAL,AKECA,AIJA,AHKA,ArBHE,AhBIF,AkCVgC,AOFlC,AvBYOA,AIDA,AzBCH,AKJF,ADHF,AyCLA,AvCCO,AVaA,ADbL,AaQD,ELGC,EgBJE,AEIS,AjBPP,E4BCE,AOIA,CAAC,A3CDH,CoCHI,AbEF,CwBFC,AHKC,ArBHD,AMGO,AzBCL,AMXK,AXAP,C4CSG,ApBFF,AhBIA,AkCVwB,CLIrB,AMEA,AjCAX,CiCAY,AnBAN,AhBII,AsBDL,CNHH,AMGgB,A7BGP,ADbA,CSIG,ATJF,CgDKC,AHKC,CrBHA,CMGT,A9BVE,CgDKS,AHKC,A7CVD,C0BWU,AIDF,EcDH,AIJrB,ArCLK,CiCSiB,ApCfT,AkBiBgB,AhBJ7B,ACP2B,AXAP,CgDKC,AtCET,AVPS,C6CUd,AHTyB,AhBU3BA,ArBAH,CmBJqB,CaFG,AbEF,AkBNQ,A1CDhB,CqCKW,AQKA,ArBHJ,AdAvB,AVPyB,CwBOX,CwBFa,AtCET,CmCGlB,AlCVK,CaOwB,CmBAG,AEGA,ArBHlB,AdAd,ACPqC,AXArB,C2COiB,AKFF,CXAL,A3BEH,AVPS,CqCKhCA,AbEiC,ExBPjB,C6CUsB,AlCVjC,AXAE,C4CSgC,AIJvC,CrCL6C,AXAP,CgDKC,CJIG,ACCA,AnCH1C,CkCEqB,A5CTd,C4CSPA,ApBF0C,AdAT,AVPjC,CwBO2C,CAAD,CAAT,CmBAD,AEGhC,EFHkD,AEGA,ArBHF,CAAlC,GAAsC,AbP/C,EgCO2B,AhCP6B,EgCOH,GAA1B,EAA+B,AnBAF,CAAC,CAAD,CAA3D,GmBA8B,EAAuC,UAAU,CAAC,CAAD,CAAjD,EAAsD,UAAU,CAAC,CAAD,CAAhE,CAA5B;ANDJA,AMEG,AGHH,AECEA,AHKA,ArBHD,AhBID,AkCLA,AbCKA,ACGL,AzBCG,AKJDE,ADJgC,AEHlCD,AVaM,AiBND,AlBPN,AGKC,ASIE,AIAG,EREL,CmCXgB,CAAhBD,AEUE,AhBHS,AnBATE,E2BFI,ASDF,AtCOA,AGXA,CmCIC,A3CCAD,CkCAG,AWAA,AxCMF,CsBDC,ApBHLC,ACPFD,AOOc,AFEA,CgCJJ,AHKF,AhBHS,AnBAfC,C2BFS,AQKF,AHJT,A/BNS,ARKA,C0CKD,A1CLE,C6CAG,AHKX,AhBHkB,CrBdP,AqBcQ,ACGT,ApBHVA,ACPFD,ACSW,CiBFW,ACGT,ApBHN,ATMM,AERA,C0CKC,AHJd,AxBCK,AfFAA,CuCCO,AxBCU,CWAF,AXAf,AfFW,C2BKJ,ApBHVC,CmBAyB,ACGpB,AZHkB,AfFP,C0BEU,AnBApB,EmBAY,A1BFC,C2BKC,A7BGhB,AWJJ,AIAG,CaF2B,AnBA9BA,AME4B,CqBJJ,AzBIH,CyBJI,ArBItB,CgCJuB,ANC5B,AbCoB,ACGpB,CkBL6B,AhCIK,C0BHT,AbCY,CiBHrB,ADMa,AjCD3B,AIAG,C6BCyB,AhBHV,A1BFU,C0BEzBF,A1BF0B,ASID,AIAQ,CqBJJ,CWAN,CAA1BA,CXAmC,ASDhC,CTCqB,AQKU,CRLpCA,ASDwB,A3CCxB,CuCCA,CGIuC,A1CLA,CuCCF,AvCDG,ASItC,EAAuC,CTJE,E0CKd,A1CL7B,C0CKE,C1CL6C,EAAE,CAAjD,EAAoD,E2CD/C,CAAL,EAA4C;AVI5C,ACFAA,AMEA,AGHE,AECAA,AHKA,ArCCF,AkCLEE,AORJ,AnBYC,AzBCD,AIToC,AyCJpC,AvCEEF,AVaK,AiBNL,AfFEA,ASIE,AIAJA,CXHF,CGKE,EqCDE,AHJAE,ELDI,A1BLA,AKSA,EqBJE,AWAA,A7CAA,AaIA,CoBFD,AOAA,AzBAA,CyBAC,AKFE,AHKF,ApCR0B,AGO1B,CyBJG,ASDF,ADMA,ArCCA,AQFE,C6BCH,A7BDI,CgCJC,AHKX,ArCCS,AUJA,CfFG,E2CDZ,ADMY,AlCVE,CgCOhB,AxCFiBC,AaIA,CoBFD,AMDdD,CAAAA,A/BNiB,AOOF,AFEN,CEFO,ANEA,CwBFC,A3BLe,AOOb,CoBFrB,CMDEA,AjCJgC,CDVrB,AkCcN,AxBCe,CAAL,ANEM,CyBJG,AnBE1B,AFEW,CqBJgB,ArBIA,CgCJC,ANC1BA,AvCDwB,C6CAG,A7CAF,CAAD,AaIf,C6BCkB,A1CL3BF,AaIFA,C6BC8B,ClCVG,C0BKP,AzBItB,CyBJO,AWAwB,CpCID,CDTG,C0BKC,AWAA,AHKF,CGLR,CXA5BA,AWAEA,CHKqC,MAAT,GAAkB,CAAnB,CAA3B,UlCVFA;AyBQD,ACFCA,AMED,ACCCA,AEJC,AECC,AHKA,ArBJF,AlBQA,AEHA,AkCLE,AhBIJ,AENOA,A9BSH,AODJ,AIVE,AEFAC,AVaG,AiBNJ,ANEOA,AIAND,EREA,EwCNE,AHKA,AjBNS,ESCL,AOGA,ApBFF,AbNA,AKSE,C6BCD,AvCIE,C+BTC,AWAF,AhCIE,C0BHD,A5COA,AabA,CkCUC,CRLG,A/BSX,AEHS,ACTT,AOOW,CgCJD,ArCLA,ACSA,AIAE,CgCJD,AxCMA,AoBPS,A9BSlB,AabFC,ACSW,CYHC,AlBQE,C0CTD,AtBKA,CAAC,AENS,A9BST,AcJA,CIAG,CgCJD,AHKA,ArBJA,AlBQhB,CsCNmB,ACEF,A7BDN,CgCJD,ApBDiB,A9BSzB,C4BHiB,AENS,AnBF5B,AOOqB,C4BDC,ApBFF,AEIA,CmBAZ,ArBJa,AkBAnB,AdFqB,CgBIvBD,ACEsB,ArCnBT,AkCeS,AjCJR,CmCE0C,AICjC,CXAG,ATDO,AZKtB,CqBJgB,AWAF,AhCIE,EQHX,AEIH,CsBLe,AtBK9B,AVDa,CAAXA,CgCJU,AHKF,AjBNHA,CoBCH,AxBC6B,AEIA,CWLG,AQKF,ArBJhC,CkBAE,ClBAgC,CaDG,AKCF,AhBIA,CWLT,CAAf,CQKH,CnBA+B,CWLG,AQKF,AnBAA,EWLxCA,AXK+B,EdDC,C8BH9B,AhBI2C,CmBArC,CAAN,KnBA6B,GAAwB,AdDzC,EAA+B,CcC/C,SdDgB,EAA2C,SAA3C,CAARC;AyBHNA,AWAE,AxBCA,AlBSF,AEJA,AyCdF,AdGA,ATUA,AjBPIC,AyCNJ,AvCGED,AVFA,AEME,ASKI,EJEN,EwCNE,AxBCA,AWNE,A1BGFC,E4BEE,AWAA,ArCLA,EaME,ArBFA,ASKA,CoCJC,AxBCA,AZGA,CJEC,AGXA,CqCKN,CXAFD,A7BMU,AIFA,CDTC,CRIC,CqBEV,AEIW,AjBPXC,CiBOY,AjBPZA,EeGc,AWNE,CXMhB,ArBFe,CMDfA,CiBOiB,AjBPZ,AEHY,CHVN,AkBoBO,AfVA,GFGlBA,CiBOW,CAAf,CfVED,ARIM,CSKU,CcCY,AdDX,ETLa,CSKV,GcCtB,EvBNsC,ASK1B,EAAiB,CAAjB,ETL+B,ASKX,ITL5B,EAA6C,KSKN,CAAC,MAAZ,GAAqB,CAAzC,CAAJ;AgCAN,AELA,AEEE,AHIA,ArBHD,AhBKD,A2BZmC,ATWrC,AfVEA,AVaD,AJPM,AMFD,ASKED,AIAN,EREA,EwCNE,EFFE,AEEA,ArCLA,CiCQCC,A5BCAA,C6BAC,CGJC,AxCMA,AXLO,E+CEL,AIHP,AHIA,ArCEO,AGXA,ARIAD,AaKA,C4BDC,AhCCE,AIAF,C6BAC,AhDHN,CcNO,CiCQC,AlBEA,AvBNE,AaKF,C4BDRC,AlBES,A7BJO,AmBGrB,CnBHuB,AeGN,CgCDD,AzCJZ,AaKY,CLThBA,AKSiB,C4BDC,ApCnBL,AIoBO,CcCD,CAAC,AvBNE,AaKF,C4BDC,ChCCG,CAAC,CIAD,C4BDC,A5BCA,C4BDC,AlBEb,AvBNT,CuBMN,CvBNgC,ASKV,AIAA,CJAW,AIAF,CUCC,AdDV,CcCtB,AdDQD,AIAyB,C4BD/B,AELmB,A9BMa,E4BDE,CAAC,GAAG,AELlC,A9BMgB,E4BDpB,AEL2B,A9BMa,E4BDE,A5BCA,CAAC,C4BDC,CAA5C,EAA+C,E5BC3B,CAApB,EAAoD,CAAC,EAArD,E8BNI,A9BMqD,C8BNzD,EAA+C;ATE/C,ACGK,AMCHA,AELA,AEED,AHIG,ArCEJ,AyCfF,AdEqC,ATYrC,AwBdA,A/CQQ,AaKJA,EREF,I6BPI,EAAE,AOIE,A5BCA,CsBFM,CHTqB,AnBWzB,C4BDC,AELF,CtCQC,ALPA,CkCAC,AQKA,A7BAE,CqBLT,AOIU,ApCGF,CsCRV,ApBOW,CmBDT,AnBCU,EWNE,AOIE,ATViB,AhCMnB,CyCIG,AzCJF,CkCAC,AOIA,ATViB,CSUjCA,AlBEiB,AVDE,CUCD,AVDE,EAAE,CqBLD,ArBKE,CqBLzB,A7BhBa,AQqBW,CsBFnB,AtBEiB,CqBLI,ACGO,AZGpB,CAAf,EVDiC,CUCD,CvBNpB,CAAsB,AaKX,EAAe,CbL1B,CAAJ,AaKe,CUCgB,AVDnCA,CbLoC,GmCGjC,AZGP,EYHoD,MAA7C,EAAqD,WAArD,EAAkE,MAAlE,EAA0E;ADF7E,ACGF,AMCE,AELD,ADME,ArBJH,AhBMA,AiCZF,ANDE,AJUK,ApBRL,ARIQ,ASIF,AICJA,EREF,E6BPE,AOIA,AHTE,EGSA,CNDCC,CtBEG,C4BDD,ApBHA,AOGO,ApBRP,C0BIC,AlCAA,AaKE,CsBFD,AHTT,CGSU,APCL,ApBRK,ACQA,CyBJC,AbCX,AOGkB,AnBAP,AICE,CyBVC,CHQD,A9BIA,AkBAA,AfXA,C2BORA,AnCHS,CKOC,ALPA,ASIA,C0BDC,CPCX,ApBRL,C0BIE,ACGgB,AnCHJ,C4BIY,ApBRP,ARIX,AaKa,CJDX,AICY,CsBFD,CMCC,AzCJA,AaKE,C4BDD,ATVvB,AnBWyB,CJDD,AICA,CAAF,C4BDI,ATVZ,EhCMc,CyCIC,AzCJA,ASIA,AICE,CRtBlB,AuBqBR,EOD2B,APCO,A5BJX,ASII,AICX,CsBFY,AnCHzB,CaK4B,C4BDd,CAApB,A5BCmB,CAAnBD,EsBFF,EAAyC,CAAC,CPCrC,AnBAsC,CAAC,C0BDC,APCO,EODpD,EAAiD,C1BCjB,C0BDmB,CAAnD,C1BCqD,C0BDC,A1BChD,EAAkD;AyBHvD,ACGCA,AMCA,AIJF,AxBCD,AhBMC,AiCbqC,AQHvC,AdIIE,ANQGF,AECLA,AjCKE,AYNA,AwCZJ,A/CSS,A6B6BT,ApBzBUA,ACAH,ELGL,C6BTA,COME,ATTAE,ANQS,EeCP,AbAE,EODE,A9BIF,C6BPC,AOIA,AIJA,AlDSA,AYNA,AGCO,CLGN,E2BZNA,AzBQA,CsCHS,AbLTA,ArCcA,AeLG,CDAS,ACAK,CHDN,CsCHC,AjBIE,AjCKF,CkDTd,AbLEA,CGQgB,A9BrBL,A2BaN,AzBQL,CmBAwB,AECP,AnBAA,E0BDE,CHRnBA,ANQ2B,AjBCP,ACAjB,E+BAiB,A/BAO,C+BAN,AbAE,CFDQ,AECP,CFDQ,CeCR,CfDG,AhBCxB,E+BAwB,A/BAO,CyBDJ,ATAO,A/BMrC,CwCN+B,APCd,AjCfD,Acee,C0BDD,A1BCE,C0BDhCF,APCFA,EaAuB,CfDM,CjBCI,CgCAK,AhCAhB,CgCAA,AfD0B,CeC9C,ChCAyC,CiBDtCA,UjBCiD,CAAC,KAAK,GAAG,CAAT,CAA9CA;AyBHNA,ASFF,AEED,AHIG,ArCGF,ADLF,AkCTuC,AVWrCA,A1BEF,AFNO,ASIG,ACAR,AGCE,EREF,EqCHE,AtCFE,EuCJA,AfME,AlBAF,EwBJI,ArBKF,CqBLG,CQID,AtCFE,AkCT2B,ApCavC,AWDU,C6BDC,AxCEX,CgCNc,AQIJ,ArCGE,C6BPG,AQIX,A7BCS,CqBLG,A7BOF,AKHA,CwBJG,ArBKb,C6BDY,CjCAC,AICA,CqBLG,CxBID,CwBJJ,AhCMf,C0BFuB,A1BErB,CwCFoB,CCNC,ADMA,CRJG,ASFF,ADMF,AJXiB,AVWb,CeNH,ADMnB,CRJW,ASFT,AtCjBS,AiCYwB,E7BWX,ACA1B,CwBJ6B,AzBIF,CyBJG,ASFF,AjCMA,CwBJG,GAAG,AzBIR,CmBAS,AnBApB,CyBJc,ASFK,AfME,A1BEtC,CyCRqC,CAAD,AlCME,CkCNhC,AzCQJ,CgCNwC,EAA5B,AzBI4B,CkCLpC,AfKoB,AnBAiB,EmBAzCA,CnBAoC,CyBJW,AzBIF,CPE7C,CgCNiD,GAAG,AzBIhB,EyBJW,AzBIK,CAAC,EyBJI,CzBID,CyBJG,CSDtC,CAAC,CTCwC,ASDzC,CAAjB,AzCOJ,AOFoC,CyBJxB,AzBIJ,CyBJNA,ChCMgB,CyCPU,AzCOR,CAAtB,KyCPoC,CAAC,CAAD,CADlC,EACuC;ARIrC,AMCA,AEJA,ADKA,AvCMF,AEHA,ADN6B,AkCF7B,AQTF,ArBUOA,AEMA,AhCIH,AWXA,AyCTJ,AvCMI,ARIC,A6B4BL,ApBxBS,ACAL,AGCE,EREJ,EqCHE,AjBJS,AjBJT,GLcK,AKdF,E2BMEC,AMCA,AdGO,AhCIP,AWXA,AGED,CgCEE,ACCA,AjBJS,AjBJT,CmCGC,ADKA,ArCGA,AiCRT,A5BKS,CgCAD,AfEH,CQJM,AMCA,ACCT,AvCMF,AEHW,AoBPS,AEMF,AnBVP,AKSA,CsBHC,AVDZ,AZII,C8BNF,AlBED,AhBGY,CiCAC,AvCME,ARAd,CwCRa,ARIV,AnBVU,C2BMb,A7BHA,CmCIA,AdGsB,AhCIP,AeNA,CyBFC,AhCQlB,CgCRmB,AMCA,AHJnB,AhCAmB,AEHA,CiCOC,ACCA,AJLR,AhCAV,AIKkB,CgCAC,CPFC,AOEF,ArCxBP,AoBoBO,AjBJE,CiCOC,ACCrB,CjBHU,A9BSV,C8BTW,AjBLE,AEQb,C+BDA,CdGG,CQJH,AMC0B,CAAC,AdGO,AnBVP,C2BMC,A3BNnB,C8BGX,A9BHE,C2BM8B,CAA9B,AMC+B,AHJR,CbCL,CUEe,CVAnC,GgBCE,EAAuC,EHJzC,EAAqC,AbCjB,EAET,SAFS,CAAfD;ASAH,ACGE,ACCC,AKAD,AEJH,ADKA,AvCMH,AEHE,ADP6B,AkCA3BE,AXMF,ACHA,ApBPE,ARID,ASIO,ACAP,AGCE,CVpBL,CEsBE,AsBDA,CjBJA,C4BFEA,A9BJA,E2BME,AMCA,AbAA,CDGC,AnBVA,C0BGC,AOIA,AdGA,ACHA,CMJC,AEIO,A1BCP,CLGC,ADPqB,AIJrB,CiCOC,AjCPA,C0BGC,A7BQA,AsBDL,COPH,APOF,EOPa,AhCQA,CyBDC,ClBFC,C6BJbA,AVGc,CUHdA,ClCA2B,C+BEV,A3BNA,C2BMC,A9BvBP,ADqBgB,AwBGT,ApBPA,C8BIlBA,CAAK,EGGiB,AdGxB,CcHyB,CNDC,AMCF,AHHtBA,A7BIwB,CgCDtB,AhCCuB,C0BFR,A3BNS,C2BMxB,A3BNyB,C4BOxB,ARAD,CQAkC,ARAtC,CODgC,A3BNJ,ACQF,CmBDO,ApBPd,ACQX,EDR2B,MAAhB,C2BMuB,A3BNxC,C2BMyC,CAAD,CAAtC,CCCC,EAAkD,MAAlD,EAA0D,IAA1D,EAAgE,MAAhE,EAAwE,gBAAxE,EAA0F;AFH3F,ACGD,ACCHF,AKAI,AtCQN,AEJE,ADPA,A0CXF,AnBiBC,ACHG,AmBdJ,AjDoBO,AiBNA,AcwBP,ApBvBS,ACAL,ELGF,EuBJE,EMJE,AEIE,AKAF,CpCIC,CoCJC,CpCIC,APEO,AiBNA,E0BAL,ArCHT,AMIS,CwBLC,CpCUL,C8BNO,A9BMO,CoCVN,ANIA,ExBHb,AWGK,CqBAa,ArBAK,CAAlB,CXHS,ANST,AYLH,C0BDmB,ArBAK,CmBJtB,ApCUuB,G8BNf,CaAY,AbAtB,CaAuB,CAAC,CbAC,EaAE,AbA3B,CaAsB,CAApB,ILAiC,KAAK,SAArB,GAAiC,gBAAjC,GAAoD,EAAzEA;AHCK,ACJF,ACGF,ACCDC,AOLA,ADKA,ArC1Ba,ADwBXC,A2BFJ,AHIG,ApBPC,AVaF,AiBNA,AlBPKF,AGGL,ASKK,ACAJ,AYJIA,ATIH,ITHAE,A2BFE,AlCHO,AyBIA,CYHT,CEME,AOLA,CPKC,A3BTD,CDEE,AXAS,AgBQT,CoBDQ,ASAP,A5CMA,AiBNA,AfJA,CoCIC,AvBCA,CqBLC,AEITD,A5BPS,AXAU,CkCGP,ChBID,ANCA,AIAA,C6BDX,AtCFEC,AILU,AOOL,CmBJM,A9BEXA,ANQF,AEVA,AaKE,CqBLY,C1BHZ,AOOa,AFCA,CEDR,AOHkB,CYDR,A9BEfA,AILe,CyBOZ,ACJI,A9BEF,C6BEmB,AlBAP,AOHS,CYDR,CSDC,A9CFS,C8CER,AvCGpBA,CuCHmB,A5BKE,C4BLnB,A5BKe,GAAQ,C4BLC,A5BKT,AOHdF,GPG0B,CAA/B,EkBAK,AUL6B,CAAC,CVKQ,AULT,CAA9B,IACA,CVIC,EAA8C,IAA9C,EAAoD,MAApD,EAA4D,AUJ5C,CAAC,CAAD,CAAjB,IAAwB,MAAM,CAAC,CAAD,CADlC,EACuC;AVKvCC,ACJI,AOGA,AEHF,ADIH,AXLgC,AeVjC,AdOI,AePJ,AvCOmB,AVclB,AiBNA,AdFM,ADFN,A6B2BD,ApBtBQ,ACAP,AGAK,CbtBCD,KiCqBD,GDRG,A/BMO,CgCEN,AQDC,CPHAC,AOGC,AEHD,EVIE,ApBCA,CoBDXA,ApBCY,CqBLC,AOGC,AEHZ,AXJA,AvBSW,AIAT,CqBLU,COGL,CTPO,CEIC,CAAb,COGgB,AxCDf,CiCFe,AjCEO,CiCFN,AOGC,ChCEhB,EyBLkB,COGE,CAAlB,IPHJ,AOG6B,CxCD5B,CiCF2B,AOGG,CxCDK,CiCFN,CAA9B,COGmC,CPHF,AOGJ,GTPF,CSOa,CAAC,ATP3C,ISO+C,EAA7C,EAAkD;APFhD,AMID,ALFL,ACCA,AKAM,AEHL,AZF8B,AHK/B,ApBPI,APMJD,AQGK,AIAF,AiBPLA,EFKE,EELI,EtBFA,APME,CmCCDC,CFHC,AOGA,AXLE,CUMM,ALFP,AMCA,AjCPA,CuBEwB,CKKtB,ANLE,CMKD,AKAA,AbAA,ApBPA,CiCOC,AbAA,CaAC,CNDZ,ACCa,A5BPA,AsBEE,CMKVA,AzCIJ,C8CJc,A9CId,CyCJe,A5BPA,CiCON,AjCPN,APMe,CiCFD,AEGA,ALLa,ADApB,CIEQ,AJFE,CIEH,AHFa,A9BIT,A6BJX,CIEL,AEGe,ARAX,AELZD,CWKwB,AbAtB,CAAuB,CMHC,AOGA,CLAC,AzCIxB,CyCJyB,CICrB,ACDsB,CDCQ,CCDzB,CxCDqB,EmCC/B,CnCDsB,CmCCY,AKAA,CLAC,AnCDC,CwCCA,ELAE,ARAtC,CaAuC,A9CItC,CuCP4B,AEG7B,CKAU,CLAgC,ARAA,CYCrC,CJDuC,CICQ,AJDpD,AKA6C,ELAE,AKAzC,IDCD,EAAuD,AZD5D,EMH4C,CAAC,AMIxC,EAA4D,KNJb,CMI/C,ENJkD,AMIkB,CNJ7B,AMIvC,CNJmB,CMIoD,CNHpE,AMGH,EAA0E,aNHxD,CAAC,OAAO,GAAG,CAAX,CADC,EACc,CADd,CAAlB;ADIN,ACFK,ACCN,ACCGA,AKAI,AVLN,AHKD,ArBCG,AwChBJ,AvCSK,APKDA,AJLFC,AgC6BF,ApBrBK,AIAF,KLXC,CXGE,CoCMCA,CGAG,AKAF,AxCDE,CMED,CVPPA,CoCMS,AGAE,ALLX,AvBDS,CyBMC,EGAI,CHAD,CAARA,AhCDW,CMEd,C0BDc,AGAE,AGJlB,CHImB,ALLnB,A9BImB,CgCCD,AGAA,A7BCA,C6BDhBD,AKAiB,CAAC,AVLN,CEKO,GQAf,AFJN,CNIyB,AQAA,CRAC,AQApB,AlCCJ,ENF4B,CAAC,GgCC/B,CMJA,CNIkC,CAAC,EhCDjCA,CgCCoC,AMJtC,ENIA,CMJQ,CNIkC,EAAE,CAA5C,EAA+C;AAC7CA,AGAA,AKAG,AEJL,AZAEE,AOEA,ACFAF,AdKGA,AjBRI,APMPA,AQnBF,CdPgC,CAAL,EyC2BzB,ALJAE,ANKS,G9B5BqB,CsC2BxB,AMJA,A5CvBV,AM0BU,C0CHD,ALEA,ELEI,EMJE,CNIC,AFJZA,A9BGY,C8BHZA,CKIY,AGJE,AdKO,CWDR,AnCDE,CgCCC,AGAF,AEFd,CLEiB,AFJjBA,ANKwB,CQDR,AGAJ,ALJP,AQAa,AdKO,CQDzBF,AGAA,AEFiB,AbGS,CaHR,CAAlB,CFEoB,ALJpBE,ANKwB,CcLV,CAAU,AdKO,CAAC,CxBFN,CwBEF,AxBFG,EsCHE,AdKO,CkBLhB,ElBKI,CxBFT,CwBE0B,EAAjB,CAArBF,AxBFkC,GmCCC,CACpC,GGLsB,CIAnB,AJAwC,EIAR,C1CGW,CAAC,CsCHzB,EAAV,CIAT,CJAiD,CIAT,A1CG7CA,CmCCsC,EACnB,AOLd,CJAsD,CIAT,IPIZ,CGJxB,CHKa,AOLtB,AJALA,GHIsC,EACN,MADM,EACE,YAAY,CAAC,CAAD,CADd,CAAtC;AHCA,ACHE,AEIF,AjCMJ,AoCXI,AOlCJ,ACsBA,AvCSM,AXAJ,AgC6BF,ApBpBC,AIAC,IoBFE,AGCA,CjCMJ,C+BVM,A/BUN,AKdM,AXAA,EoCOE,CpBEC,CuBDC,A5BRA,AKSR,C0BNS,CNIC,CGCC,A5BRA,ELcb,CiCNI,AjCMF,AoCXE,A/BHE,AXAU,EqCIE,CAAC,CrCJjB,EoCOoB,ApCPA,CoCOC,ECHjB,GAAsB,E/BU5B,GAAE,C+BVI,IDGgB,EAAkB,E9BOtC,I8BPoB,EAA0B,GAA1B,EAA+B,G9BOnD,G8BPoB,A9BOH,C8BPf;AACA,ACHE,AEIH,AKFG,AtCQJ,ACRE,AINE,APKF,AiBlCJ,ALsCC,ApBLM,IwCGH,EQDE,AjCNA,CLcG,CsCRD,AxCDA,CGCC,AXFO,CwCGN,CQDC,AjCNA,EyBOE,AQDP,CjCNQ,CbWC,AaXA,CyBOX,CxCHG,CeJD,AfImB,CQCN,CAAC,KESlB,ACRE,EXFG,CUUuB,ACRF,AHDxB,CRDgC,CWEhC,AHD0B,EES5B,OVVK,EAAyC;AwCI7C,ACHE,AOEC,AtCQN,A6BdI,ANOJ,AlBPK,APKC,AJLF,AgC4BJ,ApCxBE,CUQF,CVRE,EiCGI,A7BPF,CqCHO,COSL,AxCDA,EwCCE,A5CNA,CmCAC,EEIE,AOEA,A5CNA,AJIA,CAAC,CgDEN,ETNF,AnCAW,CAAC,EmCAE,CAAd,A/BKe,CAAC,AJLhB,CJIF,CiCGsB,EjCHA,MAAM,CQCX,ARDY,CQCzB,KRDkB,CAAc,UAAU,CAAC,SAAzB,CAAtB;AyCCI,AEGJ,AKDG,ApBAE,AlBSP,AuBT2C,AlBNxC,APKE,AiBnCL,ArB8BG,AaSI,AoBNA,ArCCL,E2CGA,A3CHA,CIPA,GqCOI,GbEU,AxBNP,AaSO,AoBNA,ErCCL,CyCAC,AzCAA,CcCT,C6BEW,A7BFX,C2BDY,AEGA,AfDR,ASHA,CTGgB,ESHE,GMIvB,A3CHA,CyCAI,AxBKC,AjBLe,CaHpB,AIQ4B,C0BFN,A7BFrB,AGII,C0BFL,C1BE+B,KWH1B,EAAiC,AfLtC,AbGA,GAAkC,EcCjC,CcCI,EAAyC,CfL9C,EeKK,C5BFL,C4BEmD,GfLnD,GeKK,AfLK,EeKiD,KAAtD,EAA6D,MAA7D,EAAqE,QAArE,EAA+E;AYCpF,ACFG,AEGH,AKDC,ApBADA,AKDyC,ApBJvC,AyCpCJ,A/CsCO,A6BwBP,AnBlBEA,AoBNA,ArCCD,GgDlByD,GpBoBlD,AfLF,AIQE,GuBHC,AGCA,ApCJO,A8BAP,CTGG,AKD+B,AIFjC,CxBFC,AIQE,AoBNJ,EGGP,AZAa,ASHF,C9BAN,AUMS,AoBNP,C9BAa,C8BAN,CAAP,CpBMW,CoBND,CJEwB,ApBJvC,AwBEK,CMIP,AfDqB,ArBHhB,C0BEoC,AhBInB,AoBNF,C9BAQ,AUML,AoBNhB,CTGiB,CXGV,AoBNS,CAAhB,CAAP,CpBM4B,CAA5BA,GWHqB,GAAc,EAAnCA;AYCD,ACFE,AMIDC,AJDD,AfDCD,AUHE,AOEA,AZKF,ApBTE,ASOG,AdJH,AiBnCJ,ArB+BI,AGGF,AUMA,AoBND,CvBzBqC,CAAL,EVsB7B,E2CQE,AnBFE,CrBHDA,CwCKC,A3CRA,CwBMG,AUHF,AOEA,AhCJA,ASOO,EyBAL,AdET,AzBNS,AJJA,AGGE,CwCKXC,AnBFY,GNEP,CMFW,AUHd,AxBzBkC,AQ8Bf,CMFJ,Ad5BZ,AQ8BA,EgBLY,AhBKO,AdJP,ADDjB,CqBGY,ApBFM,CoBEG,AxBNH,CSChB,ATDO,CSCY,ANEE,CCCd,AJJY,CIIE,CoBEX,AiBDV,CjBCFD,EiBD2B,AZK3B,A1BPA,CsCE4B,AZKhB,CYLV,ArCDO,ADDsB,ECCA,CyBM/B,EAAkB,AzBNT,CAAP,KKH6B,GyBE7B,GzBFA,OoBSF,EAAuC;AcDvCC,AGLE,AtBGFD,AKIEE,AXFF,AdJC,AJJGF,AGGF,A6BuBJ,G5B7BEA,CyBaEE,EcFE,AnBFE,EmBEA,CnBFG,ANEF,CAAP,AlBRU,C2CQD,A3CRE,AGGF,C2CAE,AtBGC,EKIVA,CAAAA,CLJc,CAAC,ArBHF,C2CAb,A3CAc,C0BOdA,CiBPiB,AtBGP,AKIL,CLJc,GKInBA,EcFsB,AGLtB,AtBGU,AKIJ,A1BPO,CwCKU,AnBFzBF,ArBHE,C2CAyB,EHKC,GAAG,MAAP,CAAxBC;ANJA,AMKAA,AGLI,AEEC,AxBCLD,AjBAE,AkCDA,AbEJ,ACGM,AlBXJ,AOSD,AlBTY,AGIV,IyBIG,EeCA,AnBFE,AKIF,CQPCC,CMKC,AFHA,COAQ,AzCCP,AIPA,CkBWC,CQPCG,AMKA,AGLE,CjBOD,CLJG,CaHH,A1BJE,EaOI,AKGR,CQNK,A1BJE,C0BIf,AIEgB,ACHhB,ELCgBA,A1BJJ,CJOV,CiBAoB,AICA,CSJL,AbGM,AiBDF,A9BNA,CaOC,AjBAA,AIPA,CaOtBJ,CaHoB,AMKI,ApCFtB,CoCEuB,AhCTzB,EqCMK,CLGuB,AKHO,EXFnC,AIEM,CEGyB,CNLH,CKD5B,CLC8BI,AIEI,CAAC,EJFnC,AMKyB,ENLQ,CMKO,AGLX,ALEW,CEGhB,AFHiB,CEGzCH,ADNA,CMGK,EAA+C,CFFzC,EAA0B,ALEF,CAAc,EOA5C,EAAuD,CFFjD,EAAkC,AJD7C,CMGK,ANHU,CAAf,CMGkE,CPAN,ACH1C,CDG2C,ACH7D,CICW,ALEiD,CKFxD,ALE+B,ACHd,CDGnB,COAG,CPA6D,COAQ,QNH1E,CMGK,CNH8B,CMGkD,iBNHrF,EAAuD;ALErD,AOEFA,AEFG,AEEHD,ARDK,AhBELA,AiBDI,ACHFA,APFA,APMuC,ACIrC,AlBXL,APIC,AJLmC,AGKpC,AsBCM,ErBDL,C0CTO,CTSL,ASTF,EFWI,AIAE,AxBCA,AKIF,A7BZ+B,E0CI3B,CFEM,ALJP,AVIO,CzBNoB,CgDOvB,APAF,AZKA,A7BZgC,C4CO/B,CpBCG,AKIF,AzBPA,C4CEG,A5CFF,AJLsB,C4COrB,A5CPgC,CqCK/B,AbGE,AxBRkB,CqCKnBI,ArCLXJ,C4COJC,EPFc,AZCT,CYDH,AZCwB,CDEJ,CwBDC,AxBCA,AkBJA,AjBElB,CYDe,AbGE,AWNpB,CXMFD,ACF8B,CiBFJ,CFErB,ALJoB,A/BGzB,AqBCK,CuBCuB,ARDK,AXMhB,CYLb,AhBD8B,CgBCN,ArCFA,CsCDG,APF7B,INQM,EmBHM,EXFqB,AZC9B,CYD+B,AWEI,APApC,ChBD0C,EeAzC,ApCDL,EoCCkD,CHDR,AKDxCA,GLC2CI,AWE/B,ERDT,CHD8B,AWEiB,CXFlD,AGCwD,GAArD,CQCLJ,CRAA,MADK,EACG,gBADH,EACqB,WADrB,EACkC,6BADlC,EACiE;AHDrE,AMID,ALDK,AMDLC,AEFD,ANECD,AhBCAC,AlBOF,AmCTwC,ACFpCD,AdGuC,ACKrC,AzBPJ,AiB3CF,ArBsCM,AYWC,AaLLA,KnBSF,CsCRM,AJAE,AhBCF,AlBON,AuBHM,AJNE,CDED,CkBJG,CCKD,ALDO,AlCHP,AQMO,CYHN,AIDiC,CJCzCC,CKIU,AJNE,CzBND,C6BYC,A7BZA,C2CSC,ArCMf,ANfe,AyBME,CnBSf,EqCNgB,A3CTA,E4BOyB,ACEjC,CcAR,CCFoB,AhBAqB,AxBFzC,AJLoB,C2CSC,ADLE,A1CJZ,E4COY,AnBDE,CmBCD,AFHE,A9BOrB,CZXoB,AYWO,CZX5B,C2CSuB,AlBHE,EeCE,AlCQjC,CgCPO,A1BGA,C+BF0B,ALDO,CMDtCA,AJAkC,AlCQlC,AMJuC,K+BFvC,EAAuC,ErCMvC,AmBTAD,IbKK,C0BHA,C1BGiD,C0BHC,GIJnB,CAAV,EJIrB,AIJkC,CAAb,CJIqC,AhCO/D,CoCX0C,EpCWxB,AMJb,E4BJ0D,A5BIK,K4BJA,EFC/D,EAAwE,EIJpB,CAAC,CAAD,CFGvB,AEHR,CJIrB,CIJyD,CJIuB,AEAnF,QFAG,EAA0F,IIJlB,CAAC,CAAD,CAAnD,CAAxBA,WFGgC,GACA,EADlCA;AGGEA,ALDFA,AMDA,AIDA,A1CSA,AmCVsE,AQhBxE,ArBsBE,ACCI,AEHC,A3BJN,AJLI,AYWH,AaLAA,EmBCA,EKlBI,CjDQF,CsCWI,AGHgE,AZOlE,AJNE,CuBADC,A1CSE,CqCNC,CZAM,CYAJ,ALDA,AbFA,CuBAD,ACjBE,ArBsBX,CoBLU,CLGG,ALDA,AbFA,EmBCA,AIDA,AjBGR,CaFS,AIDTA,AjBGgB,CUJjB,COCY,EJChB,AIDkB,CVEG,AMDF,AfKA,CEHd,CiBHgB,AnBMA,CSJG,APCK,CzBM7B,E0CTyB,CLGG,AKHF,A1CSE,CqCNC,AfE7B,CAAY,EUHS,AhCOrB,E0CTA,ApBKA,AHLuB,CkBGK,ALDO,APC9B,CYAHD,AKHgC,ApBKhB,AHLO,CaEzBA,AUFmC,AjBGO,ANHhB,CAAD,CAAZ,CuBAyB,AvBAtCA,EuBAA,AnBEQ,EmBFkC,EAAE,CAA5C,EAA+C,IJC/C;APFA,AMKEA,ALDFC,AMDA,AIDED,ARCF,AhBAA,AlBQC,A4BVC,AOAC,ACFD,AOfgC,AtByBpC,ACFIE,ACCE,AEHJF,AdRK,AjBDJ,AaWC,AYLFA,CnBOF,C+BTE,AOGA,EAAE,AjBME,ACFFE,CaRA,CHKE,AEDA,AXKA,AEHE,ANHA,CaED,AMDA,AJAA,AhBAAD,CmBEG,AKHA,ANHF,CREC,AjBJO,C0BQJ,ALDF,AbFE,CaEVA,AUFW,AxBCF,AiBFA,CjBEC,AKKA,AZXL,C0BQQ,A1BRK,AQKL,CYFD,AWEE,ArBOA,ACFZC,ACCU,AhBDD,CwBPE,AbGA,AIIXA,CGFc,CJShB,CqBZkB,ARClB,AXAQ,CmBDW,ApBKjBA,AGFiB,CaFD,AIDA,ARCA,AZIX,CSPP,AOGmB,AIDjBF,AxBCF,CoBAkB,A/BIhB,C+BJF,ApBAqB,AkBJA,AzBFhB,CoBGiB,AbGA,AUFpB,ANMAE,AfAmB,CkBFI,AdRK,CyBEN,AfexB,ACPQ,AGFkB,CPFD,AUFA,CSIG,ATJF,CSIG,ATJ3B,ArBMA,CwBPF,AbGA,APNK,CJUuB,CWJE,APNO,COMN,AOEZ,CNHI,CkBGY,AZAnCF,CJSA,AFZyB,CDCU,AGWvB,AFZc,CkBGY,AlBHb,CkBGG,AlBHf,CkBGXA,AlBHFA,GDCA,CkBJE,AfeF,CHX2C,CkBJC,AfevB;AUbtB,AWEGA,ARCA,AhBAAA,AiBFE,ACFAA,AOhB8B,AtB+BlC,ACPI,ACCA,AEHJA,AdRA,Ae1CF,AnBoDM,AYLJA,A7BDFC,EqBJE,EuBME,A5CFA,EgCME,ACCA,AEHE,ANHA,CeCD,CQDG,AxBCA,EgBAA,AEJE,AOhBwB,ArBwB1B,AfAA,C4BNC,CbMC,AXVA,CAAC,COMG,APNJ,CAAV,ArBIa,C8CFG,AdOR,CJHS,ACDA,CZKD,AjBNA,CoDCG,ANHA,AbSF,AZXA,ArBInBA,C6BCsB,CIMD,AEHE,ANHA,CuBAC,CnCKD,C2BJC,AEJE,AOhBU,AlBsBV,AdRF,CuBMC,ACFnB,AxBJmB,AQKE,CwBnBS,AhCcZ,CAAtB,CQK4B,EiBHxBD,ElBI4B,AXI5B,AYLgB,CDCa,CAAD,AXIA,CWJf,AOEkB,CFH3B,AEG4B,ANHA,CAApCA,CDCsC,EgBAhB,EAAkB,CQDG,AjBGnB,CiBFpB,CxBAFA,AOEFA,GSFsB,EAA0B,GAA1B,EAClB,IQFuC,EACtB,ARAC,EACV,IQF+B,EACd,GADc,EACT,KRAZ,CQDqB,CAAzCA,ARGE,yBAFkB,EAES,CAFT,CAApB;AGEA,ALDF,AMDA,AJGE,AhBFAA,AjBCA,AkCJqB,AQLvB,ArBYI,ACCA,AEHJA,AdRA,AjBFA,AaYM,AYLNA,AQDK,EhBJL,EuBQE,EZEE,ACCA,AEHE,ANHA,CaCDC,AMDA,CDEC,ACFA,ApBCE,AXIF,CNHC,APTA,AiCMO,CUGN,CLDC,AMDA,AKPT,ArBYS,CUJC,AMDL,A3BLK,CWUC,AXVA,AjBFX,C2CSY,ACFA,ApBCE,APNJ,AgBIL,CUGH,ALDW,APEE,AdRf,AgBIoB,CKEfA,AMDS,A/BKA,C8BHC,AnBDE,AKKF,AJNE,CaCD,AWRhB,AlBUkB,CaHD,AJGA,AjCDf,A0CTU,ApBaK,AZXA,AJUA,CyBJC,AbDE,EeGA,AjCDA,C+BDC,AzBIA,CNHnB,AUPoB,AJUA,AoBNjB,ChBJkB,CAAD,AgBIS,ChBJ/B,CWUiB,AGFW,CAAC,AlBEZ,CoCZjB,ApCY4B,CAAC,C+BLC,ApBCE,AyBRP,CLOM,ApBCE,CAAC,AIE1B,CUFyB,CAAC,CdAG,CAAL,CoBDhC,ApBCiB,AOEW,AlBES,CkBFnB,CaHqB,AbGE,ANHX,CaC9B,AMDwC,ApBCE,AyBR1C,ApCYwC,CYLR,CaCU,AWRL,AxBOJ,CaCU,AMDA,AnBAX,CAAF,CmBA9B,AJGE,A3BE0B,CyBJkB,CMDC,ApBC7CD,ACDoC,CaCtC,CMDiD,A/BKA,AYLT,CaCU,AMDlD,AKPA,AxBOyC,CAAD,CaCY,AMDA,AKPL,AxBO3B,CaCpB,CPEkB,AlBEU,CyBJ2B,APEvDA,CNH+C,CZKU,AYLzDA,GZKiB,IAA+C,KAA1D;A8BFF,ALDFA,AMDA,AIAA,ARGA,AhBFA,AiBJmF,ACDjF,AOFFE,ArBWE,ACPI,AEKR,AdRA,AjBFD,AaYO,AYLNF,AQDA,CjCrBmB,EAAdA,C4CsBH,AJGA,AhBFA,AyBPAE,CpBIAA,CeEE,AHHiF,AbQjF,AHLE,CAAC,CaCC,AUDF,AxBCA,CoBDC,AIAA,AxBCA,AOEA,AdRA,AgBIA,CUGC,AHCA,AhBFA,ACDE,CaCC,AILFD,CCMC,AnBDJ,AIII,AKNA,COIC,AhBFT,ASFS,CKEG,AUDF,ARGV,AZEU,AHLE,CkBED,AKFX,ANJW,A7BSA,AYLE,CkBEP,AnBDM,AkBLA,CMIC,APHX,CQHFC,AxBMQ,CgBHyF,ACDlF,AOFfA,AlBSe,AdRjB,AQKmB,CkBEA,ADNf,AdMI,AGCU,CYDE,CCFA,AFJA,ATGV,CUGY,ACFD,ApBCA,AkBLA,AOFnBA,ApCWI,C+BLc,AKNb,AhBKe,CWCpB,AXDQ,CUGe,AnBDD,AkBLA,CTGC,CUGN,AMRjBA,AhBKQ,CQFN,CVMa,ANHP,AQDkB,CFIrB,AEJG,CKEsB,AdAF,AkBL1B,AXO0B,CYDE,ALA5B,ALH2B,CUGE,ADND,AjBIE,AQDxB,CTEuB,CkBLC,ATGA,CUGE,ADNhC,ATGM,CTEI,ACDwB,CkBEnB,ADNkB,AjBIE,AQDF,CUGnB,AVHR,CTE6B,ASFvC,CRCkC,CkBEU,AlBFD,CkBEE,CAAC,EnBDD,AOEtC,CYD0C,ALDjB,APEhC,EYD4C,ALAvB,AdD2B,GAA9C,CCDgC,CkBEsB,AlBF9C,CaCsB,CKC0B,CLA7B,AbDzB,EkBCyD,EAAjB,AlBDpC,CkBCU,AlBDT,GkBC2D,AlBDhE,CkBCA,AlBDS,EkBC0D,CLA9B,CAAC,CAAD,CADT,EACc,GbD1C,GaA4B,CAA9BF,AbA0B,IAAI,CAAC,GAAL,CAAS,WAAT,CAAxB,GACA,IAAI,CAAC,GAAL,CAAS,IAAT,CADA,GACiB,IAAI,CAAC,GAAL,CAAS,IAAT,CAFrBA;AWGK,AOAC,ALAJ,AMFAA,AIAE,ARGF,AhBFA,AiBJC,ACDG,AdSF,AXVL,AJUM,AYHL,AQHD,IKGG,AECA,AhBFA,EIIE,CfHA,C8BAE,ALAA,AMFE,ApBCF,AkBLA,CNMQ,AEAP,AdDA,ACCA,CkBAC,ALAA,AUFC,ARGD,AhBFA,EcCF,AdDA,AIII,CUHR,AECS,AhBFT,AXIS,AYHA,CeCT,AZEU,CoBLE,CVEA,AdDA,EIAN,CUCN,AUFgB,AvBEX,CiBNW,CNMb,AQFgB,AFJF,CNMQ,AMNT,AjBME,CDDC,AkBLf,AjCAN,CmCIwB,EpBCA,AkBLA,AjBMA,CAAC,CmBFG,CAAC,CIArB,EJAgB,ApBCM,ACCV,CmBFa,AnBEF,CuBFI,CJAA,AIAC,AxBCH,EYC5B,A3BNL,AgBMmC,CmBFG,ApBCxB,ACCsB,CWAQ,CQFpB,AIAW,CJAjCA,ApBCqC,AkBLA,CAAC,AjBMT,CiBNQ,AjBME,CuBFI,ANJvC,AjBMyB,CWA1B,AYFyC,AvBE1B,ChBNpB,C2BMoD,AZDP,ACCA,GDDG,CCCC,CWA5C,AXA6C,CDDhD,CYCyD,EYFvD,AvBEyC,ChBN7C,AgBMuD,CuBFK,EZEvD,A3BNS,CgBM6C,CWAQ,AXAtB,CAAzB,CAApB;AWCAC,AOAK,ALAH,AUFI,ARGL,AEPI,AfgBL,ACPI,AGHJ,AtBNE,AISI,AYHP,IaAG,EFAE,ARGA,AGHA,CJUG,GSVC,AEAA,C7BNC,CkBgBT,CSVW,AEAA,CFAXA,CYFa,ArBYE,AdPF,CyBHX,A7BNY,CmBSC,EAAE,CoBLX,ErBYgB,CAAC,CIVX,AlBGN,CJTJ,EkBgBF,ICZQ,GGEc,CAAC,UAAD,CAAlB,CAAJ,EAAqC;AYClC,ALAF,ACCI,AKJH,AICG,AxBAH,AlBWG,A4BZH,APcF,ACRI,AGHF,A5BHG,ASMH,ACAG,K8BPH,CfOE,EgBNE,CLIQ,AfHPA,AlBWO,A4BZP,A/BAO,EwCGL,AZAA,EPFE,CAAC,AZKD,C+BHE,EAAE,AnBFA,CAAC,ArBDX,CAAmB,EwCGL,ACHA,ApBCA,AOEA,CYAN,AnBFX,AOEkB,EaHE,ApBCA,AlBWjB,AsBNiB,AhBApB,CYLqB,AlBWO,AHZzB,CwCGoB,AfGD,AhBAD,C+BHG,AxCHM,CqBCN,AlBWrB,CqCTuB,AnBFD,ClBWQ,CMNjC,C+BH6B,AnBFD,AUD5B,AHGiB,CAAjB,AnBG4B,C+BHL,CTHQ,CNMA,CWF5B,ALJH,CKIyC,AfHzC,CmBEoC,CAAC,ACHrC,ApBCoC,EoBDE,ApBCA,AZKtC,C+BHwC,AnBFxC,CZKuC,C+BHhB,AnBFkB,CmBEnB,AfGA,EAAqB,CeHK,CAAC,CAAC,EJC/C,AXEmB,CeH+B,CJCK,AXER,CeHF,KAAY,AJCzD,EID2D,AJCI,GIDD,EAAjB,AJC7C,CIDmB,CJCmD,EIDD,CAAjE,EAAoE,CJCxE,EAA8E,iBAA9E,EAAiG;AHDtG,AOCI,AJCJD,AKJI,AICD,AREH,AhBFI,AlBWJ,AoChBI,AdUE,AGHL,ApBPI,AOSA,AfLLA,ASMI,ACAD,E2BHH,AlCSA,G0CfE,A1CeC,CqCTC,AJCE,AKJF,ApBCA,AlBWA,AoChBA,AvCIE,CiCEDC,AQFA,CDGC,ChCPQ,AOSA,C0BLN,ApBCA,AZKA,CwBJC,AQFA,AICA,AxBAA,CYCC,AZDA,ArBDE,CyCAD,CpBCH,CYCK,AZDT,AIKS,AzBNE,CiCEVA,AQFS,CzCAdD,CiCEgB,AQFR,ApBCQ,AkBLA,AxBSX,CqBDc,AGRF,AxBSO,CkBHN,AlBGb,ANCa,CNMlB,CiCRsB,AKJF,A1BKO,CkBHN,AQFjB,EFJA,AdUmB,AhBAA,E4BHE,ALTzB,CCQ0B,AICA,AEPA,AdUA,CQJC,IZDI,CgBE/B,AhBFgC,AkBL5B,A/BAC,ACUD,CwBJJ,AZD+B,AbLS,CaKpC,AbLC,ACU6B,CwBJC,AICA,CJDC,AzBNO,C4BQJ,A5BRlC,EyBMkC,AzBNO,EyBM9C,ADRA,CIU4C,AXEb,CQJY,EAAE,CAA7C,CRIoC,CQJY,ARIX,CYHY,AZGb,CYFlC,ALVF,APY+B,CWFT,EXEoB,CWFc,KXE9B,CAApB,GOZN,CAAc,CKSmC,EAC9B,GLVnB,CIUsB,CJVA,CKS2B,CDC2B,CCAjD,CDA3BA,ECDiD,EACjB,MADiB,EACT,gBADS,EAE/C,yBAF+C,EAEpB,CAFoB,CAAjD;AJAEA,AOCC,ALDH,ACEAC,ASHI,ARIJ,AhBJG,AlBWJ,AoChBK,APFF,APYG,AjBVL,AOSA,ANCMD,ACdN,EyBUA,IAAI,ACEA,ArBCA,CoBHC,ACEA,ArBCA,CkBHG,CIGD,A7BTA,C4BQC,ASHC,ArCLD,AOSA,CqBDRC,AJVS,CCQG,AxBIA,C0BJZ,AINW,A/BAA,AOSX,CPTO,CyBMQ,AYDD,A9BID,CoBHC,CAAd,A3BNe,CAAR,ACUW,CoCLA,CZCE,AYDD,AnBGlB,COFoB,APEpB,AlBRkB,ACUE,CwBJD,AzBNA,ACUE,CwBJpBD,EzBNqB,CAAJ,E+BAf,C/BAuB,CAAC,CqCKpB,AnBGP,AlBRkB,ACUE,G4BDrB,A7BTgC,ACUE,CoCLE,ArCLpC,ACUqB,CoCLgB,EpCKC,GoCLF,ApCK9BA,IoCLwC,AnBG7C,WmBHG,EAAwD,AbPjB,KAAK,eAAvC,EACL,CADK,EACF,KAAK,eAAL,CAAqB,MADnB,EAC2B,KAAK,MADhC,EACwC,MADxC,CAAP;ACSA,AEAF,AMHI,AECC,AECC,ARIP,AhBJE,AkBLE,AODD,ArBEM,AGKR,ApBND,AOSG,AfNF,ASOMA,ACDP,IuBHG,CMbA,AdQAE,EzBEGF,CiCGC,CEAC,AQFO,AGLP,AlBOA,CaHC,CFHC,AxBSA,AfNE,CiCGD,AxBIE,C0BJZ,CWPE,CDMW,ECNE,ClBOf,CkBPE,A/BUe,AfNjB,C6CEM,A9BIY,ANCE,GwBJC,AjCHE,ASOA,CwBJD,AlBGA,CAAL,CAAf,CNCyB,CAAC,CTP5B,EAA+B,ESOR,CkCNlB,AlCOG,CkCPgC,GlCO5B,CwBLS,AxBKR,EwBL0B,CxBK/B,CAAS,IwBLI,AQHS,ERGiB,CUF1C,EAAoD,CVEpC,EAAgC,CxBKvB,EkCPzB,ClCO4B,CkCPgC,CVE5C,CAAnB,AQHM,EAAuC,AEC1C,EAAkE,GlCO/D,CgCRA,EAA+C,AEClD,ClCO0C,CkCPgC,EFDvE,ChCQ2C,CgCRU,AhCQT,EkCP/C,ClCO0C,CkCPwC,AlCO/B,EgCRhD,EAA6D,CAA7D,AhCQuC,CAAvC,CgCRgE,CAAhE,CAAJ,AhCQ6D,EgCRW,IhCOrD,CAAjBA;AwBHJ,AOAA,ALAH,ACCC,AKJM,AECN,AECK,ANLD,AXML,AbGE,AfNC,ASQIC,CiBtBmC,CAAV,CXkB/B,CkBDE,AOAA,AxCHA,EwCGE,CJCCA,AOHAA,CFDC,CDGC,AzBGA,CkBHC,AjCHA,CwCGN,AJCO,AOHA,A3CDA,CoCIC,AOHA,AlCOA,CwBLC,AMNA,CEGC,CLIC,AOHA,A3CDX,CoCIGA,AOHAA,A3CDS,CiCGC,AQHA,CRGC,AGCA,AKJV,AECU,EPGE,AOHA,AlCOA,CiBtBuB,COiBrB,APjBtB,A1BcsB,CiCGC,AGCA,AOHA,A3CDA,ASQA,IkCPI,AlCOA,C2BJC,AOHA,AlCOA,CwBLV,AGCW,EGPvB,AvCGgB,ASQC,CwBLS,AjCH5B,ASQ4B,CwBLf,CAAb,AUFF,CPGA,COHkC,CPGC,AOHA,CPGC,EOHE,AlCOA,C2BJC,COHvC,CPGA,A3BIyC,CkCPC,CPGC,COHC,CPGC,AOH7C,CPGA,A3BIqB,CkCP0B,CPGC,A3BIA,CAA3B,CAAfA;AwBJL,AOAC,AJCAD,AKJI,AECJ,AECC,AxBDH,AkBJG,AxBSD,AfND,IwCGC,EAAE,AnBFA,EeGI,AKJF,AECA,CHEC,EAAL,AzBGO,CqBFG,EfHA,CeGG,ArBEF,GMLG,EeGI,CAAC,CAAD,AfHA,CeGlBA,AfHmB,ANKA,C0BNC,A1BMA,G0BNG,CECC,CACtB,AtBDY,ANKW,CAAC,GMLG,ANKA,CML/B,EAAkC,ANKZ,CAAD,CAAnB,E0BNI,IECoB,EACL,MADK,EACG,IAAI,CAAC,CAAD,CADP,EACY,MADZ,EACoB,MADpB,CAAxB,EACqD;AHEtD,AJCC,AKJG,AEED,AtBDF,AUAA,AhBKD,AlBbI,AYcC,I2BHJ,AfHA,IAAI,CAAC,AUAA,AlCRO,GYcJ,CkCLC,EtBDT,EeGa,AOFX,CPEY,AfHA,CeGC,AfHf,EeGa,CAAb,E3BGoB,C2BHC,GvCXlB,CAA6B,AYcP,CZdtB,EAAgC,MYc/B,EAAgC,Q2BHQ,CAC1C,ALJF,GAAgD,CAAhD,WKG4C,EACzB,MADyB,EACjB,IADiB,EACX,MADW,EACH,aAAa,CAAC,CAAD,CADV,CAA5C;AHDF,AGGE,AKLC,AEEA,AEDD,AxBAD,ANKF,AdLM,AJRL,AGMA,ASQQ,AhBNH,I2CIH,ASJA,KZCK,AhCDO,ADFP,APEO,C2CIN,ASJA,ApCMA,GwBLR,AGGW,ASJA,E7CFX,APEK,CoDAH,ApDAmB,C2CIN,CAAC,A3BEA,CLNhB,AXAK,EQAA,AQMc,AhBNO,C2CIN,AnCJO,CmCIN,AvCZd,EYcgB,CAAC,CZdb,CAAX,CuCYgB,A3BEG,CZdL,AYcc,CRNvB,CmCIyB,AvCZ9B,CuCYe,AnCJuB,CmCIpC,AvCbmC,CACnB,GOQlB,AKMmB,EAAmB,CRNjC,EAA2C,IGAhD,IHAK,CQMc,CRNuC,AQMlD,ULNR,CAAiB,IAAjB,EAAuB,CHAlB,EAAyE,KGA9E,EAAiC;A6BElC,ACFM,AMEL,AJGC,ASJA,A1CYI,ACZHC,AoBaF,AVjBK,AbILA,ADFD,ASQQ,AaHT,AQHO,ArCAL,MQAI,CuBaG,CpBbD,C8BDQ,AMEP,ArCWO,AWhBA,AQOP,AQHO,ArCAP,E+CCE,C/CDC,C+BaV,A/BbW,G+CCG,CAAd,ApCDe,AHAfA,A6BAK,CAAkB,CrCAhB,CWAW,AqBGjB,CAAA,EtBSI,C+BbA,A/BawB,AWhBxB,ArBIiB,CyCDQ,A9BCP,AUJO,CQOhC,CnBSO,AmBToB,A7BHA,CqCApB,ArCAqB,CUYQ,C2BZC,CLGlC,GhCHqB,CWAJ,AUJb,CVI6B,CUJQ,ArBIP,C6BGrC,EYJO,A9BCa,AkBGoB,AQHjC,C1BAHA,C8BD6C,AJCA,ChBJ1C,ArBIoC,CAAC,CgCGzC,AXPiD,CQOpD,A7BH8C,EyCDvC,AZIyC,EYJS,GAAlD,EAAuD,EzCCnB,CAAlC,CAAP,EyCDK,EAA+D,GAA/D,EAAoE;AACzEA,AMED,ACHG,AEEA,AtBDF,AlBaA,A2CjBE,AtBiBW,AVhBbD,AInCK,ArB8BL,AyBYAC,AQHAD,ArCAD,EUYC,EsCdE,AEEA,CxCYC,C+BbC,AODA,AtCcA,AWhBE,AQOF,AQHE,ChBJC,CoBGD,AJCE,CWFD,ApBCA,AyBJA,A5BlCO,ArB8BP,C8CSC,A7BJE,CoBGD,AODP,AXES,CRGD,CqBHC,AtBDX,AxBRW,CAAC,CyBYC,CRPG,AQOhBC,CqBHe,A7BJE,AjBLV,C8CSS,A9CTA,C8CSD,A9CTR,C8CSL,AxCYF,CNrBmB,AiCSE,CAAC,CZvCjB,AYuCgB,CZvCQ,AYuC7BD,CjCTuB,CqCQC,ApBHd,AjBLc,CqCQC,CpBHzBA,EjBLmB,CAAU,EqCQL,CAAxBC,CYJE,A5BlCG,ArB8B4B,CAAC,CqB9BQ,C4BkCN,CAAC,AjDJR,CiDI3B,AjDJoC,CAAT,IAAc,IAAI,CAAC,GAA7B,CAAZ,CAAP;AqCSAA,AEIA,AKLC,AEEA,AEDD,AxBAD,AlBaA,ACbG,AoBY2D,AVf7DD,AbGA,AiBtCAA,ArB8BD,AYcO,ACAD,AoBLLA,CLhByC,CWmBzC,AZQ6D,AC3B9B,ISe3B,ApBHE,AInCA,AYuCA,C7BDDC,CiCAC,A9BAA,A0BCE,CeDD,AzCAA,AoBY6D,AdNtD,CcMuD,CUZ5D,AjCAA,A6BCE,ChBJC,AbGF,AiBtCE,C2BsCZ,ETIa,AZQb,AVfe,AbGF,AiBtCE,AT4CF,C2BFC,AnCJTA,EGAH,AHAc,EGAE,AHAA,CwBfuB,AXYpB,AgBIA,CMGrB,AXnBF,AXYwB,AgBIA,C7BDD,A6BCA,CAArBD,CMGuB,A1BElB,CwBNmB,AEIxB,AlB1C0B,AR4CK,CwBNN,AFLzB,CdjCAA,AT4C0B,GKTX,ALSc,CRNC,CiCAC,ApBH/BA,AbG+B,EQME,CyBNC,AzBMA,CyBNV,CAAxBC,CjCAA,AQM6B,ACAxB,CDAiC,CRNC,ASMO,CTNN,E+BLxC,C/BK2C,AQMd,ERN7B,AQM6C,ERNE,EAAE,CAAjD,C+BLA,C/BKoD,CQMvB,CAAvB,WuBXN,GAAiB;AIUjB,ASJD,AzCAK,A4BLF,ARkBF,AVhBAD,AbGE,AQMG,ACALA,AYHA,AQFAA,I7BDE,EGAE,AUHE,AJSA,AoBLA,CrBJF,AaMCC,CRNG,AgBIA,CMGD,EJTE,AlBEE,AQMF,AQFE,CRED,CbGC,ELNE,AHAA,ASME,AYHF,CAARA,CRNY,CVGD,AUHE,AbGF,ASME,AYHF,CRNC,CAAjBD,AQMkB,CQFG,CMGrB,ANHsB,C1BDD,AkCJrB,AhBOqB,AQFA,CAArBA,G7BDyB,CAAC,CAAD,CAAvB,CqCJF,A5BU+B,CsBX7B,C5BKc,CAAgB,AkBGA,CZGG,AYHF,GlBHjB,EkCJhB,ChBOA,ClBHwC,CkBGC,ClBHrC,AkBGsC,CgBP1C,EhBO6C,CgBPrC,ChBOuC,GAAG,CAAlD,EAAqD,CZGR,CAAV,AYHoB,CZGvDA,AYHA,EAA0D;AYH1D,AEKD,AKNC,AEEA,AvCAG,A2BCD,AOLA,A9BCG,AMALA,AIpCA,AT6CM,ACAN,AYHE,AQFFA,IREE,EmBLE,A3BDE,AgBIA,CIFD,AhBtCAC,CJoCG,AgBIA,CaDD,AZCA,AvBJO,CcMN,CmBLC,AHFA,AxBCE,AIpCF,AYwCE,CWHD,AvBrCA,CgBsCC,CSCX,ArBGY,CnBUC,AmCjBA,ApBnCA,AT6CA,CS7CRA,CgBsCU,A1BFV,AMAY,C2BCR,AjCDc,AMAL,AIpCF,CuBqChB,A3BDiB,CAAjBD,AIpCkB,CuBqCC,AjCDd,AsBIgB,CAAC,CIFtB,A5BFA,AEA4B,AUpCP,AYwCA,CrBKf,AqBLNA,CIFuB,AIHd,AhBOc,CgBPC,A9BCnB,AcMmB,EhBNxB,AEAiC,G0BEJ,AIHA,GJGG,AhBtCA,CawC9B,AbxC+B,EgBsCjC,A5BFA,AgBMmC,CSFC,ATEA,CYJC,AHEnC,AzBJF,AgBMmC,ChBNhC,AgBMoB,CJ1CvB,CI0CwC,CJ1CC,CZoCzC,AYpC0C,CgBsCC,CIHnB,AhCCf,CgCDoC,ApBnCA,EgBsCE,AhBtC/C,EAAiD,CoBmCzB,CpBnC2B,AI0CA,CgBP1C,AhCCT,AYpCA,AI0CoD,CYJpD,AZIqD,CgBPC,AhCCnC,AYpCmC,CgBsCC,CZIC,CAAL,CAA5B,CgBPoC,ChBOC,KgBPnD,CAAP,AhBOqB,CAArB;AYHAA,ASCH,AjBKMA,AEFA,AtBNH,AEAF,AMAAA,AbEE,AiBtCA,AT6CG,AaHJ,AQFDA,IJIW,AR5CT,EJoCI,AgBIA,EIFE,A5BFF,AQAE,AbEF,A6BEE,CFEM,ApBNP,C0BEG,CpBFC,AgBIA,CFEN,ApBNK,C0BEG,ANIK,AtBNP,AEAA,CFAC,CoBQU,GAAG,CACzB,AzBPiB,COFV,APEW,AiBtCA,CZoCZ,AEAa,AMAE,AIpCF,AYwCE,CxBJD,AQAE,AgBIA,CJKlB,AEHC,AdNgB,AgBIA,CtBJd,AMAPA,AgBIAA,CFE8B,CtBNxB,CAAJ,AYpCgB,CgBsCU,AjCAtB,CiCAuB,A5BFF,AEAA,AUpCA,CVoC3B,GPE+B,EiCAH,CAA1BA,INIG,AV1CiC,CQ6CtC,AzBPM,AiBtCiC,CQ6ChB,AEHwB,AV1CT,CAApB,CAAhB,CjBuCI,KyBMN,CADyB,EAEzB,GzBPiB,CyBOb,AzBPc,MAAZ,KAAuB,OyBO7B,CAAuB,AzBRrB,EACqC,SyBOvC,EAAoC,KAApC,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,4BAAvB,EAAqD,KAArD,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,+BAAvB,EAAwD,KAAxD,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,+BAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,0BAAvB,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CAPyB,EAQzB,IAAI,kBAAJ,CAAuB,6BAAvB,EAAsD,KAAtD,CARyB,CAApBA;AQLHA,A9BAA,AwBIFC,AtBNID,AEAL,AMACA,AbGI,AiBvCH,AT6CE,AqBLHA,MFEI,AdNE,AgBIA,EIFE,A9BAF,AUFE,AgBIA,EIFE,A5BFA,ALGF,CaHG,AgBIA,EIFE,A5BFA,EsBMbC,CtBNgB,CFED,CAAC,EEFI,CAAC,AQAA,AgBIA,ChBJC,AgBIA,ChBJD,AgBIA,ChBJrBD,AgBIAA,C1BFM,CAAkB,CEFpBA,C4BEwB,AjCCxB,CiCDyB,CjCCD,IGDtB,C8BA6B,GAAG,CAAV,CAA1BA,A9BAoC,CAAC,CAArC,EAAwC;A8BCxCA,ACIG,AMLH,ArCCE,A0CHF,AxCCEA,AQCJC,AbEM,AQfN,AaiBA,AQDAD,IWHE,ErCCE,AUDA,AgBGE,EIFE,ApBDF,AbEA,A6BCE,CKEM,AWPP,AxBMA,CmBJC,AnCDE,CQCD,AgBGE,EWHA,A3BAA,CRDG,CFED,AkBGb,ClBHc,AUDA,CRDG,CiCDjB,AzBEAC,CbEiB,CiCDG,A9BAhB,AHCc,CGDC,AEFE,AwBIA,CAAC,CIFC,AJEF,CWHC,AXGtBD,CWHuB,CnCDN,CwCDf,AxCCyB,EFEvB,C0CHwB,AxCCX,CAAbA,ALGE,G6CJJ,A7CI8B,CsCJhC,AtCIM,EkCGD,CAAsC,IMLrB,CAApB,CFFF,MLGiC,EAAV,CCIlB,CDJgC,CCIuB,CDJrC,EAAkB,AKHzC,ELGuB,CCIlB,AIPY,CLG4B,CCIuB,CDJ7C,CAArBA,WCIG,EAA8E,MAA9E,EAAsF,SAAtF,EAAiG;AACtGA,AMLC,ArCCE,AmCHD,AXMF,AdJAA,AbEK,AiBxCL,AlBuCK,ASMN,AaHA,AQDCA,ArCDKA,IAAM,E0CGL,APDF,AdJE,AgBGA,EhBHE,AgBGA,CZzCD,AlBuCO,EmCIH,AIPF,AzBEE,AgBGA,ArCDO,C8CJR,CzBEG,CqBKC,A1CHO,CyBxCrB,CU0Cc,AdJE,AdCX,CuCHU,AvCGO,CcDtBA,EcIkB,CEDG,ArCDhBA,CqCCiB,CKEC,AnCJlB,A8BEgB,CAArBA,C9BF8B,CmCIJ,IPDtB,EWNK,EXMuB,COCT,AIPU,EAAxB,CJO6B,EAAtCA,AIPsC,KAAK,IXMI,IAAI,OWNb,CAAqB,EXME,CAAC,EWNxB,EAApC,MXM2D,CAA7D,EAA2E;AMHzE,ACKFC,AEGK,ATJH,AtBNE,AYpCL,AlBuCCA,A8BEAD,IFCE,EOCE,AnCJA,A8BEE,CKED,CDLC,AJGE,COKM,CFHN,CAARC,A7BPSA,AwBKE,EFCA,C5BHXA,CMHa,CsBMC,AtBNA,GAAG,C4BEC,A5BFd,CwBKiB,CxBLD,AwBKE,CIHD,AGQhB,A/BVgB,AwBKA,COKQ,APL7BD,EIHE,ANIsB,AtBNA,CsBMC,CMJC,C5BFtB,EAAyB,EAAE,CAA3B,EAA8B,CsBMV,CAAV,CSIT,ATJgC,ESIS,MAAzC,EAAiD,GAAjD,EACL,ATLc,CAAZ,KSIG,EACG,gBADH,EACqB,yBADrB,EACgD,gBADhD,EACkE;AHRnE,AODJ,AJUAA,ATLC,AtBNK,AQCN,AbEI,ASOF,AoBLFA,MIHI,AODA,AJUE,AvBVF,AgBIE,COMC,C/BXD,AQCA,AgBIE,CIHD,CGSG,CAAC,APNA,CIHD,A5BFA,CAAC,AQCA,AbEA,CwCFX,AJUc,A/BXJ,AQCN,AJSO,CJVL,CmCCQ,CJUG,C/BXD,AQCA,EAAE,CgBIG,CpBKnB,AoBLoB,COMZ,APNW,CIHjB,AjCCA,ASOiB,AoBLrBA,ChBJuB,CAAvB,CuBU2B,CvBVD,CJSxB,EAA0B,E2BC5BA,K/BXuB,IAAP,EAAa,IAAI,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAAV;A4BGH,ACIH,AMLE,AjBeF,ACRKA,AnBRA,AQCH,AbEC,ADDH,AUQI,AoBLJA,IWJE,AhBOS,AXPT,EAAE,AgBIE,CKCDC,AXUE,AxBdF,C8BGG,ChBJD,CAAL,AJSM,CyBJC,ALDE,CKCD,AMLA,CAAC,CjBeX,CWVa,AVES,AzBNtB,CmCIKA,CMLH,AjBee,CWVD,AMLA,AhBOS,AfET,CeDhB,AzBPiB,CmCIC,CLDG,CAAC,CKCD,AGPrB,AbUI,AfCiB,AoBLA,CWJnB,AjBesB,AMXxBD,CNWyB,AxBdzB,CyCDwB,CAAtB,AzCCuB,EyCDE,EjBeV,CdNb,EAA4B,EyBJE,AXUE,CWVD,GGPnC,CbUA,CAAuB,CUHvB,EAA2C,AMLzC,AjBee,CWV2B,EXUI,CWVD,AGP/C,EHOA,EAAmD,AVGnD,CADyB,CUF4B,AXUE,CWVvD,AXUwD,ACNxD,EUJwD,EVIpD,EDMa,CcjBjB,CAAe,CAAf,AdiBiE,EcjB/C,CAAlB,CdiBA,CcjBqB,QbWrB,CAAuB,GaXvB,EAAmC,QbWnC,CAFyB,EAGzB,IAAI,GaZJ,EAAuD,abYvD,CAAuB,aAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,aAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,kCAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,4BAAvB,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,8CAAvB,CAPyB,CAApBA;AUDHA,AMLA,AJSF,ACXE,AdkBF,AIZA,AdJC,AbEA,ADDC,AUQI,AoBLNA,MOKI,APLE,COKD,CFJG,AGPF,ARME,CFAD,CSKC,CITC,AJST,ArCRS,A8BGE,CKCC,AzBIF,C2BAC,EFJI,CnCJb,AUQY,CAAC,CkBLf,CaJE,C/BSQ,CAAS,AoBLE,CAAC,CAAD,CAArBA,EQNwB,CNDxB,EMC2B,A5BWA,GAAG,KAApB,CyBJ4B,CAClC,GzBGoC,MsBZxC,GtBYM,EAA6C,CyBJb,EACjB,CHTrB,KGQsC,EACT,GGRuB,KAAK,GNDzD,EGS0C,CAAC,AHTtB,CGSqB,CADJ,CGPc,CHQL,CGRpB,EAA2C,CAA3C,EHOW,AGPmC,CAA9C,CHQ4B,AGRrD,EAA2E,GHQjB,CAAC,CAAD,CADtB,CAApCA;ADJA,AMKG,ALCH,AMND,AJSC,ACXE,AQCF,AdFA,AJOH,AtBNK,ANGH,AUQO,AoBJR,EAAA,CWRA,CPGE,ACMA,EDNE,GAAG,AMKO,ALCP,AMNA,AKDA,CXOC,CDNN,ACMO,AEGA,ALZA,CFQC,CKCH,AGRI,AhCAA,AwBOA,CKCT,ALDQ,CAAV,CERc,CGSC,AEGA,A/BXX,AIWW,CoCVb,ApCUM,AoBJQ,EOIE,APJA,CKChB,AWPiB,CAAC,CTUlB,ASVA,AhBMmB,EOIE,APJP,GAAU,EUArB,AVAuB,CUAQ,AHIP,ACXzB,ANDK,CAAqB,CFQC,EOIE,APJjC,EERS,CAA2B,CAA3B,EKYP,ALZqC,EKYE,GGJpC,ARRuC,EQQS,IRR5C,CAAP,CQQG,EAAwD,IAAxD,EAA8D,MAA9D,EAAsE,CAAtE,EAAyE,CAAzE,EAA4E;ANJ/E,AMKF,ALCE,AMNA,AJSE,ACXD,AhCAA,AQCHA,AbEA,ASQO,AoBJP,EAAA,EILE,ACMA,C7BfA,C4BSE,AMKA,AHIA,AvBVE,CAAC,EoBCA,AjCCA,ASMD,C8BFE,ALCA,ArBPE,CoBCR,AMKO,ACLA,AnCFA,CmCEC,AXKA,CKCC,ALDA,ChBNG,AgBMJ,ChBNK,AJUF,AoBJb,EUAI,ALCW,CAAC,AMNP,AxCCT,A6BIgB,ChBNN,C2BCQ,A3BDE,AgBMF,CWLT,CDKW,ALCA,ArBPE,C0BMtB,ALCqB,AMNA,AXKA,EUAE,A1BNE,AgBMT,EhBNI,CgBMM,CKCV,CrBPc,AgBMF,COIC,CFHC,AEGA,AvBVE,CqBOjB,ALDgB,CKC7B,CrBPiC,AgBMnC,EhBNU,CAAVA,C2BCS,CAAP,QJS4C,EAAjB,CAAzB,GACI,eAAe,CAAC,MAAD,CADnB;AHRH,AMKC,ALCD,AMNA,AJUG,A/BZA,AQEJA,AbCD,ADDC,AUSQ,AoBJR,EAAA,IOKI,AvBVE,CAAC,EdAA,CcAG,AdAF,CwCKC,C1BLG,AgBKF,CxBPC,AwBOA,CAAD,ChBLK,AgBKf,CUAE,A1BLc,CJSD,C6BXf,AvCEA,A8BKgB,ChBLG,CgBKD,ChBLH,EgBKM,ChBLG,CAAxBA,AJSuB,AoBJP,GpBIU,AoBJA,EAAE,COKC,CAAC,C/BZZ,AIWV,AoBJuB,CSP/B,CTOA,ExBPW,MiCAX,KFY8C,EAAjB,CAAzB,GACI,EEbR,CAAc,MAAd,EAAsB,IFaC,CAAC,MAAM,GAAG,CAAV,CADnB;AGJH,ACLF,AEGM,ANQF,ACdD,ACCA,AjCDoB,AQGtBA,AjBLK,AGKN,AUSQ,AoBJP,EAAA,IhBLM,CAAC,CwBHD,CKMQ,A9CRA,CiBKJ,CyBFD,CzBEG,AgBKF,CQRC,ARQA,CAAD,ChBLK,AgBKf,ChBLgB,EgBKA,ChBLG,CgBKD,CCJlB,AjBDe,EgBKM,ChBLG,CAAxBA,AgBKgB,GAAU,CaFrB,AZFL,CYEmC,ALN7B,ARQsB,CjCVvB,CAAgC,CAAhC,AiCU0B,CQRC,CzCFQ,AiCUxC,CjCVK,EkCML,AlCN2C,CyCEN,CzCFhC,EAA0C,CkCM/C,ClCNK,C8CQA,CZFG,AlCN2C,C8CQC,C9CR/C,EyCE2B,AzCFuB,EyCErD,AzCFG,C8CQA,AJLiC,CDDc,AzCFO,C8CQC,GAAvD,AJLsC,EIKsB,MAA5D,EAAoE,KJLhE,CIKJ,CJLuD,CIKqB,KJLxE,CAAP;ALEF,ACMA,AQFA,AtBAK,AUFH,AOJE,AhCD2C,AEI1C,AMCL,AjBNAA,AacK,AoBJL,EKAA,ALAA,IaFI,ArCP2C,ATDzC,CsCUD,AzBFD,CyBEE,AtCVE,CqCID,AbIO,AbHA,AMCP,CRLI,AQKH,CiBAC,AOJA,AxBIF,AjBNI,CqCIX,A5BHsD,AwBS5C,ChBJC,AjBNE,AacF,AoBJA,CKAX,AdFK,APFE,AgBIG,CTFU,APFpB,AgBIA,CjCVgB,CsCUD,CAAf,AtCVAA,AiCUgB,EQRZ,AhCDO,AwBSO,CxBTd,EgCCiB,ARQA,EAAL,CaFQ,AnCHnB,CmCIH,ALPuB,A9BGO,C8BHN,ARQA,ETFrB,AbHA,AsBKuB,ETFS,AUFnC,AOJmB,A9BGgB,C8BHN,ARQA,EAAf,GTFX,AbHA,AsBK+B,ETFS,AbHA,AsBK7C,EaFwB,CtBAnB,CsBCc,CtBD+B,IbH7C,CmCGmB,CtBAnB,AbHmD,CmCI7B,CtBD+B,EsBAlC,AtBAnB,EsBC2B,AtBD8B,EAAzD,EAA6D,EsBA1C,ALLlB,EKMkC,EtBDnC,CiBLM,CjBK+D,EsBAlD,CAAxB,EACiD,GtBD5C,EAA+E,IiBNrD,EACH,CADG,EACA,KAAK,eAAL,CAAqB,MADrB,EAC6B,KAAK,MADlC,EAC0C,CAD1C,CAAV,CAAjB;AJGL,AMKC,ALCA,AQDE,ANMA,AhBPFA,AiBLI,AhCFD,AEIHA,AMCD,AjBNCA,AacM,AoBJN,EAAA,IUDI,AnBDE,AbHA,AXLA,C2CSD,AhCJE,CXLC,CsCUD,CdFG,AbHA,CmCID,ANMA,ACZA,AzCHE,CiCUD,CTFG,AbHA,AXLA,AiCUF,CKAX,A3BLc,AsBKJ,CaDR,AjCKW,AoBJb,CjCVgB,EAAhBA,AiCUgB,EtBLhBA,AsBKkB,CTFG,ESEA,CTFG,AXMlB,CoBJU,EUDS,AHMvB,CGNwB,AFNtB,AROsB,EAAE,CQPC,CjBKR,CSEU,ETFI,ASEnB,CQPkB,CjBKlCA,CSEoC,EAApC,GUDyB,EAAkB,EFNd,EAAzB,EEMqB,EAA0B,IAAI,CAAC,CAAD,CAA9B,EAAmC,MAAnC,EAA2C,CAA3C,EAA8C,CAA9C,CAAzB,EAA2E;AACzE,ALCH,AQDE,AEDI,AROJ,AhBPDA,AiBLG,AQCD,A5BpCJ,AR8CO,AoBHL,MTHM,GwBAQ,ACJP,A5BpCA,AY2CA,EUFE,EnBDI,GmBCX,AnBDc,GSGhB,GTHsB,CAAC,CAAD,CAAtBA,CyBJE,C5BpCJ,CAA4B,C4BoCC,CAAC,A5BpC9B,C2BwCO,ACJH,CDImC,A3BxCP,EAAhC,EAAoC,UAApC,C2BwCO,C3BxCyC,C2BwCQ,MAAjD,EAAyD,KAAzD,EAAgE,MAAhE,EAAwE,SAAxE,EAAmF;ALEvF,AKDD,AxBAAA,AGYA,AhBhBA,AUpCAA,ArB+BA,AaeG,AoBHJ,MTHO,AbJF,AUpCE,ArB+BF,CgDSCC,ArBYE,C3BrBD,CWKC,CAAC,AUpCE,C2BwCD,ArCJF,CqCIG,ArCJN,CaIS,AHxCA,ArB+BF,CAAP,CgDSS,CAARA,AxBAW,AbJF,CUpCG,C2BwCD,A3BxCE,ArB+BF,C2BqBhB,CqBZkB,AhDTA,CqB/BL,CGwCS,AGYA,AhBhBtB,AUpCsB,C2BwCD,AxBAE,CAAD,AbJA,CaItBD,AxBTuB,CAAvB,CmCEA,AdjCa,C2BwCa,A3BxCE,ArB+BF,CgDSC,ArBYE,CAAC,ENpDjB,EAAqB,C2BwClC,C3BxCa,C2BwCsB,A3BxCnCA,C2BwCoC,GAAG,ArBYjB,EqBZtB,EAA2C,CrBYG,CqBZD,CAA7C,AbPA,EaOgD,KrBY1B,EQnBtB,CRoBE,OAAS,CAAC,SQpBZ,ERmBsB,CQnBD,ERoBK,IAD1B;AmBXA,AEAE,AxBAFC,AiBNE,ANDA,ARqBF,AhBlBE,AUpCFD,ArB+BEA,AaFF,MiCWI,AtBAA,AHxCE,CGwCD,CwBAC,AhDTE,CgDSD,AhDTE,CwBSD,AHxCE,CGwCVC,AiBNS,ANDA,AxBGA,CAAP,AXLU,CqB/BC,ArB+BA,CAAC,CAAC,CmCED,CdjCG,CAAC,ArB+BA,EAAL,CqB/BA,CAAS,ErB+BE,EAAX,CqB/BA,CAAe,C2BwCD,AhDTE,CgDUzB,AhDV0B,CmCE5B,AnCF6B,CqB/BlB,EAAqB,ArB+BA,EqB/BrB,ArB+BgB,CqB/B7BD,GrB+BwC,E8CSf,A9CTb,EyCIR,COKuB,EACN,AhDV0B,EyCItC,AzCJwC,GAAG,CgDSzB,ChDToB,CgDUlB,EFDzB,A9CTqD,E8CSf,A9CTiB,CgDUzB,CAAC,CAAD,AhDV4B,CgDSnC,CPNlB,AzCHG,C8CSR,AECmC,AhDVrCA,CyCIwB,CKKwB,ALNzC,EACoB,CKKzB,CEAuB,CFA4B,CECR,CPNb,IKK9B,EAA2D,EEApC,CAAzB,EACyD,CFDU,CAAC,CAAD,CAAjE,ALLyB,CAAqB,CKKwB,KLNjE,CKMuE,CAAC,ALLvB,CKKsB,CAA5E,CAAJ,EAAsF,ALLvB,MADtD,EAEL,KAAK,SAFA,EAEW,IAFX,EAEiB,CAFjB,EAEoB,CAFpB,EAEuB,YAFvB,EAEqC,kBAFrC,CAAP;AEOF,AGAE,AECE,ArCLH,AUpCDA,AR6CD,GFXC,GUlCM,CsBwCDC,EhCJE,CUpCG,CsBwCD,AGAA,CHAC,CKCC,ArCLA,AUpCE,EsBwCA,AGAX,CHAGA,CtBxCY,CsBwCD,AKCZ,A3BzCc,CVoCD,CgCIC,CtBxCL,CAAS,CsBwCD,AhCJA,GAAG,CgCIC,AhCJA,AUpCZ,CsBwCa,AhCJA,AUpCE,GVoCC,CAAL,AUpCX,CVoCN,CgCIP,AtBxCkC,CVoCD,CgCIC,AtBxCrB,CsBwCsB,AtBxCnCD,GsBwCsC,EAAtC,EAA0C,EAAE,CAA5C,EAA+C;AAC7C,AGAD,AECE,ARIHA,AhBNA,AIYK,AjBfH,APEG,AiBtCLA,ArB8BE,AyBYG,MeGC,AnB7CA,CGuCDC,CmBCC,A3CVA,C4BqBQ,AxBbA,AJRP,AyBYO,CJ1CJ,CGuCD,AbHA,CaGC,AbHA,AXNA,CwCeG,AnB7CA,ArB8BX,EwBSW,AbHA,AXNA,CwCeG,A7BTd,CUpCe,CAAC,AI0Cb,CAAmB,CeGJ,ChBNpB,AIYK,AxBbA,AiBtCQ,COmDc,AxBbA,AiBtCL,CGuCD,CAAC,CgBMN,CAAU,CAAV,AhBNS,AIYpB,APnDQ,AI0CR,CkBFqB,AHK1BD,ApCPK,AiBtCuB,CsBwCD,AfWO,AHTA,CDHlC,ApBDmC,EoBCL,AHvCjB,CGuCkB,CpBD1B,AiBtC6B,EjBsCO,AiBtC5B,CGuCsB,AHvCnCA,EOmDK,CHTA,CGSyC,CHTC,CDH/C,CmBC0B,CnBDiB,CmBCC,IAAI,CAAC,CAAC,EfW7C,CeXgD,CAAL,AfWa,CeXnC,EAA+B,IAAI,CAAC,CAAD,CAAnC,EAAwC,MAAxC,EAAgD,CAAhD,EAAmD,CAAnD,CAAxB,EAA+E;AAC7E,AKCH,ARID,AhBNEA,AIYFA,AjBfC,APEDA,AiBtCA,ArB8BI,AyBYJA,EeGA,C7BXO,GiBiBD,AxBbA,AJRF,AyBYE,EDHE,AxBTF,CwCeC,A7BTA,AUpCA,CmB6CC,CAAD,AxCfE,CwCeT,AZMY,CeXD,A3CVP,AyBYS,CDHC,CgBMD,AZME,CYNf,AfHgB,CDHC,ApBDA,CuCEb,ADNJ,EdiBoB,AxBbA,CwBaC,EPnDA,CAAC,GOmDtBA,AHT2B,CiBR3B,ArBlCqB,EAAO,CI0CG,CDHC,CAAC,ACGjCA,CDHgC,ApBDE,AiBtCb,CGuCJ,ApBDkB,CiBtCD,CqBkClC,ClBKsC,EHvCjB,CjBsCa,CAAlCA,AiBtCwC,EqBkCxC,ClBKEA,CHvCmB,CqBkCX,CrBlCoC,UAAzB,CAArB;AsByCG,AGDH,ANMA,AhBNEA,AkBLA,AOEA,ArBeFA,AjBfEC,APEF,AiBtCD,ArB8BK,AyBYJD,EeGA,IMNI,AlBYE,A5BrBF,AyBYE,EDHE,AbHF,AXNA,CwCeC,ASTA,AtCALC,APEK,CoCOC,CAAC,AEXA,A1CJA,CyBYG,CzBZR,CwCeQ,AhBNE,CgBMP,AZMQ,AHTA,CeGf,ChBNiB,CIYC,CYND,AjCPjB,CiCOA,ApCPkB,EqBII,CrBJD,AqBIE,GwBNrB,GAAyB,AxBMZ,CwBNa,CAA1B,ArBe6B,CJZC,CAAC,AkBLX,AjBQW,CDHC,AIYA,AxBbF,CGAhC,AqBakB,AxBbe,EoBCI,CAAL,AkBL9B,AdiBoC,CJZrB,ApBDe,CAAd,E0CCO,AtBAiB,CpBDD,CGAzC,GkBIAD,EDHEA,EIYgB,CxBblB,EwBasD,CAAtDA,EkBZI,AvCDJ,CAAc,CuCC4B,IvCD1C,EuCCI,AvCDiB,EuCC6B,GAA9C,EAAmD,MAAnD,EAA2D,MAAM,CAAC,CAAD,CAAjE,EAAsE,MAAM,CAAC,CAAD,CAA5E,CAAJ,EAAsF;AHErF,AGDC,AECF,AxBDE,AjBDAA,AoBeF,ACFAC,AxBbD,AJRI,AyBYHD,IDHE,CxBZA,C4BwBE,AHTE,CEWC,CHdD,AjBDE,CyCED,AxBDA,CAAC,CsBAC,AvCDE,APRF,CwBSH,AIYI,CoBXV,AxBDE,CjBDY,CuCCZ,AlBYW,A5BrBA,CwBSC,AxBTA,AyBYE,GzBZC,AyBYE,CzBZV,COQY,CPRD,CwBSC,AGcrB,ECFAC,CJZwB,AjBDV,AoBeY,AFXA,CAAC,CDHD,GAAG,AjBDE,EoBeE,CAAC,GHdhC,ACGiB,ElBJL,EkBI2B,ClBJC,IAAI,GoBepB,GFX1BD,EEWsD,MpBfZ,CAAU,EoBe1B,GpBfgB,AoBgBxC,CpBhBY,GAA+C,GoBgBlD,CAAC,CpBhBVA,coBewB,GACI,KAD9B;AmBbC,AECF,AxBDG,AjBDAA,AoBiBF,AhBpBE,AXLE,AyBYJA,IDHE,ExBTE,AyBYE,EDHA,AjBDE,AIHF,AXLA,CwBSC,CAAC,ACGE,EDHJ,AjBDM,APRF,CwBSR,ACGW,CzBZD,COQG,CiBCD,CbJC,AXLA,COQG,APRd,COQe,CIHD,CAAhB,AcOmB,CAAC,CDHD,AjBDnBA,AIHmB,GaIG,EAAE,CCGb,EDHgB,ACG7BA,MDHE;AmBCF,ACFK,AJOLA,AjCNE,AqBYF,AlBTF,ACNM,AXLA,IOQF,AGGE,E8BGE,AZMF,A5BpBA,COQC,CAAC,APRA,C2CSC,ACFO,EJOH,A7BTF,CiBeC,AjBfA,AXLA,C2CSV,CHKc,AjCNZ,AGGY,AVXF,CwCcG,A7BTF,CAAT,CJGW,AqBYA,A5BpBA,CWKC,AXLZ,CWKa,E6BSH,AjCNZ,CIHkB,C6BSG,A7BTnB,EAAmB,C6BSG,AZM1B,CjBfyB,CiBeC,AjBftB,C6BSyB,C7BTD,K6BSd,CAAdA,EIPK,CAAuC,eAAvC,EAAwD,MAAxD,EAAgE,KAAhE,EAAuE,MAAvE,EAA+E,WAA/E,EAA4F;APA5F,AMGN,ACFCC,AECA,ANMAA,AhBNE,AjBAAD,AqBYA,AlBV+B,ACL3B,AXLH,AyBWH,MmBJI,AECA,ANMA,AfHA,ElBHI,AqBYF,CSdQ,AbEPC,CCGC,CeGC,C7BTC,CaGC,CgBMC,AhBNA,CgBMZA,A7BTa,AcMA,CdNC,CaGC,AjBAE,AqBYF,AjBfF,CaGG,AbHN,EiCEQ,ArCCE,AqBYF,CJZC,AUDnB,ANaE,AjBfiB,CaGjB,CoBDmB,AhBaA,CJZC,CoBDtBA,ApBCuB,AjBAE,EIHnB,CaGoB,CaFrB,AbEsB,AbHA,C0BCQ,EbEL,GjBAV,CAAgB,CkBGV,CDHxB,AUDF,EVCsC,AjBAlB,CAAlBD,CuCAuB,AtBAe,CAAtC,EaFG,AbEsC,EaFS,AHCpD,MGDK,EAAuD,CZK5D,CqBHI,CrBG2C,CYL1C,ASEqC,ETFwB,AHClE,CAAe,CAAf,EYCI,AZDc,CAAlB,CGDK,ASE6C,CZD7B,CGDqD,CSEtE,ETFC,ASEkD,ETFwB,ISE3E,EAA2D,AZD/D,EAAmC,IYCkC,CAAC,CAAD,CAAjE,EAAsE,MAAM,CAAC,CAAD,CAA5E,AZDJ,CYCA,CZDuD,CYC+B;ATDtF,ASEE,AtBAE,AjBAFC,A2BDA,AxBE+B,ACJzB,AXLP,AyBWC,IAAA,EDHE,CaFCA,C9BEC,EiBAE,AdCyB,C2BHxB,ASEA,AtBAA,AUDA,CGDC,AbEA,ACGA,EDHF,CaFK,ASEX,AtBAE,ACGS,CYLRA,C9BEHA,AIHa,C0BCC,AbEA,AbHA,E0BCE,A3BGe,CCJd,CDIc,ACJzB,C0BCa,AIDrB,AhBMqB,CAAC,GYLG,AFJzB,CEI0B,CZKb,GSJX,ATI4B,CDHC,AiBH/B,CJCA,AbEgC,CAAD,CaFG,AbE9B,CaF+B,GAAG,CZKzB,CYLb,AIDA,AhBMwC,EYLE,EAAE,CAA5C,AFJA,EEI+C,AID/C,GAAU,AhBMG,EAAuC,EUTpD,SVSa,CAAX,OUTF,GAAoB;AEKlBD,AOAF,AEEC,ANKD,AhBLG,AiBHD,AQCA,AdJA,APkBE,AlBPJ,ACRO,AcMN,MGSG,CgBdCC,CPAG,CGOD,ASPA,EZAI,AOAF,AHDA,ANHA,AzBWT,CkCPU,AhBcA,ESdI,AGOF,CIPC,AJOA,AZOA,CgBdRA,ATJS,EEII,AOAF,CPAG,CAAD,AOAA,AhBcA,CSdhBD,AGOK,AZOY,AlBPnB,CAAY,CkCPS,AnCJrB,C+BWsB,CAAtB,CZOa,CYPY,CIPC,AhBctB,CgBduB,CnCJ3B,C0BAS,CAAqB,AzBW9B,C+BRwB,AQCtB,CvCOsB,CkCPxB,CKAkC,CLAC,ATJ1B,CSI2B,AHDP,ANHO,C1BApC,CwCIE,CLAqC,EAAvC,ATJyC,A1BAzC,CAAK,CmCIsC,EAAE,CAA7C,AnCJA,EmCIgD,AnCJrC,GgCGF,EAAqC,CAArC,EAAwC,ANHb,A1BApC,C0BAyD,C1BApC,GgCGiC,ENHlB,GAA8B,KAAK,KMGtB,CAAqB,ANH7D,CAAP,KMGO,EAAqE,KAAK,MAA1E,CAAP;AJEA,AOAAA,AJOAA,AhBLD,AjBDC,AoBiBF,ACJG,AlBPDE,ADXA,AEGG,AXNL,IqCOE,A3BOAA,CkBIA,ESXG,AVkBE,CiBlBC,AJOA,AjCNF,AELA,CTHC,CqCOC,CTcC,CgBdG,AJOA,C/BXD,CkBsBX,AjBXEA,ADXU,CmCIG,AJOA,A9BAbA,EHNA,AoBiBe,EpBjBA,AGMfA,CkCPkB,AJOA,A9BAb,CkCPc,AJOA,A/BXf,CmCIc,AnCJA,CmCIlBF,CJOa,AbWS,AjBXtBE,AVdoB,CqCOC,AVkBE,A3BzBF,CqCQnB,AGMFF,A9BDsB,ADVlB,ATHgB,CSGpB,CTHwB,CSGC,ATHL,E2ByBL,A3BzBY,EAAP,EAAW,C2ByBG,C3BzBd,CAAtB,GqCOuB,EACF,EViBJ,GAA+B,CUlBzB,EACM,GADN,CVkBgC,CUjBrB,AViBsB,MUlBjC,AVkBN,EUjByB,CViBuB,EUlB1C,CAArB,EVkBF;AUhBE,AODA,AECF,ANMEA,AjCNE,A0CDF,AtBmBF,ACLI,AnBlBAA,AEGD,AMGE,AjBTN,AyBWCC,IYHE,AODA,CjCPA,CmCQE,AlBaA,AHVA,EeGI,ASPF,ChCEQ,CoBDN,A9BAA,AELE,CEGD,CJEC,AqBaA,AHVA,CYHC,AGME,A/BXA,EmBkBA,AjBfA,AcKA,CYHX,AGMc,AjCNF,AELE,AgBQhBA,EmBJgB,AFHhB,AOGgB,CrBcC,CrBbC,AELE,CmCID,AJOE,A/BXA,C+BWC,CSPD,CrBcR,AjBfS,C6BQN,AjCNO,AqBaA,AXZlB,CAA0B,CuBK7BD,A/BXEA,AEGqB,CAAhB,EAAmB,CiBef,CqBdP,ArBcF,IqBd8B,AhCE7B,CVDG,AmCJR,CnCII,AUCuC,EVDL,EuCAb,EFDiB,AKAxC,CLAyC,A3BEtC,CyBLL,AOG4C,ChCEQ,U6BDhD,EAAsC,CFDA,EACtC,AFJJ,CAAiB,EIIb,EAA8C,CFDR,CFH1C,CEIY,AEAR,CJJqB,CII8B,EFDb,EACxB,EEAd,EAA2D,EFDrB,EAChB,EEA2C,CAAC,CAAD,CAAjE,EAAsE,IFDhC,EACH,AEAyC,CAAC,CAAD,CAA5E,CFAuC,AEA3C,CFD0C,CEC4C,CFAxC,cADJ,CAAxC;APED,AOAC,AEAA,ANMAC,AhBNF,AjBAM,AmCJJ,AOGE,ArBcD,AnBlBCD,AEGA,AMGJA,AQEAC,AQEK,IWLH,EpBAE,APCE,AQEF,EeGE,AvBLE,CgBIM,CWLN,AnCLE,CqCKD,AJJA,AOGA,AtCDA,AMGE,CNHD,AsBOL,CWLM,ArCAA,A0BKO,CTLN,AfLE,CqCKZ,AnCFW,CAAT,CiCEW,AnCLE,AgBQjBA,CmBHgB,ApBAA,AbFA,CAAC,AcKA,EhBRI,AQMA,C2BDD,ApBAA,AbFA,AMGE,AgBIjB,CWLgB,ApBAA,AbFjB,AMGiB,CAArBD,AgBI6B,C1BLvB,AIFiB,AcKvBC,AQEK,COCmB,AjCNA,AELP,CAAU,AEGF,AcKA,AQEO,CtBP5B,AcKJA,AQEK,CWLW,AJMW,AhBNX,AyBDZ,CTOFA,AjCNI,A0CDsB,AxCJX,AEGW,AcKA,AQEO,CxBV/BD,AwBUC,CWLyB,AnBG9BC,CmBHe,ApBAgB,ASKO,CWLpC,ApBAF,AjBAgC,AkBGA,AQE3B,C1BLC,AmCJc,AjBOpBA,CDHkC,ASKO,CRFN,AQE9B,ERFLA,AQE4C,CgBNxC,AhBMC,CSTI,CTSsC,CSTnB,KAAK,eAAL,CAAqB,CAArB,CAAnB,EAA4C,KAAK,eAAL,CAAqB,CAArB,CAA5C,CAAP;AEKD,AEAA,ANMCD,AhBNA,AjBAI,A0CFgC,ArBerC,AjBfK,AMGNA,AgBIA,EAAA,ETLE,EPCI,EuBKE,AhBNF,APCE,CODD,CgBMG,CvBLC,AgBIF,CtBPC,AsBOA,COCG,AjCNF,A0BKF,CAAT,CTLE,AbFW,CAAC,CAAD,AsBOE,CTLC,AbFN,AsBOV,CTLE,EPCmB,CNHD,AMGE,CAAD,CAArBA,IuBK4B,A7BRtB,C6BQuB,AjCNvB,CAAsB,AIFA,I6BQA,AjCNtB,CiCMJA,GjCNkC,CAA9B;A8BAN,AGOEA,AhBND,AjBAI,A0CHiE,AxCHlE,AEII,AMGRA,AbAF,AiBtCO,AIuCL,AQGA,EAAA,IgBRsE,AhCIhE,EuBKE,CHPD,AjCEA,AiBtCO,CmB2CJ,AfJF,ChBRCC,AQOE,AgBIF,CINT,AJMU,COCG,APDJ,ChBJK,AQCd,AQGA,CxBXa,AY/BR,CZ+BS,AY/BO,C4BkCjB,AtCCW,AsBOA,CtBPP,AsBOR,CxBXiB,CAAb,CQOiB,CRPD,AQOE,AItCjB,CZ+BgB,AQOA,AbAvB,CaAED,AbAsB,AiBtCO,EZ+BL,E+BYI,CAAC,A/BZzB,AY/BC,CjBsCP,CKP+B,AY/BO,CjBsCN,CKPC,C+BYG,A/BZ9B,EAA8B,C+BYG,CAAT,CAA1BA,EnB3CG,CjBsCP,CiBtCkD,CjBsCN;AiCD3C,AOAC,AEAA,ANOEA,ASTE,ArBeJA,AlBLE,ADbI,AEIC,AMGPA,AbAAC,AiBtCA,AIuCE,AQGF,EAAA,ILOM,AXXA,AbAF,AiBtCA,EmB2CI,A/BZF,CmCKC,AEAA,A7BEE,AQCF,CeIG,CSTD,AhBQA,CxBXC,AQOE,AgBIF,COCG,A/BZF,AwBWF,CaNT,AlBac,AnBlBJ,AwBWV,CxBXM,CwCGF,A5BlCJ,COiDiB,AxBXF,A6BIA,CxBXC,AY/BA,AY0ChB,CgBRiB,AhCIE,CAAC,AbAF,CaAC,CPMV,AONTD,C2BFA,GhBaAA,AlBLE,ANNsB,C6CJpB,A7CIqB,CoCKG,CAAC,EfJT,CrBDpBC,CoCK4B,CAA1BD,EfJA,MhBRyB,IAAX,EAAiB,IAAI,CAAC,CAAD,CAArB,EAA0B,QAA1B,CAAV;AmCMP,AEAA,ANOGA,AhBPF,AjBAI,A0CFD,AtBoBH,AlBvBK,AEIA,AMGLA,AItCE,AIuCA,AQGF,EAAA,EZ1CE,C4B+BA,ChCOI,CUgBC,CaXC,AjCPF,AUEE,COFD,ACGA,CeIG,CSTD,AhCIE,AgBIF,CAAC,COCG,AhBPb,AjBAW,A0BMF,CZ1CG,AY0CZ,CZ1Ca,CMsDb,AVhBgB,AItCJ,CJsCK,AItCf,AY0Ca,ChBJC,AgBIhB,CNYmB,AVhBnBA,CUgBoB,ANtDF,EMsDI,GpBlBhB,CAAkB,AcpCA,CMsDG,ANtDF,CmB2CG,AnB3CJ,CmB2CK,AnB3CX,CdoCZ,CAAF,AkBGgB,CJvCU,CmB2CG,CbWX,EaXc,CAAR,AnB3C1B,CmB2CAA,AbWoC,IFfpC,CEeyC,OAAvB,CAApB;AHjBD,AyBFK,AtBqBJ,ACPA,AjBbG,AMGHA,AbDA,AiBrCE,AIsC+B,AQIjC,EAAA,EZ1CE,CV6BO,CMSH,AbDF,CwBWCC,AxBXA,CaCG,GgCJC,ArBcA,AjBbA,AMGE,AgBIF,CLMC,AKNA,CAAD,CZ1CG,AY0CZ,CLMa,APhDA,COgDb,AXVgB,AItCJ,CJsCK,AItCf,AY0Ca,CLMC,AXVA,AbDZ,A6BKJ,CLMiB,AXVjBD,CItCkB,CaoClB,CNYoB,AxBXA,G6CHhB,C5BlCoB,CAAC,COgDzB,APhDwB,CAAN,COgDU,CAAC,CxBX7B,AiBrC8B,EaoC9B,A9BCgC,CwBWC,EPhD/B,MaoCF,CNYA,EAA4C,OMZ5C,CAAW,CAAX,EAAc,CAAd,EAAiB;AMOf,AjCPE,A2BCF,AeHqB,ArBerB,AnBlBE,AEKA,AMGJA,AbDE,AiBrCA,AIsCE,AQIJ,EAAA,ELME,AxBXA,AiBrCA,EJsCI,EAAE,CuBIDC,CZMC,CrBbCA,A2BCA,ANYA,AjBbA,AMGE,AgBIF,CLMD,AjBbE,AsBOA,COAC,AZMT,AnBlBS,AwBYF,COAG,AvBJE,AItCF,AY0CZ,C1BPa,AIAA,AMGE,AbDF,AiBrCA,CdmCC,A2BCZ,ANYY,AjBbV,AMGU,AItCF,CmB0CG,A/BZX,AQQJD,AItCE,AY0Ca,CtBPC,APEA,A6BKhB,C1BPiB,AIAA,CJARC,AcnCS,EmB0CE,AjCPA,AIAA,CAAhB,CJAkB,AqBaA,AxBXA,CoCKC,A7BPA,APEA,CiBrCC,CdmCC,A4BJzB,APiByB,AjBbA,AUnCA,CVmCrB,AUnCoB,CAAN,CVmCU,APEZ,CoCKd,CZM4B,APhDA,CmB0CC,AZMA,AxBXA,CoCKC,AZMF,CAAhB,AxBXZ,CGFgC,CiCOC,AjCPA,AcnCjC,COgDkC,COjBpC,EKWE,AZMA,EYNuC,AjCPrC,CiCOsC,CjCPC,CAAC,EiCOE,ALX9C,C5BI+C,EAA3C,EAA+C,CiCOjD,CjCPmD,CiCOC,AjCPlD,C4BJJ,C5BIwD,E4BJ5C;AQSP,AHGDD,AjCPE,A0CHsF,AdD1F,APiBAC,AnBlBC,AEKG,AMGND,AbDC,AiBrCC,AIsCC,AQIH,IZ1CE,CZuBA,CwCS0F,AhCMtF,EWUA,AXVE,C0BCM,AfSP,AKNA,COAG,CAAC,ALXF,A1BDA,AQQE,CVHD,AqBaA,AjBbA,E6BOI,AvBJA,AItCF,CVmCC,AMGE,AItCF,Cc+BC,AxBIA,AMGA,AItCF,C4BgCR,AtCGS,AMGbA,AItCE,COgDc,AjBbN,AsBOV,CgBV0G,C5BhCxF,CdmCC,AqBcb,CrBdc,A4BJlB,AxBIkB,CJAD,AkCDnB,ClCCU,CAAa,AqBcb,CAAC,APjDa,CAAC,CVmCnB,AUnCkB,CmB0CK,AjCPnB,A0CHN,ArBiBE,APjDY,CmB0CY,AjCPF,AqBcb,AjBda,CgCIvB,AHGwB,CGHQ,AHGjCA,AnB1C0B,EdmCpB,AqBcS,CAAC,CrBdc,CcnChC,COiDa,CrBdL,AqBcc,CafxB,Gbe4B,CAAC,CrBdc,CqBcnB,CeVnB,EAAiD,AFLtD,ClCCU,AqBcyB,IrBdiB,CoCI/C,AfUmC,CAAC,CeVqB,ApCJP,AqBcb,CrBdc,EqBcX,CAAL,CeVnC,AfU8B,CafnC,CEKqE,CfUnB,CafjC,CbeO,GeVnB,CfUmD,CeVqB,CAAxE,CfUU,CeViE,AfU1E,CeVD,ApCJC,AqBaJC,EeTiF,ApCJP;AoCK5E,AHGID,AjCPI,AkCDN,AQFC,AxCFC,AEKI,AMGRA,AItCE,AY0CH,MUHK,A1BDE,EAAE,EuBIE,AjCPF,CoCIC,AHGE,ACRF,AxBIE,AItCF,CsBuCC,ClCTC,AQQE,CuBIC,EvBJE,CNHD,CgCIX,ADPJ,A/BGQ,AMGRA,CVHiB,EcnCf,CdmCkB,CoCIC,CAArB,EAAwB,CpCJhB,EiCOqB,CAAC,CAAC,GAAG,CAAL,AEV7B,CFUIA,C/BZkB,IAAX,GgCKP,ACHJ,KDGS,SCHT,CAAe,KDEN,EACiB,CADjB,EACoB,CCH7B,EAA4B,EDGM,QCHlC,EAAwC,KDGX,CAAqB,MADzC,EACiD,KAAK,MADtD,CAAP;AEMA,AKCG,AREDA,AjCPI,AmCHN,AdgBA,AlBJA,ADfwB,AEMnB,AMGPA,AbFA,AiBpCC,AIqCC,GJ3CF,GJ4CM,EWUA,AXVE,C+BEM,ANRP,AdgBA,AlBJA,ACXD,APGC,AiBpCA,AIqCA,CeKG,CGHD,A1BDE,CWUD,CXVG,ENHA,CgCIX,AjCKA,AONc,EyBNd,AzBMFA,CyBNiB,AhCYA,ACTA,CiBaf,AxBZF,CMQE,CkBIkB,AjBbA,CAAC,CAAD,C6BOK,A7BPR,CqCKZ,CAA2B,CREJ,A7BPF,C+BHxB,EAA2B,AjBKT,GdFP,EAAqB,MqCK7B,ANRH,AjBKA,EuBG+C,ANRP,CAAxC,KMQG,EAAoD,IAApD,EAA0D,IRGzD,CADsB,CQFvB,CRGI,CQH8D,ARE3C,EAChB,EADgB,EACZ,EADY,CQFvB,CRGe,CQH8D,CREtD,EACJ,EADI,CAAxBA;AGFH,AKCDA,AzCLO,AoBmBP,ACNI,AnBpB+C,AEO3C,AMGRA,AbFD,AiBpCG,ArB6BG,AyBQH,MuBGI,ApBQF,AnBpB+C,AQU7C,CUgBC,ACNF,E5BnBS,AyBQP,CGWC,AnBpBG,CuCYA,A/BFA,AItCF,CZ4BiD,AY3BtD,E2BuCU,ArCLF,AMGG,EAAE,CNHF,CiBaX,AjBbY,AUlCN,CVkCO,AUlCN,CZ2BA,AY3BD,CZ2BN,AQUkB,AIrClB,CVkCgB,AMGL,C+BEQ,ArCLR,CAAH,AUlCI,ArB4BX,CAAyB,CiBSH,CNHF,AXNpB,CgDWuB,A/BFC,CItCpB,ArB6ByB,C2ByBlC,CNpDI,ArB2BC,AyBQe,EEiBa,AhBnBrB,AMGsB,AjBTI,CiBSxB,CjBTT,CWM6B,CqCKpB,A/BFyB,AIpC7B,ArB2BgC,CiBS5B,AIpCH,CAAD,ArB2BL,CgDWmC,ArBcA,ANpDpC,CMoDqC,AVfvC,AjBV4C,CWMN,AMIpC,AQFF,CJnCc,CJqCV,CNJqC,GAAG,AMIpC,AIvCD,C2BwCK,ArCLiC,CAAD,AMIlC,AIpCR,CVgCI,CqCK4C,CrCLD,AMIpC,EAAT,CAAH,AIpCO,C2BqCVA,A3BrCW,CAAD,CMmDV,AVfuB,AIpCnB,EJoCqB,CIpCT,GJoCa,EAAE,AIvCtB,EAIL,CJmC8B,EAAT,CAAvB,EInCQ,CAAC,CAAD,CJmCkC,AInCxC,EJmC0C,CInC9B,EJmCiC,EAAL,CIvCnC,CAAP,CJuCoD,EAAE,GAAG,EAAhB,IAAuB,CAAhE,CADFA;AuBKI,AjCPC,AmCJH,AfwBF,ACPG,AlBJD,ADhBC,AEOO,AMIVC,AIlCC,ArBwBDD,AyBOiC,KGU/B,CXPE,AjBVE,CiBUNC,CyBRM,AhCaA,AVfE,C0CED,AzBQA,CuBGC,AvBHRA,CWSS,A5BnBE,EAAE,C0CED,CdiBC,CAAC,A5BnBE,EUeA,AVfhBD,C4BmBiB,AjBbA,CiBaC,AjBbA,GDSG,ACTA,CAAX,C6BOa,GAAG,AZMjB,CcjBP,CdiB0B,CcjBC,ChCa3B,EAA8B,Y8BF5B,EAA0C;AGH9C,AKCA,ARGM,AEXF,AdiBA,AlBJA,ACTK,AU9BV,ArBwBCA,AyBOI,MGYA,A5BnBE,C2CSDC,AKCAA,ApBSA,CYNC,AxCbE,AyBOJ,EGYI,CeVC,AKCA,ANRA,AdiBA,AlBJA,ACXD,AXJG,C2CSD,AKCA,CRGC,AxCbE,E2CSA,AKCA,CLDRA,AKCAA,ARGS,AxCbE,CwCaV,A7BPS,CgCGC,AKCA,AhDVhBD,C4BmBI,AHZW,CkBEG,AKCA,GLDG,AKCA,CtCKjB,CAAmB,CgCbnB,CMQqB,CLDC,AKCA,CLDC,ADPA,EAAvB,GMQJ,CLDA,AjCMI,CsCL8B,CLDC,AKCA,CLDC,EKCE,CLDC,CKCvC,CLDA,CKC0C,CLDC,CKCC,CLDC,AKC7C,CLDA,CKC+C,CLDC;AAC9CA,AKCAA,ARGI,AjCRF,AmCHD,AdiBA,AlBJA,ACTO,AMGV,AjBTA,AyBMe,MRGX,E0BAI,AKCA,ARGF,AjCRA,CPLC,EgDUI,A/BDF,AjBTA,C2CSG,CpCJD,CyCKG,AhDVF,C2CSG,A1BAF,CAAb,AjBTO,EgDUW,A/BDF,C+BCG,ArCJF,AXNA,C2CSG,AKCF,ArCJR,CgCGW,AKCnBA,AhDViB,C2CSC,CAAlBA,C3CToB,COKhB,CiCQkB,AjCRA,APLxB,GwCa2B,CjCRrB,CAAF,aiCQE;AHLD,AWGHA,ARGG,A7BPI,AMGP,AjBTH,AyBK8E,IRI3E,CAAC,G+BCK,A/BDF,AQJuE,CYE/D,CpBEZ,MQJ0E,CAAW,EuBKpE,GAAG,KbTtB,IVI4E,EAAxE,CYEC,CAAmC,QWGG,CACvC,MXJC,CFNL,CEMyD,MAApD,CWGsC,CXHsB,AFNjE,CaUqB,IXJhB,EAAmE,AWG7B,EACd,GADc,CXHtC,CWI6B,CXJ8C,GAA3E,EAAgF,AWG1C,CAAzCA,AbTF,CAAsB,gBAAtB,EAAwC;AEOxC,AMCE,AGDG,AEIHA,AREC,AjCTC,AmCHF,APAA,APiBA,AjBZK,AMGL,AQJE,IGaF,AXTA,CAAC,EoBFEC,CMCC,AKGE,AbVF,AlBQA,AQJF,CqBEU,AJNP,CnCGC,AqBcA,AXTN,CoBFO,ATWA,CSXC,ATWA,COjBC,CVID,CYEG,AWIE,AzCPF,AqBcA,CSXRA,ATWG,CAAN,AHbW,CYEG,AWIE,CAAC,CXJD,ATWA,CAAhB,ESXmB,AIFrB,COMwB,ANVtB,CMUgB,ANVK,EnCGf,C8BGkB,AWKrB,AzCRqB,C8BGC,AMCA,CAAC,CDP1B,CnCGM,CyCQE,CFLL,AJN2B,AjBIF,CYE9B,ASAwC,ArBFT,EYEI,AWKrB,CXLsB,A9BHA,CAAhC,A4BHE,EEMiC,A9BHA,E8BGvC,AFNyC,EEME,AMChB,ClBHG,CYEe,AMCA,CND7C,AWKI,AbX0C,AVIF,EYEI,ASA3C,EAAoD,AEK1B,CLJJ,AKIK,CvBPF,CkBGuB,AFHrD,AhBAI,GqBEC,AEK0B,CLJJ,ARPc,CWMwB,CHCN,ARPzD,CaWuC,CAAC,AbXmB,CWMxD,ALFL,EKEuE,AJLnE,CCMuB,EAAwC,CAAxC,CDNlB,CCM6D,AGDjE,CHCsB,CAAzB,AGD6E,AEI7D,ELHwD,CKKrE,GFNA,EAAkF,AEM7E,IAAI,ANZkB,CMYjB,CNXW,CADM,EACH,EDG7B,CAA8B,IOQ1B,IAA4B,ANZA,CMYC,CNXS,IMWV,CNXe,CDG/C,EOQ0C,APRM,GCJhB,CAA9B,OMUAD;AXHAA,AMCE,AGDJ,AvCHMC,AkCCJD,ACHA,APDE,ARwBJ,ACPC,AjBZI,AMGJ,AQJG,GRCJ,G6BCI,CAAC,AnBkBE,CUlBC,AIFA,CCHD,AzBOA,GoBFK,A9BHF,CoCIC,A1BCA,EoBFI,CKLb,CCME,C1BCY,EoBFI,CAAC,CAAD,AFNV,AlBQU,CoBFlBA,AVkBF,AVhBO,EAAgB,CUgBG,CmBlBD,AvCHA,A4BHV,CWOb,EvCJ0B,AoBqB5B,GcpBiC,ElCDA,CkCCG,EAAlCA,KKEuB,EACN,KXPf,CWMqB,AvCHG,CAAsB,CuCIvB,GvCJC,CuCIG,AvCJzBC,CuCI0B,CAAD,CADN,EACW,MADX,EACmB,MADnB,CAAzB,EACqD;ATAnD,AMCC,AGAD,AEIA,ARAA,AjCRI,AkCCJ,ACHD,APDG,ARyBJ,AhBpBG,AMGD,AbFJ,AqBFK,AQQE,IINH,AIFA,AxBIA,CAAC,EoBFE,CWKC,ARAA,AvBHA,CbFC,A6BMO,CINN,ApBEN,C6BDO,AXPA,IaWP,AzCRW,CuCIX,CEIa,GzCRG,C0BSb,CAAsB,IODH,ApCL1B,CAA2B,EoCKE,ACPA,CJEC,AIFA,CJGxB,CJKC,C7BNP,C6BMyC,C7BNN,CGHpB,AkCCX,ClCDiC,EkCCE,ElCDxB,CAAP,E0BSD,CODH,CHL0B,AJMuB,CODN,CHJxB,GFPjB,GEMwB,AFNwB,CAAhD,CEOyB,IADD,EACO,MADP,CIDxB,CJEuC,GADf,CAA1B,AIDO,eAD4B,EACX,CADW,EACR,KAAK,eAAL,CAAqB,MADb,EACqB,KAAK,MAD1B,EAEjC,gBAFiC,EAEf,yBAFe,EAEY,CAFZ,CAAnC;AJIA,ASAD,AEIG,ARAA,AhBLC,AiBAH,ANNE,APgBJ,AXRE,AbFF,A6BMA,EAAA,EILE,ApBCA,CAAC,CuBGC,EvBHE,COFQ,AIUP,AxBVA,CiCCC,ApBCN,CwBFO,ANNA,CFYC,CILC,AGIA,APCA,CODC,APCF,CODG,ACLA,AbUb,AxBVa,A6BMb,C7BNc,CiCCC,CAAC,AbDX,ASMW,CTNQ,CgBKN,CNNlB,A9BCA,CiCCoB,CAAC,AGIA,ECLZ,CAAe,ERME,CILV,AGIJ,APCe,CAAD,CAA1B,CIL8B,AWIP,CXJR,AGIgB,CHJ7B,AbDG,EAAoC,CWNrC,EKWO,ANNX,CMMI,ALXkC,EXMjC,CgBKoC,CAArC,AhBL6C,CWNN,EaWvC,AxBLC,CUDL,CcMwC,AxBLc,EiBA7C,EAA0C,EOK/C,AxBLC,CWNiC,CaWU,AxBLc,CWN1D,EaWA,EAAiD,CxBLhD,AUDL,CAAgB,CVCsD,GwBKlE,CdNJ,EVCK,AUDkB,EVCuD,IiBAZ,EAAzD,CAAP,CjBAG,EAAmF,IUDxF,EAAyC;AGGxC,AMDC,AKKC,AxBLHD,AjBJM,A2BGJA,ACLC,APgBJ,AjBZG,AMID,AbFF,AqBHG,AQSF,EAAA,ChBPO,C0BCL,CRXsC,CXWlC,EUDE,CjBGD,AQLA,CkBGC,AnBAE,CbFD,CAAC,AsBQA,CUNC,AnBAE,ASMF,CAAD,C1BVG,AIEA,AsBQb,CtBRE,CgCEa,CAAC,AVMA,ECPI,CVCC,CmBAD,CAAC,ATDE,CVCC,ISME,CUNV,AVMW,C1BVC,A0BUF,CRTN,AQSpB,CUN8B,AnBAT,AjBJf,CoCIS,CAAb,ApCJ8B,CiBIG,EAAnCA,EUDuC,GAAG,MTFxC,USEqC,GAAsB,CAAC,GAAD,EAAM,GAAN,CAA3DA;ASED,AGAD,ANII,AhBJJC,AjBJQ,A2BGN,AvBDD,AMIC,AQLA,AQSF,CSnGgC,CAAd,ATmGlB,EhBJE,CAAC,C6BFC,AtBAA,CAAC,CPEC,CiBHC,ATFA,CqBGC,ANIA,AhBJA,APEA,C6BFC,AtBATA,CSMU,ChBJC,AgBIA,CAAD,COFG,AjCRA,A0BUb,EaNI,CNIY,AvBFA,AgBIA,EgBbhB,ChCSmB,C6BFC,CAApB,AZDE,AjBGA,CuBEM,ANLc,CYCC,AJ7FS,CAAlC,CFiG2B,CPEC,CCPC,ADOA,CCPC,ADOF,CCPC,ATFP,AQSpB,COFI,ANLF,EMK8B,AjCRxB,A2BGwB,C3BHC,GkBC/B,ClBDM,A2BG6B,AeNrC,CfMsC,C3BHC,A2BGF,CAAnC,EAAwC,IeN1C,Q1CGQ,A2BGN,EAAsD,MeNxD,CAAiB,CfMf,SeNF,EAA6B;AZQ7B,ASAE,AEIA,ARAI,AjCRC,A2BGL,AeNA,AtCKH,AMIG,AQN2B,AQU7B,EAAA,EeFE,A/BFA,CAAC,GuBEG,ASXA,AhCSA,CoBFC,AYPA,CDWC,A/BFA,C6BFC,AZDA,CGCT,AJMU,CeFC,ARAA,AvBFA,AgBIA,COFC,ASXA,AhBaF,CaNR,AbMF,CeFE,ERAI,AvBFU,AgBIA,COFC,EvBFE,EiBHjB,AzBRF,AQWE,CuBEI,EAAkB,E/BbxB,AwBe0B,CgBbxB,AhBayB,CAAD,COFpB,ASXuB,AhBa7B,MxBfA,EAAA,CAAG,IAAH,EAAS,QAAT,EAAmB;A4BUpB,AMDC,AGCC,AEIA,ARAI,AhBLL,AyBNI,AtByBJ,AlB3BE,AQWD,AIjCI,AI2BD,AQUJ,EAAA,KTPKA,AGmBE,ClB3BD,AgBKF,CkBGG,AtB9BO,EG8BL,AyBNA,CzBMC,ASOA,CxBfC,AwBeA,CUPX,AlCRY,AYtBP,AYqCK,CTPG,AkBLA,ArBzBO,AYqCpB,GAAgB,CRVD,EDGf,AGmBA,AlB3BM,AYtBD,CZsBe,CeQC,AH9BO,CG8BN,AGmBE,EsBzBpB,AxCFE,CeQmB,AfRvB,CwBewB,CgBbC,AxCFA,AwBeA,CTP3B,ASO0B,CNYK,AMZ/B,CTP8B,AGmBE,CHnBD,AH9B1B,EAAmC,EG8BL,EyBNE,CAAC,GzBMtC,EAA2C,AGmB3C,asBzB2B,GAAgC,KAAhC,EAAvB;ANOL,AnBAG,AjBJI,A0CFH,AdAD,ARyBJ,AlB3BM,AYtBJ,AI0Be,AQWf,CNhEF,CMgEE,ETPE,CyBRA,C5BtBE,EG8BE,AWNA,CXMC,CAAC,CyBNC,AxCFAA,CeQH,ASOI,CTPR,ASOS,CAAD,C1BXG,AEJA,AwBeb,CTPc,AfRA,AYtBd,EAAgB,AYqCA,CxBfC,CFIC,AEJTA,EAAW,E0BEE,A1BFA,G0BEG,A1BFA,C0BEnB,AFaoB,CAAC,CAAD,CTPG,AfRA,AwBe7B,CTP8B,AjBJjB,A4BDN,A1BHuB,CeQD,AjBJE,CiBIjB,GAAqB,AjBJtB,A4BDD,C5BCN,AEJF,EAAkC,CAAC,EeQrC,CfRwC,EAAtC,EAA0C,EAAE,CAA5C,EAA+C,wB0BG5C,KAAkD,CAAlD,IACA,gBAAgB,IAAI,KAAK,wCAF9B,EAEyE;AWK3E,AEIA,ARAI,AhBJF,AjBJG,A0CFD,AdEA,ARwBN,AlB5BQ,AQUN,AIhCE,ArBwBG,AyBCwE,AQY7E,ITPE,AH9BA,GyB8BGA,CtBAC,ACLuE,CuBStE,AxBJA,APEA,AjBRO,AiCaP,COHC,AhBJA,APEA,C6BFC,A7BEF,C6BFG,AtBAJ,CAAJ,AWJS,AlBMA,CAAJ,AIhCK,CyB8BC,AEIb,ARAa,AvBFb,AIhCa,CyB8BRA,AtBAS,AH9BF,AIyBgE,CUCxE,Ad1BF,AIyBqF,CqBKvE,ANIA,CPGhB,CaPkB,AzB9BA,GyB8BG,CNIb,CSVG,C5BxBa,ArBwBnB,C8CMoB,ANIA,AnBlCA,ArBwBO,C8CMN,AzB9BF,CAAtB,C4BwBc,AxCFD,ATEV,CwCUD,AhBJyB,ACL+C,CDK9C,AxBNO,CwCUN,AhBJA,ACL3B,CqBKJ,ArCRM,EqCQ4B,AtBAA,AfRb,CqCQc,AtBAN,CAAf,EsBAwB,ArCRb,CeQc,AfRb,CqCQ1B,ArCRyB,CAAnB,CqCQoC,CGNtC,AxCF0B,CqCQc,CAA5C,AtBAE,AyBN+B,EHMc,IrCRzC,IwCEqC,CAAC,kBAAX,EAA7B;AHOF,AEIH,ARAO,ASVH,AdEA,A1BJE,AQUN,AIhCG,ArBwBFD,AiCaD,IZrCG,ErBwBI,CAAC,C8CMD,ANIA,ExCVI,GwCUC,AxCVE,CwCUD,AnBlCA,ArBwBE,CqBxBD,CAAD,CAAV,CmBkCI,CAAW,CnBlCC,ArBwBlBA,IwCUM,EAAkB,AnBlCA,CAAC,CAAD,CAAtB,CmBkCI,kBMJyB,eAAzB,EAA0C,IAAI,CAAC,CAAC,GAAG,CAAL,CAA9C,EAAuD,IAAI,CAAC,CAAD,CAA3D,EAAgE,MAAhE,EAAwE,MAAxE,CAAJ,EAAqF;AACnF,ANIC,AhBLH,AjBJE,AczBF,AIwBE,IJxBF,KG6BKC,CsBCC,CAAC,EtBDE,AjBJA,AkBDF,CDKG,AH7BA,AIwBF,CJxBG,CAAD,CG6BG,AH7Bb,AIwBW,CDKG,ACLP,EJxBS,AIwBF,CDKG,CAAjB,AjBJE,AkBDc,CgBMlB,A/BKA,CcNsB,CAAC,ACLF,CJxBG,CAAC,CG6BC,AH7BF,CG6BG,AdM3B,AWnCE,EyB8B2B,CAAC,AtBDA,CiBC9B,GhBNgC,CAAC,CDK/B,AdMF,EcNsC,CdMtC,CcNwC,AiBCxC,A/BKI,CcNF,ACLE,EDKuC,AdM3C,AeXyC,CAAC,CqBMb,ApCKpB,EoCLsC,ALA/C,AhBN6C,EAAzC,CgBMM,CKAyC,ArBNF,CqBMG,CAAC,ArBNF,CAA/C,EqBMoD,ArBNF,CqBMH,CAAtB,EAA+B,IAAI,CAAC,CAAD,CAAnC,EAAwC,MAAxC,EAAgD,MAAhD,CAAzB,EAAkF;AAChF,ANIH,AhBLC,AjBJD,AkCKD,AQPA,AdEAD,AzBUAC,ADdE,AYrBF,ArBwBF,AyBAM,IJxBJ,EG6BE,CxBLCA,CmCCG,AzBUF,CuCZC,CzBMC,ACLF,CDKG,AiBCA,ANLE,AnCDF,CwBKC,AxBLA,CUWRA,CcNM,AyBNN,AdEY,AdzBF,CyB8BC,AtBDT,AyBNS,A5BvBA,ArBwBA,CqBxBD,ArBwBZ,AyBAY,CJxBV,CG6Bc,AxBLA,CiDDd,AjDCe,C8CMX,AGPY,A5BvBA,AIwBF,EzBAI,CAApB,EiDDuB,AjDCA,CqBxBC,ArBwBA,CqBxBC,CAAD,ArBwBxB,CqBxBE,CcyB4B,AnCDF,CmCCG,EXIA,AiBCT,CjBDU,CAAD,CAA3B,CCL6B,CAAC,CUCpB,CcFI,CAAqB,AdErCD,GMKA,GQPA,ExBC2C,CAAC,CAAD,CAAZ,EAAiB,MAAjB,CAA3B;AqBOD,ANIJ,AhBLE,AyBND,AxCFC,AYrBD,AIwBG,KhBRH,IwCOK,ExCFE,AYrBA,K4BuBP,K5BvBA;AyB+BC,AtBDF,AWLC,ARwBJ,AjBdI,ADbE,AEQC,APEP,AiB/BG,ArBwBCC,GqB9BF,Kc8BM,AzBUA,AVVA,CWKQ,APEP,AiB/BA,CMgDT,CAAA,EQxBa,AzBUA,CVVC,GAAG,CAAbA,E2BwBJ,AjBdQ,CiBcN,AjBdmB,GCLd,APEP,COFgC,APEP,GKVV,AEQR,CgBmBP,ChBnBqC,CPErC,CuBiBE,AlB3BI,CLU2B,EMGzB,ACLD,CwBLC,AzBU4B,CyBVC,AxBKO,APE5C,EMGQ,ANH+B,CMGnC,ACLG,CgBmBL,CjBdwC,ACLO,OgBmB/C,EQxBM,CAA4C,ARwBvC,GQxBL,CAAJ,EAAsD;AWOvD,ANGD,ALTI,ARwBJ,ACPK,AlBPD,ADda,AESjB,APEAD,AiB/BE,ArBwBAC,AyBDE,MfWA,ANHE,CoCEDA,CxCTC,C2BwBG,ACPK,AjBZP,E6BIEG,A9BCA,AWlCA,EcwBE,AnCAA,CwCSD,AbeI,AjBdF,ACLA,CPEG,CJPD,CwCSD,A7BJE,AU7BA,CmBiCf,ALTgB,A/BOE,AiB/BF,COyCX,AlBPY,C8BDDA,AZQS,AjBZzB,AXLkB,CAAC,CWKC,C6BIH,AbejB,ANhDS,CrBwBK,C4BiBT,APzCH,ArBwBqB,CwCSH,A9BCR,C8BDZ,AZQgC,AlBPP,CVVC,CwCSH,AxCTI,CUUf,ANHkB,AJPJ,CwCSDA,A9BCrB,ANH2B,AJPR,CAAO,CAAP,CwCSvB,AxCTc,CAAZH,CwCS0B,CZQvB,AxBVyB,EwBUc,AxBVL,E+BP5B,CAA6B,C/BOV,CAA9BD,C+BPW,CAAP,MPiBC,EAAsD;AYPzD,AhBLF,AWJG,ARwBL,ACPEA,AlBPG,ADfuC,AEUxCA,AU7BD,AIuBE,CEuBL,IQxBI,CXME,AIaE,AnBtBoC,E+BcpC,A7BJE,EFVJ,C0BKK,AxBKE,CiBYC,AnBtBqC,EeSrC,AbCE,C6BID,AZQE,CYRDI,C7BJG,CaDD,AbCE,C6BIL,CAAX,AZQkB,AnBtBhB,CmBsBiB,CYRH,AhBLE,CAAC,AbCJ,CAAfJ,GiBYFA,EJbgB,IAAe,CAA/B,EAAkC;AsBElC,ANII,AhBLF,AWJEA,ARyBN,ACREA,AnBtBG,AEUD,APCF,AiB9BD,ArBuBG,IwBKA,AbCA,E6BIE,AZQE,AxBXF,CODC,CaDC,AbCA,CmCAC,AtBDA,AxBLAC,CmCCG,GWKV,AnCAK,AXNM,CWMT,AXNU,CwBKV,AIaa,AxBXf,EODe,APCA,AJPA,CwBKC,AIaE,A5BlBF,CwBKd,CbCgB,CuBAlB,AvBAmB,AXNA,CAAjB,EWMgB,AXNI,CWMpB,AXNqB,GmCCK,AnCDF,CAAxB,EwCU2B,ALRrB,APgBuB,A5BlBF,CwCUC,AxCVA,E4BkBI,A5BlBhC,C4BkBgB,COhBL,AnCFqB,E4BkBI,MMZtC,IMI8C,EAAjB,CAAzB,AZQc,EMZlB,CMKQ,AZO8C,CAAtDD,UOhBQ,CAAmC,GKSpB,CAAC,GNLxB,CAAqB,EMKS,GAAGI,GAAC,ALT1B,CADJJ,CDKJ,CMKqC,CNLJ,KMKV,CADnB;AMHL,ANKK,AhBNH,AUCC,ACJEA,APgBJC,AlBRE,ADdD,AEUC,APCA,AJPED,AgCjBC,APgBH,IdOA,E6BKE,AZOA,CjBZC,CAAC,CPCCC,A4BxBO,APgBP,CUGG,AnCFA,CkCMD,AxBIA,ACJJ,CiBYK,AjBZR,CPCS,CAAC,CwBWC,AjBZA,CuBAC,AxBIZ,CNHa,CODb,APCKA,AJPW,EIOA,CJPG,CIOD,C4BxBf,CAAwB,CJmC7BA,AxBXuB,AJPE,CkCMhB,AlCNiB,CkCMD,ElCNJ,AgCjBhB,ChCiByB,CwCWD,AR5BO,APgBhB,CeYU,CxCXG,CIOD,AJPE,CmCEC,A/BKF,AJPA,CAAH,CkCMK,AlCNE,CkCMD,ACJE,AnCFR,CkCMK,AlCNd,CkCMZ,AlCNLD,CIOF,A4BxBG,CEuBmC,C9BCC,A4BxBO,C5BwBN,AqBRxC,GrBQ2C,CoCIC,CpCJ5C,CoCI2B,CAAzB,ApCJ6C,C8BDC,CAAC,A9BCA,CoCK3C,ANN0C,A9BChD,C8BDO,CAAP,ACJsD,A/BKF,A4BxBjD,CGmBoD,CHnBM,WQ6BxC,CAAC,KLVc,CKUR,CLV1BA,EKU6BI,GAAC,GAAG,MAAb,GAAsB,CAAvB,CADnB;AAED,A7BND,AqBvBFH,APemC,MdQ/B,AqBvBA,KrBuBF,CqBvBFA,OzBkBA,IkCKA,clCLA,KkCKA,IlCLA,KkCKA,UlCLA,GAAkB,GkCKlB,CAAiB,MAAjB,EAAyB;ADOxB,AhBRD,AjBHE,AkCKA,ANLE,APgBJ,AjBXE,APAuD,AJPrD,AyBDA,MGmBA,AjBXA,APAqD,EqBRrD,CDMG,AbEL,CwBLM,AnCFA,CyCOC,CbWC,AxBX8C,CoBFxD,ApBGM,GqCDJ,CbWa,C5BlBC,CyBDD,EzBCI,K4BkBnB,A5BlBI,E4BkBsB,A5BlBA,COEZ,GHK0C,CGLtD,AHMwB,E+BNO,CAAC,C/BKsB,EACxB,G+BNxB,GAAmC,G/BMF,CAAC,C+BNM,A/BMP,CAAT,CAAa,a+BNF,A/BKa,C+BLQ,MAA5D,EAAoE;AXIzE,AWHO,APgBJ,AjBXD,APCG,AJRE,AgCjBN,APee,ChB/FmB,CAAX,IuBgFnB,EJmCE,A5BlBA,KmCEK,AnCFA,GAAG,AgCjBA,CJmCC,AnBnHmB,CAApC,EmBmHoB,CAAhB,AInCiB,C5ByBT,CwBUW,C5BlBf,MgCjBN,C5ByBmB,CAAC,A4BzBU,C5ByBX,CAAf,E+BNE,CAA6B,GAA7B,IAAoC,kBAApC;AKWN,ALVM,AxBKP,APCI,AJRG,AgCjBJ,APc2E,AQkBxE,QjCfC,AyBHuE,CeetE,AR7BAA,ACgCO,IDhCH,ChCiBC,AgCjBA,ACgCP,CEbQ,AFaO,CRlBwD,CzBG7D,AgCjBA,APcwE,CzBGjF,AgCjBCA,EAAW,EAAE,ECgCf,COHL,AR7BuB,CCgCQ,IDhCH,CAAC,APc+C,EUKtE,AVLF,GQkBC,CDhCH,CCgCyC,CDhCN,CAAC,GAAG,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AQ8BnD,ALVM,APgBD,A5BlBC,AgCjBD,ACgCJD,MLGI,AInCA,ACgCE,CEhBF,AFgBG,GAAG,ELGA,COhBC,EPgBE,CInCC,CAAC,CAAD,CAAV,CiBiBJ,ArBkBkB,AKHE,CLGD,AKHE,CDhCD,ACgCA,CAApBA,GLGa,CInCY,CiBiBzB,ArBkBI,AInCsB,CAAD,CAArB,OiBiBJ,KAAA,GAAQ;AZUH,AYTH,AtByBJ,ACPK,AxBXD,AJPC,AgCjBA,APaC,AQmBJA,I7BRE,CwBQA,CKAI,CAAC,EINO,CVgBhB,AMVY,CgBfD,AtByBX,ACPW,ExBXE,AqBXF,CrBWG,AqBXF,CwBIG,ExBJA,CAAJ,EE6BX,AvBlBI,AqBXc,AQmBI,CNUpB,AMVqB,CgBfZ,AxBJS,AQmBE,CgBfC,A7COA,A6BQrBA,C7BRE,CqBXmB,EYahB,CAA4B,AYTP,AtByB5B,GAAE,KF7BgC,CAAC,GE6BjC,GUhBK,AYTgB,AxBJjB,CwBIsC,CZSQ,AZbT,CAAC,CE6B1C,EsBzBqB,AxBJwB,CE6BnC,CUhBL,AYTI,AxBJL,EYasD,AYTP,AxBJF,EAAE,CYa9C,AZbD,EYcJ,AYVwD,AxBJF,MYajD,AYTI,EZUD,AYVwD,KAAK,GZShE,EACa,AYV8C,CAAW,KZStE,AYT2D,EZUtC,AYVjB,CZSJ,AYTH,EZU2B,CADxB,EAC2B,YAD3B,EACyC,kBADzC,EAEL,YAFK,EAES;AACd,AVcA,ACPI,AxBXFA,AqBXI,AQmBN,EAAA,IIJI,ATOA,ExBXI,CuBkBC,CF7BH,EYeI,ATOA,AKHA,CAAC,CNUG,AMVJ,CLGG,AKHb,CIJc,AZfF,EQmBI,CIJhB,AVcA,ACPiB,AxBXE,AqBXJ,EYeI,CjCJG,EwBWT,CAAU,EKHE,CAAC,CAAD,CRnBC,AQmBV,CLGH,AHtBc,CGsBvB,AHtBsB,CAApB,AQmByB,CAAf,E7BRoB,CAAC,A6BQF,M7BRC,CAAlCA,E6BQ0C,CAAC,CAAD,CAAT,GAAe,CAAlC,GAAsC,SAAS,CAAC,CAAD,CAA/D;AIHE,AWCG,ArBaP,ACPK,APxCE,ArBsBH,AgClBA,ACiCF,CNQF,CMRE,EDjCE,IhCkBI,CgDYQ,A3BlCA,CWIN,CK6BC,CJIC,CjCfC,AgClBA,ACiCA,CAAD,CAAV,GjCfgB,AiCeA,CjCfd,EAAiB,EgClBjB,ICiCuB,CAAC,CIJxB,AJIuB,CAAT,CeHX,CAAgC,C3BlChC,AYqC0B,CZrCQ,AYqCvB,GAAmB,GZrC9B,EAA0C,CAA1C,EAA6C,CAA7C,AYqCuC,CeHvC,AfGwC,CZrCQ,AYqCT,CeHU,AfGnB,GAAe,CAAlC,EeHX,CfGiD,CeHQ,KAAzD,EAAgE,CfGN,CAAC,CAAD,CAA/D,EeHK,EAAwE,SAAxE,EAAmF;AXAvF,AWCD,ArBcF,ACRG,AxBZC,AiB5BFC,ArBsBI,AgClBH,APaK,AQoBN,GDtCA,GXCI,C2BkCCA,C5CNC,AiB5BNA,CWIO,ACiCA,CZrCC,C2BkCC,CAAC,A3BlCVA,CrBsBW,EgDYE,AvBjBF,CuBiBNA,AvBjBO,CzBKR,CgDYY,AhDbG,CIOjB,AJNc,AyBLD,AQoBf,CeHkB,AvBjBP,CrBWQ,CqBXD,CuBiBG,AtCFrB,CefoB,GAAG,CuBiBG,CAAC,ItCF3B,Aef6B,CAAC,CuBiB9B,EAAmC,CAAC,EvBjB9B,CuBiBiC,CtCFvC,AefsC,CuBiBtC,AvBjBuC,EuBiBI,CvBjBD,CuBiBG,CAA7C,AvBjBM,CfeN,CsCEgD,AvBjBF,EfepC,AefsC,CAA1C,EAA6C;AuBkBjD,AtCFA,ANJE,AJND,AgClBD,APaM,AQoBT,IeHG,AhB9BA,ChCI0B,KgD0BpB,AhB9BA,CtB4BC,CefD,CuBiBG,A5CNA,A4BxBA,ItB4BI,CAAC,AsB5BA,APaF,CObG,EEwBjB,CxBIS,AefS,CfeG,CNJC,A4BxBX,C5BwBY,C4BxBrB,EtB4BwB,CNJJ,C4CMM,A5CNxB,C4COA,ItCHK,CAAP,CwBJF,ETXmC,CAAC,MuBiBR,AdN5B,ATX0C,CAAC,CuBkBtB,AvBlBqB,CAAP,EAAY,GuBiBnB,EACC,CvBlBM,CAA3B,CSWR,CAAc,CcOoB,CAAC,CAAD,CADN,EACW,AdPvC,EAAsB,IcMM,EACmB,SADnB,CAA1B;AXDFA,ASHK,AEMJ,AdPC,ANWF,APxCA,AWKC,APaM,MYeH,AhBjCA,CgBiCJA,ATOKA,APxCA,EgBiCE,ASHO,CzB9BN,Ca6BC,ANWA,CAAC,GAAG,CAAb,APxCc,CAAC,COwCC,APxCF,COwCG,APxCjB,EAAmB,COwCC,ESPpBA,ITOA,EAA4B,CAAC,CMX3B,GNW+B,IkBV5B,CAAwC,IlBU7C,EAA4C,SkBVvC,EAAyD,MAAzD,EAAiE,KAAjE,EAAwE,MAAxE,EAAgF,MAAhF,EAAwF;AAC7F,AXLM,APeJ,AnBtBG,AEYA,APFD,AiB5BF,AIkBG,IGsBH,APxCA,EAAE,CyB8BCA,ErCZS,AEYA,AU9BP,COwCC,AxBZA,C0CEC,AlBUA,CkBVC,AlBUF,COfG,APeT,EkBVW,AnCAR,AU9BQ,CyB8BRA,AlBUS,AnBtBT,AEYgB,APFP,AiB5BA,CZkBQ,ALUP,AiB5BF,CyB8BG,AzB9BT,CV8BF,CmCAa,ArCZb,CEYqB,APFlB,AiB5BW,COwCC,AnBtBO,ALUP,AiB5BlB,CyB8BmB,EnCAhB,EiBUoB,AjBVO,CmCAN,AlBUA,CkBVC,AlBUF,CAAX,GAAiB,AxBZvB,E0CER,A1CFiC,E0CEE,CAAC,GAAG,A1CF/B,CwBYN,CkBVF,EAA2C,C1CFC,C0CEC,A1CFzC,C0CEJ,C1CF+C,C0CEC,GXL1C,GAAgD,gBAAhD;AEQN,ASFED,AEKF,AbVM,APeJ,AnBtBF,AEYAA,APFM,AiB5BL,ArBuBCA,AgCnBF,GXNA,CO0CE,ESRE,A5BdA,AEYE,EmCAE,A1CFF,AJLE,CgDYD,A3BnCA,AWIA,CJoCC,CAAC,AnBtBA,ATKE,C8COC,AlBUF,AnBtBA,CYlBC,CgBgCC,ArCTE,C8COC,AEKf,AbVa,APeA,AjBVE,AqB1Bf,CJoCQ,CAAN,A5BjBe,CWOC,AXPA,CqCSD,A9BRjB,A4BCM,A1BPF,AYlBa,CgBgCjB,ASFoB,AGRpB,ArBkBkB,AnBtBA,AYlBA,CyB8BG,AzB9BJ,CgBgCG,ASFA,AzB9BT,CyB8BTA,ALDF,AhCXI,AEYmB,CFZvB,AEYwB,AXPP,CIKM,AiB5BA,ArBuBrBA,C4BiBsB,AnBtBA,ALUA,AiB5BjB,EAAmB,EOwCE,CAAC,AjBVX,CAAc,APFT,CAAjB,CGJN,CqBgBwB,CACpB,AjBXc,CsCRlB,GROA,AbYQ,AjBXgC,CiBW/B,ErBjBT,CqBiBI,AjBXc,CiBWL,CqBnBb,CtCQ+C,CAAC,C8BDhD,CbYkB,CAAC,CAAC,AjBX2B,CAA/CA,EJNA,AqBiBuB,CrBjBV,AqBiBK,CAAL,GrBjBb,A0CFA,ArBmB4B,CqBnBb,C1CEI,A0CFnB,CROA,CAAe,AQPG,CAAlB,CrBmBI,CqBnBiB,ArBkBG,CAAN,GACqB,IaZvC,AbY2C,CAAC,CaZhB,CbWV,CqBlBlB,EAAmC,ArBmBc,EAD/C,IaXF,EAAwC,UQPxC,EAAuD;ADcxD,AzCXG,AkCKA,AQPA,AdGG,APgBJ,AnBvBC,AEYFA,APFK,AiB5BH,ArBuBA,AgCnBH,APaK,IJjBF,ArBuBA,EWOI,AU9BF,CrBuBC,CiDDC,AjDCA,CyCMC,AhCXAC,AYlBA,CAAC,CdwBC,CIMG,CFZD,AYlBA,CZkBC,ATKP,CWOU,AXPb,COCY,CENC,CgCWb,AhCXKA,ATKS,CyCMC,ApB7BA,CZkBC,AYlBA,CAAD,ArBuBE,CSLC,AYlBlB,ArBuBkB,CAAD,CWOK,AXPtB,CSLqB,AEYE,CJNhB,A0CFe,C1CEC,CENC,CgCWxB,AQPyB,AxCJA,EFMlB,AkCKoB,A9BC7BD,CJNE,GENA,EAAiC,CAAC,GAAG,CgCWrC,ChCXA,CgCWwC,CAAxC,AhCXyC,EAAE,CAA3C,EAA8C,iBwCII,KAAK,SAAL,EAAzB,EAA2C,CAA3C,EAA8C,CAA9C,CAAzB,EAA2E;AZW3E,ASHA,AGPE,AdGD,A1BPC,ALUD,AiB5BF,ArBuBC,AyBNC,GJnBI,CgBkCL,ArCTA,GAAG,C8CMC,A9CNA,CqBvBC,ArBuBF,CAAH,GiDDS,AjDCA,GAAT,CAnB0B,EqC4BX,GAAG,SYVhB,EHO2B,ArCXb,CqCYd,ErCZiB,CAAC,CAAD,CAAjB,U4BeA,ASJ2B,CTGX,CSFC,CTGd,CADa,EACV,ESJqB,EACF,IADE,EACI,KTGV,CAAC,ASJK,EACY,ITGlB,CADL,CSHW,CTII,ASJjC,EACkD,aTGF,CAAC,MAAM,GAAG,CAAV,CAD9B,CAAlB;ASDE,ALFF,AQNC,AtByBL,ACPE,AnBtBG,AEWH,APDC,AiB5BC,IAAA,EAAE,CV6BCC,C8BDC,CAAC,AbYA,APxCA,CM+CT,AN/CI,CM+CJ,AhBlBW,CAAC,CmCCC,CLFC,CbYZ,AjBXa,CAAb,CmCCI,CnCDY,CAAC,CgBkBnB,CAAE,ChBlBoB,MAApB,C8BDE,CdmBJ,AhBlB8B,C8BDC,A9BCA,EgBkB7B,AhBlBA,EAAiC,OgBkBjC,SAAA,GAAY;AUdV,ASFC,ALFC,AdmBJ,ACPD,AnBtBE,AEWC,APDH,AiB5BE,ArBwBC,AyBRA,GhBFF,CEeE,GAAG,C0BGC,A1BHA,CgBkBG,AlB7BF,ATMAA,AyBRA,EgBYE,A9BCA,CAAC,CXLC,C2BuBG,A3BvBF,GAAG,CWKV,AXLW,CWKd,EgBkBF,A3BvBmB,CWKC,AXLlB,CqCQmB,CrCRC,CAAC,CqCQC,AIJpB,EzCJsB,CyCIC,AzCJzB,EyCIE,A9BCyB,AXLA,AyBRT,CdaU,AXLA,CWKD,CAA3B,AXLA,EAAgC,QqCQhC,EAA0C,IZhB1C;AYiBE,AIJD,AQPD,AtB0BJ,AlB7BI,AEWD,AXLGD,AyBTqC,CE8B3C,OsBxBQ,EjDGI,CqCQD,CAAC,CYXC,CjDGG,CqCQD,CAAT,CrCRa,CqCQD,ArCRE,CqCQD,ErCRI,CqCQD,ArCRE,CAAD,CAAH,CAAO,CAAP,CAAD,CqCQb,EAAwB,AYXtB,AjDGwB,EqCQA,CAA1B,ArCR6B,CiDHD,AjDGE,CqCQD,ArCRA,CAAH,CAAO,CAAP,CiDHO,AjDGjCA,WiDH4B,EAA9B,EAAkD;AZY9C,ASHJ,AGRE,AtB2BN,AlB/BiB,AEYhB,AU9BC,AIgBIA,AQuBC,IaTH,EzB9BE,CAAC,CgBiCC,CJMQ,CaTN,AzB9BA,C4BsBC,CxBNC,CqBcC,EbSN,CZvCS,AYuCO,CaTN,AzB9BA,CyB8BC,AzB9BF,CAAd,CgBiCkB,AYXd,CZWe,AhBjCA,CgBiCD,ASHE,ArBdA,CYiBd,ASHe,AGRA,AvCWrB,EuBMK,CINmB,CYXC,AhBiBO,CgBjBN,CHQV,GAAc,AGRT,AhBiBhB,CaTU,AGRgB,CHQ7B,AbSqC,KvBNvC,E2BAuC,CAAC,MAAM,A3BA9C,G2BAiD,CAAV,CAAjC,Q3BAN,GAAgB,IuCVV,KAAK,eADoB,EACH,CADG,EACA,KAAK,KADL,EACY,KAAK,MADjB,EACyB,CADzB,CAAV,CAAjB;AZYC,ASHJ,ANMI,ACRH,AQLE,AvCUF,ADhB8D,AYjB9D,ArBwBE,AyBTgB,AQwBpBA,IxBtBgE,AYjB9D,EAAE,AYuCE,CxBtBJ,E+BmBY,ACRP,ApB5BA,AYuCE,EgBhBA,AvCUA,AVTAC,CiCeG,GZvCC,ArBwBA,CqBxBC,ArBwBA,AiCeE,CZvCH,AYuCI,CZvCV,CrBwBU,CAAb,AiCeQ,CZvCO,AYuCE,CZvCnB,ArBwBkB,CAAC,CyCInB,CAAqB,CzCJC,AiCeZ,CjCfa,AiCezBD,COHK,ASbD,AvCUY,C8BGkB,C9BHzB,AVTmB,CyCI1B,AQL2B,AjDCzB,CUSgB,CVTW,CyCIC,AzCJA,EiDDE,AjDC9B,CUSqB,CVTW,MwCY/B,A9BHI,CAAP,C8BGiD,CSbtB,EAAzB,GTaC,EACL,IADK,EACC,MADD,CCPD,CDQU,ICRL,YDOJ,EAC2B,CCTA,EACN,CADM,EACH,WADG,EACU,KAAK,CDO1C,EAEL,GCVgC,CAA9B,YDQG,EAEa,cAFb,EAE6B;AAClC,ACTE,AQNC,AxCNF,AYjBA,ArBwBK,AyBVgF,AQyBtFA,GZzCA,GYyCM,CODDC,CfxBiF,CgBe/E,ApB7BA,AYuCE,EODA,CAAC,AxCdA,AiCeE,CZvCD,ArBwBA,EwCcE,CAARA,ACTH,AhBfmF,AQyBrE,CjCfD,AyBViF,AQyB/E,CODD,AxCdV,CqBxBW,CmBsCC,AnBtCA,ArBwBA,AiCeN,CCVZ,Ab7BiB,AYuCI,CZvCV,CmBsCU,EnBtCE,CAAhB,AYuCK,CODa,APCzBD,COD0B,AnBtCA,EIc2D,EAAjFA,CSeJ,CMSA,EAAkC,CAAC,GAAG,EAAtC,ANTA,EMS0C,EAAE,CAA5C,EAA+C,ENT/C,CAAU,UAAV,EAAsB;AGIlB,ASHJ,ANSEA,ANTA,AOAD,AhCZF,AYjBG,ArBwBM,AiCeR,IZvCE,EgBgCE,AhBhCA,EmBsCI,ANTF,CYAC,AzB7BA,AYuCA,CZvCC,ArBwBA,CwCcG,ENTA,Ab7BA,ArBwBA,C8CKX,ANSc,AxCdF,CAAD,CAAH,CAAO,AiCeA,CIPC,AGME,AxCdV,AiCeQ,CIPC,AGME,AnBtCF,CmBsCC,AnBtCA,CmBsChBA,AnBtCe,CAAf,ArBwBkB,CAAZ,EqCQJ,EJOW,CIPW,AHHpB,CDUqB,GCVG,ADUA,CAAC,CIP3B,GHH+B,ADUL,EAAO,GAAP,EAAY,GAAZ,CCVA,CDUiB,CCV7C,ADU8C,ECVE,CDUpB,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,CAA/B,CAAf,CAAf;AINI,ASHL,ANSG,ANTE,AePF,AhCYG,AIlCJ,ArBwBM,AgCnBF,APQD,AQ0BL,GZzCQ,CmBwCL,KvBJY,AIlCP,ArBsBD,AgCjBQ,EEwBL,AePA,EZUE,AZnBF,CAAC,CzBWG,EyBXA,CSgBT,AThBK,ClBWT,CiCckB,AfzBF,CSgBG,CThBD,CeyBG,AvBJhB,CAAwB,CQrBR,CSgBG,AFxBnB,CAA2B,CK2B5B,IL3BC,CzBmBL,CyBnBuC,CPQR,CAAC,CeyBG,CAC/B,CNVe,CAAmB,E3BLtC,AUUK,AQrBD,ERqB6C,Ae7B5C,APQmC,CSgBG,AThBF,CORU,EPQP,CwBUxC,CxBVA,ESgBe,AThB6B,CeyBb,AjCdnC,A2BKI,C3BLQ,A0CDH,AxBVyC,Ce0B7B,Af1BjB,EAAiD,EORhD,EQiC8B,ARjC+B,CzBmBlE,CiCe6B,CjCfP,EiCca,EACD,CSjBzB,EACiB,CADjB,ETgB0B,ASfN,ETgBa,GShBR,KADzB,EACgC,KAAK,CTeX,EAE/B,GSlBK,EAEL,KAAK,SAFA,EAEW,ITce,AShB1B,ETkBsB,AShBL,CAFjB,EAEoB,CAFpB,EAEuB,UTcG,CAAjC,CShBO,EAEqC,kBAFrC,CAAP;AZWC,AGQD,AjChBA,A2BKE,AjBKJ,AIlCE,ArBwBM,AgCnBR,APQM,Ie2BJ,AnBxCA,CgB0BA,ChB1BE,AWKA,GXLG,CAAL,ArBwBM,AyBXF,CYmBG,A9BRA,A2BKA,ElCLE,CAAC,CSNC,ATMF,CAAH,AgCnBM,APQF,CzBWG,CwCgBC,AxChBR,CwCgBS,AjChBA,CkBXD,CORG,CzBoBf,CiCeF,AxChBmB,CwCgBC,ENXlB,CCJJ,AnCDyB,EkCKE,AThBF,ClBYb,APDgB,AgCnBxB,APQsB,GzBWK,COCf,A2BIgB,AlCLA,AgCnBA,ChCmBD,CAAH,CAAO,CAAP,COCP,APDb,AgCnB6B,CQmCnC,Af3BkC,CAAC,CAAD,CAAX,CORiB,CEwBf,AThBc,ESgBrC,E3BLa,GAEb,EyBrBJ,EAAsD,APQ7B,CAAnB,ClBaI,CAAC,A4BDX,I5BCI,CAAY,I4BDhB,C5BCqB,UAAjB,EAA6B,MAA7B,GAAsC,CAFxC,M4BCF,CAA8B,gBAA9B,EAAgD;AEQ5C,AGQF,ANXC,ACJD,AdzBD,ArBwBM,AgCnBL,APQG,CgB1GgC,CAAd,EDqIrB,KRnCKC,CQmCC,CLfC,EEOE,AGQA,ARnCA,CAAC,CGoBV,CKeA,CRnCa,CAARA,EAAW,EAAE,GSlGiB,ATkGd,CSlGzB,ITkG8B,CK2BxB,AL3ByB,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AK4B/C,AGQF,AbOH,A3BvBO,AgCnBD,MAAA,IL0CN,CAAA,KK1CgB,CAAC,CAAD,CAAV,CL0CN,CAAE,CK1CoB,KAAK,CAAC,CL0C5B,AK1C2B,CAArB,EL0CJ,SAAA,QAAA,GAAW;AUdV,AHJC,APmBF,ANhDA,ArByBG,AgCnBA,APOC,SEmCK,ANhDF,Ea6BE,Ab7BA,GMgDK,ANhDF,CoB6BC,CpB7BN,GAAU,CMgDjB,CNhDmB,GAAG,EAAtB,aa6BwB,KAAK,OAApB,EAA6B,UAA7B,CAAP;AMYF,AbQF,AhBjBO,AU/BN,ArByBE,AyBZE,CEiCL,E3BxDuC,MwCkD9B,A7BTO,MAAT,CAAgB,GAAhB,EAAqB,EDE1B,CCFK,C6BSL,C7BT+B,MDE/B,SAAA,MAAA,CAAO,GAAP,EAAY,QAAZ,EAAsB;A2BAtBD,AGQD,AbSD,AjBhBIC,ACFFD,AMIE,Ae9BA,IAAA,EK2BI,A1BDA,CAAC,CDED,CsB5BC,CrB0BG,EqB1BA,CrB0BG,C0BCC,A1BDA,AMIH,GoBHM,A3BCfC,ICFQ,CAAY,AqB1BpB,Ef8BA,CNJQ,CAAVD,AMIuB,GoBHM,GAAG,YAAH,GAAkB,CAAC,GAAD,EAAM,GAAN,CAA/CA;AACAC,A3BCE,ACFFD,AMII,Ae9BH,APOC,IfqBA,E2BDE,A1BDE,K0BCG,A1BDE,EDEA,AOEA,CoBHC,A1BDE,CAAC,CDED,ECFI,CAAC,C0BCD,AYRlB,AtCOAA,G0BCqB,ApBGA,CAAC,KoBHtBC,IYRA,CvCSgC,AOEX,CPFY,COEC,EPFF,CAA9B,GuCTF,UAAA,CAAW,CAAX,AhCWqB,CAAjB,CgCXU,CAAd,EAAiB;AACf,AvCSA,AOEC,AjBVHD,AyBdW,MzBcL,CAAC,EUQA,CVRG,CiDDD,GjDCK,KAAJ,CAAU,CAAV,CUQR,AVRFA,CUQqB,IAAI,WAAJ,CAAgB,SuCTN,AvCSV,EAA2B,GuCTZ,AvCSf,EAAgC,QAAhC,CAAnB,euCT6B,EAAtB,EAAyD,CAAzD,EAA4D,KAAK,KAAjE,EAAwE,KAAK,MAA7E,EAAqF,CAArF,EAAwF,CAAxF,CAAP;AZQF,A3BEE,ACHF,AMHA,AevBA,APOI,IfsBF,ECHE,G0BCG,AL3BA,ErB0BP,EDGW,ACHA,C0BCC,AL3BZ,APOU,EfsBI,C2BFC,CZpBD,ClBed,C8BKA,EAAoB,CZpBV,CAAU,GUcpB,YAAA,E5BCA,AGO8B,OyBR9B,E5BCA,KGOE,CetBkD,CUcpD,GAAY,AVdF,CAAN,QlBeJ,CAAoB,IAApB,EAA0B,QAA1B,EAAoC;A8BMlC,A9BLAA,A4BDA,AzBQA,ACHA,AMKH,AjBXC,AgCpBD,APOI,AQ6BE,IITH,A1BDA,GAAG,AXNAC,COEG,AIIF,CDGC,AuBOO,EEfL,AnCDA,CAAC,EWMR,AsBUG,CtBVQ,AXNA,AiCgBO,CEfN,AxBKZ,AXNY,CqCOC,A9BLE,C8BMb,A1BFY,CAAd,AXNe,COEG,APFpB,EmCCE,AzBQA,AVTkB,CUSC,AVTA,CiCgBhB,C1BdoB,C0BcM,CvBPN,AVTA,AiCgBpB,CjChBL,CiCgBkC,CjChBN,AiCgBvB,CjChBwB,CiCgBQ,CITtB,ArCPf,EqCQqB,A9BND,APFa,COEG,EGOf,CAAgB,C2BDX,A9BNN,CAAlBD,E8BM2B,K3BCR,C2BFN,C3BEiC,C2BDX,E3BChB,EAAgC,C2BFtC,EAC6B,K3BCvB,C2BFN,A3BEb,E2BDkD,CADrC,EACwC,CADxC,EAC2C,QAD3C,CAAb;AAEA,A1BFD,AXNC,AyBpDF,AQoEA,IIRE,ArCRA,CAAC,CAAC,CAAD,CAAD,CiCgBK,EjChBE,GAAG,CAAC,CAAD,CAAH,AiCgBM,CjChBC,AiCgBA,CIRC,ArCRR,GqCQW,CrCRC,GAAG,CAAC,AiCgBV,CjChBS,CAAH,AiCgBM,CjChBC,CAAP,CAAnB,AiCgB4B,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CIRhB,AJQA,CIRV,CJQ6B,CIRhB,AJQH,CIRV,CJQgC,CIRhB,AJQN,CAAf,CAAf,MIR4C,CAAC,CAAD,CAAxB,EAA6B,QAAQ,CAAC,CAAD,CAArC,CAAlB;A9BNA,AHKG,A6BUN,Q1BfO,CHKQ,MAAT,CAAgB,CGLnB,EAAe,GHKZ,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD,QAAlD,EAA4D;AiCE/D,A9BNEA,AIIJ,APCAA,AJPE,AyBbF,MrBoBM,EiCCA,C1BFC,AXNAC,AyBbA,ClBeG,GPFC,CWMX,AXNY,COEG,AkBff,ErBoBiB,AJPF,COEG,APFF,EIOI,CJPD,CAAjB,CqCQmB,CrCRC,CAAC,CqCQC,C9BNG,CAAC,CPFD,CAAzB,EAA4B,CAAC,CIOG,CGLhB,AHKiB,AJPjC,COEkC,CPFD,IIOD,EAAS,CiCCzC,A9BNgB,CAAdD,C8BMwC,CjCDV,CAAlCA;AiCEI,A1BFL,APCCC,AJPI,AyBbL,MYqBK,AjCDA,AJPA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CIOS,GAAG,CJPC,GAAG,CAAC,CqCQC,ArCRF,CAAH,CAAO,CqCQC,ArCRR,EIOU,CAAC,CJPC,CAAC,CAAC,CIOJ,AJPG,CIO9BA,AJPI,OqCQA;A9BNA,AoBuBN,A3BxBK,UOCK,AoBuBV,CAAA,GpBvBc,IAAI,EoBuBlB,CAAE,EpBvBqB,coBuBvB,EpBvBM,CoBuBJ,CpBvBuC,QoBuBvC,gBAAA,GAAmB;AUhBf,AViBJ,AvBlBA,AiB7BK,ArBuBJ,MIMG,CAAC,EuBkBI,AN/CK,EgB8BL,CAAC,EViBI,CUjBD,CAAT,AjCDJ,EiCCgB,AjCDA,CiCCC,EHFjB,CGEoB,KhB9Bf,CgB8BD,AViBK,AN/CwB,EgB8BL,AHF5B,EGE8B,AViBE,CUjB5B,ChB9BC,CgB8B4B,ChB9BQ,Ga4BzC,MAAA,CAAO,Ab5BF,EAAgD,Ga4BrD,EAAc,EPmBkC,IOnBhD,CPmBqD,COnB/B,KPmBU,CAAhC;AUhBM,A9BNA,A2BIJ,APmBJ,AvBlBI,AiB7BF,CM6CF,GvBhBI,IiCCI,A9BNA,CcxBC,IjB6BI,GAAG,CGLC,CAAC,CcxBC,CgB8BC,AYPlB,A5BvBkB,CgB8BC,CAAD,CAAZ,A9BNS,CAAT,E8BMkB,AhB9BP,CdwBQ,AHKA,CAAC,AiB7BA,E4BuB1B,E7CMyB,CAAX,CiCCkB,CAAC,CAAD,AjCDE,CiCC5B,CjCDJ,AiB7BkC,C4BuBpC,A5BvBqC,CAAD,CAAnB,CdwBX,CcxBmC,G4BuBzC,GAAU,I5BvByC,CAAC,CAAD,CAAlC,CAAjB;AgB+BK,A9BNC,A0CDJ,AtByBJ,AvBnBG,AiB7BF,ArBsBC,SAAO,COEC,APFR,CiDCS,I1CCI,Y4BAb,I5BAQ,CAAsB,E0CDL,E1CCjB,CAAF,E0CDwB,SdC9B,SAAA,QcDyB,EAAhB,EAAmD,CAAnD,EAAsD,GdC/D,CAAmB,CcDiD,KAA3D,AdCT,EcD2E,AdChD,KcDqD,MAAvE,CAAP,GdCF,EAA4C;A5BCvC,A4BAH,AnCFH,OOFK,E4BIG,I5BAI,E4BAT,GAAc,kBAAkB,CAAC,MAAD,CAAhC;AEME,A9BLE,A4BAJ,AlBWG,AbPLA,A4BxBK,MKyBD,AjCDA,EGJE,C4BAC,AlBWO,Ae/BA,MGoBZ,E5BAa,AHIA,CiCCC,A9BLA,A4BAA,CEKC,CjCDC,E4BxBb,CAAuB,CzBoBtB,A4BAJ,CEKE,A9BLmB,G8BKG,ApBMrB,CAA6B,CVX5B,EAAwB,AHIA,CGJxB,AHIyB,A4BxB1B,CKyBD,CLzBoC,Kf+BnC,EAA0C,AbPjB,EAAY,KaOrC,EAAmD,CbP1B,EAAsB,QAAtB,EAAgC,KaOzD,AbPyB,CAA9BA,CaO4E;AoBLxE,AGWC,ALhBH,AlBWFD,Ae/BA,EAAA,IKyBI,ApBME,GuBKQ,ALhBP,EEKE,ELzBE,CAAC,CKyBC,ELzBb,CAAgB,GKyBZ,E3BGJ,AOGuB,CkBXrB,ElBWwB,CkBXD,CHpBC,CtB4B1B,AsB5B2B,IQoCtB,CACL,ERrCgB,EtB4BhB,AsB5BA,EAAsC,CtB4BtC,CyBRE,AzBQE,EOG6B,CPHjC,EAAS,E8BQJ,CRpCL,CQqCiB,AvBNuB,CPHxC,EAAgB,AOG2B,GuBKtC,AvBLqB,EuBMD,AvBNuB,GAAtB,EuBKrB,A9BRL,E8BSgC,A9BTJ,AOG2B,GAAvDA,GuBKK,EACmC,gBADnC,EAEL,yBAFK,EAEsB,gBAFtB,EAEwC,eAFxC,EAEyD;AHZ3D,AGaH,AjCnBM,AGSJ,AOGFA,AbRA,A4BvBA,ACoCK,KIlBH,CpBaI,AbRF,CoCeCC,AvBPE,CPHD,CuBQQ,ChBLJ,CoBND,AGaA,CAAC,AjCnBA,EUYI,CuBOD,AvBPE,CuBOVA,CpCfL,CoCegB,A9BVd,AOGQ,AgBKL,ChBLc,AbRF,A6BaO,COEN,A9BVA,CHTC,CAAC,CiCmBC,ARtCJ,Gf+BS,EuBOA,AjCnBhB,A0BiBL,COEsB,CPFQ,EAA9B,C1BjB0B,AyBnB/B,CzBmBM,A0BiBiC,COEvC,ARtC6B,CzBmBK,A0BiB7B,COE8B,CAAC,APFO,GOEJ,EAAvC,AvBPU,CAAVD,CuBO2C,ARtC3C,EQsC6C,ARtCJ,CQsCzC,EAAgD,WRtChD;AQuCEA,AjCnBM,AGSJ,ACHC,AMMLA,AbRE,A4BvBH,ACoCC,MhBLM,EuBOE,ApCfF,COEQ,APFP,A6BaA,EvBRE,C8BUG,C7BbP,CAAc,C6BaJ,EjCnBA,AIMV,APFH,A6Baa,CvBRX,AOGc,AgBKF,CvBRC,ACHO,APFP,CoCeG,CAAC,AvBPA,CuBOD,AjCnBA,AGShB,C8BUFA,A7BbG,EAAyB,CDGN,CuBQT,EAAY,EvBRvB,CHTW,A0BiBe,C1BjBC,A0BiBA,I1BjBhB,A0BiBe,C1BjBtB,CUY+B,AgBKF,CAAP,EAAU,ChBLG,AgBKb,ChBL9BA,CgBK2C,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,CAAf,CAAf;AOGEA,AjCnBK,AGSJ,ACHHA,AMMAA,AgBKD,KvBVG,CCDI,AMMA,EuBOE,G9BVC,CCHG,GAAG,AMMA,GNNG,AMMA,CNNC,G6BaG,AvBPA,CAAC,EuBOE,A7BbV,CMMG,CuBOhBA,AvBPyB,EAAT,CNNY,CAA9BA,AMM+B,YAAb,CAAlBA;AuBQE,AjCnBG,AoBuBP,AjBdMA,ACHJC,AMOAA,AbTI,IoCeF,E7BbE,AMOA,AbTA,GaSG,CUUT,AjBdY,CiBcZ,AhBjBEA,CMOU,IAAI,CAAC,AbTA,CMKG,ANLF,EoCeE,AbIpB,CAAE,AjBdqB,COIX,CuBMW,AvBNA,CAAC,EPJI,ANLtB,CaSqB,EbTE,EaSjB,CAAVA,CPJqB,CAAa,ANL9B,CuBmBN,EjBduB,CiBcrB,AjBdID,I8BUoC,CACpC,IbGJ,WaJwC,EACnB,CbGrB,GAAiB,EaJuB,EACX,IADW,EACL,MADK,EACG,gBADH,EAEpC,yBAFoC,EAET,gBAFS,EAES,cAFT,CAAtC;AAGA,AjCrBC,AoBuBH,AjBdI,AOIJC,AbTG,IoCiBD,EvBRE,GUUK,AVVF,EPJE,COIC,EUUI,EVVA,CAAC,CPJX,C8BYa,A9BZA,C8BYC,E9BZd,AOIM,CAAW,CuBQnB,AvBRoB,CuBQC,AvBRA,CUUvB,AjBdwB,EOIE,GPJtB,AOIyB,GAAG,IAAX,CuBQnB,GvBRsC,EAA9B,CAAVA;AuBSE,AjCrBD,AoBuBH,AhBjBE,AMOAA,AbTC,CuBiBH,EvBtBE,CoCsBE,EvBRE,CNPCA,EMOE,AbTA,CoCiBC,C7BfC,CAAC,AMOA,CuBQC,AvBRA,ENPE,CAAb,AMOe,CuBQA,CAAC,A7BfA,CAAC,AMOC,GuBQE,A7BfA,AMOC,CuBQA,GvBRX,ENPV,C6BegB,AvBRc,CNPF,CAAC,C6BeC,AvBRG,CuBQlB,A7Bff,C6BeE,C7Bf+B,AMOG,EAApCA;AuBSC,AbGH,AjBhBM,ACFF,AMOF,AbTE,AJLG,EiBcL,ENPE,APFA,CaSC,GAAG,CNPC,AXPO,CUSN,ECFE,AMOA,CAAC,ENPE,APFA,COEC,CAAD,AMOP,CPLU,ACFd,AMOc,AjBdX,CAAmB,EiBcL,EPLE,COKC,IPLlB,EAAwB,GOKtB,AjBdD,EAAmC,EiBcL,SAAnC;APJM,ANLO,AJJb,AgClBK,ShCkBE,AgClBO,ItB2BH,MAAL,CAAY,GAAZ,AVTe,AgClBhB,CAAwB,CtB2BN,CVTC,GAAjB,GAAuB,CUSxB,EsB3BD,ChCkB6B,CAAC,AgClBO,EhCkB1C;AwCsBA,A9BZK,ACHH,AMQF,AbX0C,AJH3C,AgClBC,CzBnH6B,CAAV,AyBmHnB,IfgCI,ENRE,C6BeC,AvBPA,GNRG,CAAC,AMQA,AehCA,CAAC,CfgCZ,EAAe,CNRL,EAAQ,CJ3IW,AI2InB,AqBxBV,CzBnHF,AyBmHsB,CrBwBC,E6BerB,C7BfU,CwBLV,AxBKE,EAAyB,MqBxB3B,SGmBA,SAAA,cAAA,CAAe,WAAf,EAA4B,UAA5B,EAAwC;AKqBzC,ALpBG,AzBQC,ACHC,AMQF,AbXE,A4BrBL,APMD,IR0BI,EbXE,CaWC,EQ1BE,CR0BC,CAAN,CbXQ,COGC,CPHC,IOGR,IPJsC,EqBd5C,CAAyB,WAAzB,EAAsC,MAAtC,EAA8C;AyBmB9CD,AvCAK,AMQD,AbXE,AqBfJC,IyBkBI,AjCQF,EbXE,AqBfA,CR0BC,GQ1BG,CR0BC,CAAP,CQ1BS,CrBeC,AqBfZA,ClBYa,CHGC,CAAC,CAAC,E8CGI,ChBDpB,EgBCuB,CAAzBD,E9CL4C,G8BI1C,SAAA,KAAA,CAAM,EAAN,EAAU,MAAV,EAAkB,UAAlB,EAA8B;AGG1B,AHFF,AvBCD,AMQA,AbXG,AiBzBC,AIULA,MYmBI,AjCJA,AqBfE,GJVQ,AIUL,EYmBA,CZnBG,ErBeA,CiCIC,CjCJC,KiCIK,EhB7Bd,AIUkB,CYmBD,AjCPoB,AiBtBb,AIUL,IYmBE,CAAC,CZnB3BA,CJVK,CgB6BiB,CACf,AhB9B+B,CgB8B9B,IAAI,CAAC,ChB9BR,EAA0C,CgB8BvC,CAAU,eAAV,IACE,IAAI,CAAC,IAAL,CAAU,kBAAV,CADH,IACoC,QADrC,GACiD,CAFjC,EAEoC,CAFpC,CAAlB;AAGD,AjCNC,AiBzBJ,AIUAC,MrBeI,AqBfA,EAAE,CJVC,EIUE,CrBeC,EAAE,EiBzBE,CAAC,CAAD,CAAP,CjBqBmC,EqBXtB,CJVC,AIUA,GAAG,GAAG,CJVC,AIUR,CJVS,AIUpB,CJVmB,AIUE,CJVvB,AIUE,CAATA,GJVmC,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAAjD,IACH,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADlB,IACyB,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADrD;AgBgCC,A1BJD,AMSA,AbXI,AiBxBL,AISCA,MR0BI,AbXA,AqBfA,EAAE,CdiBC,AMSA,CbXC,CqBfC,CrBeC,COEV,AMSW,EAAX,EAAe,KQ1BK,CAAC,GAAG,GAAG,CAAP,CAAX,CAAqB,CAArB,CAATA;AdkBD,AMSG,AbjBwC,IaiBxC,CbjBA,EaiBG,GAAG,CAAN,SgCdF,iBAAA,SAAA,cAAA,CAAe,SAAf,EAA0B;AZS1B,AYREA,AhCcA,AQ3BF,IR2BE,EoBNE,CpBMC,AQ3BAA,CwBaC,GhCcG,AQ3BA,CYqBT,ApBME,AQ3BQ,EYqBE,CZrBC,CAAb,EAAgB,CAAC,GAAG,CwBalBA,ExBbF,EAAyB,CAAC,EAA1B,EAA8B;AR4B7B,AQ3BCD,QAAM,EAAE,GAAG,WAAW,CAAC,CAAD,CAAX,CAAe,CAAf,CAAXA;AYsBA,AYTA,A7CEqD,AJDlD,AyBbHA,IYqBA,AjCPqD,I6CFjD,AxBZE,CzBaM,CICwC,AqBd5C,CrBeN,EqBfS,IYqBE,AYTA,CZUX,ArCTC,CAAmB,GiDDJ,ExBZI,CAAC,CAAD,CrBc8B,AqBdzC,CrBeQ,AqBfO,CAAf,CAAXA,CwBYA,C7CEoD,CiCOvC,AYTgB,AjDC1B,CIEsB,CiCON,ArCTmB,GqCShB,GAAG,KjCPY,CiCMxB,AjCNyB,EiCOL,MADpB,EAC4B,CjCPJ,CADe,IiCOvC,EACoC,CADpC,EACuC,CADvC,EAC0C,QAD1C,CAAb;AAEA,AYVE,AhCeJ,AbZE,AJFF,AyBbE,AQ+BG,IITH,AjCPA,AqBfA,EwBYE,ExBZE,CR2BC,AjBdA,AiCkBO,GhBJJ,AQ3BA,CrBeC,CAAC,CaYC,CgBIR,CAAiB,C7BhBpB,CiCOe,AjCPA,E6CHE,CZUC,CrCTC,CiDDC,AhCef,EjBdiB,AiCkBnB,ChBJoB,CgBIQ,CgBnBN,C7CGzB,AJF0B,CAAC,AiCkBxB,EjClBE,AyBba,AQ+BkB,ER/BhB,CzBaY,AiCkB7B,ER/BoB,AQ+BkB,CjClB3C,CyBbU,AQ+BL,EAA0C,EAA1C,CR9BE,CQ8B4C,GITrB,AZrBnB,CYqBS,ApBKe,CgBI9B,CIT4B,CAAb,ApBKK,AQ1BV,AQ8B2C,CR9B1C,CYqBoB,AYVd,AhCekB,CAAf,AgBIpB,ChBJE,AQ1BI,CwBW6C,AxBXpC,AQ8B2C,EhBJlB,CgBIxC,EITuC,AYVtB,AhBmB8C,CITvB,CAAD,AYVxC,CZUgB,EAA6B,CpBK1C,GACL,IoBNuD,CAAC,CAAD,CAArC,AZrBU,CYqB5B,CZrBkB,CAAT,CAAJ,GACD,IAAI,CAAC,GAAL,CR0BM,AQ1BG,GR0Bb,EAAe,CAAf,EAAkB,YAAlB,CADK,AQzBkB,EAAV,CR0BqB,AQ1B9B,CAFI,CAAR,MR2BK,IAEJ,iBAAiB,IAAI,CAArB,GAAyB,EAAzB,GAA8B,MAAM,WAAW,CAAC,MAAZ,CAAmB,iBAAiB,GAAG,CAApB,GAAwB,CAAxB,GAA4B,CAA/C,CAFhC,CAAP;AgCdI,AtBwBN,AVPC,AbdE,AJFF,AyBXG,AQ6BFA,IR7BE,EAAE,AQ6BE,GR7BC,AQ6BE,CNKX,CAAA,AFlCI,CQ6BU,IAAI,CAAC,GNKnB,AMLc,CNKZ,AMLqB,KAAT,CElBZ,AFkBAA,UgBlBM,EdAN,ARuBF,GAAE,MQvBA,GRuBA,CsBxBI,EACmB,CADnB,EACsB,AdA1B,CAAU,IcAqB,EdA/B,EAAkB,CcDd,EACkC,AtBuBtC,GAAqB,EsBvBsB,GdA3C,EAA+B,CcD3B,EAC+C,IdAnD,EAAwC,GcDpC;AZUF,AYRC,AtBuBH,AFlCE,AQ6BFA,IR7BE,CwBOA,CxBPE,AQ6BE,EIVA,CVeG,AFlCF,AQ6BE,EgBlBA,AxBXP,CQ6BU,ENKE,EMLE,CAAC,GAAL,CAAS,EIVA,A3BArB,G2BAwB,AJUZ,CAAZA,GNKA,SjBfA,K2BAE,EAA0C,E3BA5C,aAAA,CAAc,MAAd,EAAsB,UAAtB,EAAkC;A2BC9B,AYRA,AdAFC,ARuBJ,AjBfI,ANNF,A4BpBK,APOJ,AQ6BD,CNGF,CMHE,IIVI,AYRA,EdAE,CzBQCD,ANNA,A4BpBO,ECoCL,CDpCJ,ACoCK,CvBVG,AsB1BK,ACoCT,CElBPC,AFkBF,EvBVE,CuBUa,EAAE,CvBVG,ANNpB,C6CFmB,ChBkBC,EIVE,AYRA,ChBkBtB,CvBVE,C2BAuB,AL1BpB,CtB0BuB,CuCRD,AjBlBO,aK0B9B,EYRA;AACD,AtBwBL,AjBhBM,ACHC,APHN,A4BpBC,ACoCA,EAAA,OtBbc,AqBvBP,EtB0BE,AuBUA,CAAC,CAAD,CvBVL,AuBUJ,CvBVa,ACHR,CAAgB,AqBvBP,CCoCC,CvBVX,CuBUa,CvBVC,ACHb,EAAsB,AsBaP,GAApB,CvBVwB,ACHnB,CDGoB,CCHQ,EDGT,AsB1BjB,CtB0BH,EAA2B,EsB1BE,QtB0B7B,AsB1BG,GACL,WAAW,CAAC,GAAZ;AKyBE,AGcC,ALtBH,AzBSC,ACHHD,AqBvBiB,APMjB,AQ8BA,EAAA,ItBbM,EwBNA,CKsBQ,AfjCP,CdiBG,C0BED,AJWA,CIXC,AJWA,CtBbG,AcjBF,AQ8BF,CEnBP,AFmBF,CIXa,CAAT,AFRU,AVXA,CdiBG,AsBaF,CIXC,A1BFE,AsBaF,CIXC,CJWF,EIXK,AZnBb,CeiCF,APHgB,COGQ,A7BhB7BA,CcjBuB,CQ8BvB,EIXI,EAAwB,CZnBrB,CYmBuB,CAA1B,CZnB4B,CYmBC,EZnBjC,EeiCK,EAAyC,MAAzC,EAAiD,GAAjD,EACL,MADK,EACG,gBADH,EACqB,yBADrB,EACgD,gBADhD,EACkE;AHdjE,AGeN,AStBE,AdDE,AHlBqC,APO1C,AQ8BC,EDrCyC,ACqCzC,IOII,ALvBA,EEQE,CGeC,EStBE,AhBkBA,CEnBC,AFmBA,COIC,APJF,CAAT,CEnBa,CHlBX,CADK,ACsCQ,EOIE,APJA,CIXC,CAAC,CAAD,AGeE,APJA,CIXd,EJWN,CIXwB,EGexB,EAA4B,GLvBG,CEQC,AFRA,CEQC,CAAD,CAA1B,GFRyB,CAA3B,QcEA,eADK,EACY,CADZ,EACe,KAAK,KADpB,EAC2B,KAAK,MADhC,CAAP;AZQG,AFRF,AxBKH,AUzBK,AWEH,ACqCF,EAAA,GErBE,CxBOE,GUzBU,CVyBN,CwBLC,AFmBA,CAAC,CAAD,CAAT,CtBda,EsBcE,EtBdE,AUzBZ,CVyBa,AUzBO,AYuCP,CCdlB,EDcqB,EAAN,CtBdf,AUzBK,EVyBqB,AUzBO,AYuCP,CZvCrB,EAA+B,AYuCrB,CCdf,AbzBK,EAAkC,AYuCP,GAAG,GAAG,CCdtC,CDcgC,GAAW,GAA5B,CCdf,CAAS,CDcwC,GAAjD,KCdA,EAAoB;AMmBlB,ANlBA,ACLE,AxBKF,AUzBF,AWC8B,ACsC9B,EDtC8B,ACsC9B,OZvCO,EmB2CE,ANlBA,ACLAC,AxBKA,AsBcA,CAAC,CAAD,CAAT,CEnBa,AdpBA,CayBC,ACLA,AxBKZ,AUzBY,AWCe,CQ0Cd,AnB3CF,AYuCE,CZvCR,CcoBU,CKuBC,ALvBd,AHnB6C,ACsC/B,EEnBE,AdpBA,CmB2ClB,ALvBmB,AdpBd,AYuCc,CDxCrB,CQ4CuB,APJR,CEnBS,CdpBC,CAAC,AYuCA,GOIG,APJd,CZvCe,CcoB1B,CFmB4B,COIC,ALvBA,EDKxB,ACL0B,AFmBA,CCdC,ACLhC,AdpBgC,CAAC,CcoBC,AdpBF,AYuCE,COIpC,AnB3CK,CYuCyB,COIS,EnB3CE,AYuCA,ECdE,CDc9B,ECdiC,CbzBC,AYuCA,CZvCC,CAAD,CAAN,AYuC3C,IZvCwD,CayB/C,AbzBF,CayBL,GbzB2D,CAAC,IAAI,MAAM,CAAC,CAAD,CAAxE;AgB4BI,AGgBA,ALvBE,AxBKL,AUzBF,AWCA,ACsCC,MIZI,AGgBA,GPJG,GEnBG,MEOM,AJYhB,CIZiB,IFPI,CAAC,CEOlB,GAAsB,EFPhB,CKuBmB,CAAC,EHhB1B,CFP6B,CAA3B,EAA8B,UKuBU,EAAjB,CAAzB,GAAgD,eAAe,CAAC,MAAD,CAA/D;AHfD,AGgBC,ALvBI,AFmBT,MOIK,SLvBS,MAAL,GAAc,OKuBO,CAAC,gBAAgB,ALvBT,EKuBR,ALvBrB,CKuBJ,GACI,eAAe,CAAC,MAAM,GAAG,CAAV,CADnB;AHfH,AGiBE,ALxBK,ARuBV,AhBnBE,AXJK,OWIAA,EXJS,C2BuBhB,CAAA,AhBnBW,CAAC,GwBJG,AxBIA,AXJR,CWIL,AXJqB,CAAhB,CWIW,CAAC,AXJO,C2BuB1B,A3BvBO,CmCAG,ARuBR,ChBnBoB,AXJO,EmCAL,CAAd,CxBIR,EAA0B,CgBmB5B,AhBnB6B,EAA3B,CgBmBA,ChBnB+B,QgBmB/B,QAAA,GAAW;AQtBH,ARuBR,AhBnBE,AXJFD,MAAM,CAAC,CWID,CgBmBG,C3BvBC,CAAC,CWID,CAAC,CgBmBG,AhBnBJ,AXJI,CWIR,AXJNA,KWIkB,CgBmBlB,GhBnBsB,CAAC,CAAD,CAApB,EAAyB;A0BG3B,AGiBE,ALvBK,ARuBT,AhBnBM,AXJJ,C2BqBF,QUfS,AFVD,AnCIC,CAAC,CwCuBC,E7BnBE,AXJA,CAAJ,CmCAM,EnCAE,CWIX,AXJG,EiDCP,CjDDmB,CAAC,GAAG,CAAhB,CqCMP,AGiBE,ExCvByB,CiDC3B,AjDDA,SiDCA,OAAA,GAAU;AZMX,AGiBE,AStBC,AdDM,ARwBV,AhBpBK,AXJJ,UmCAS,CcCC,KAAK,KAAZ,AdDiB;AAAA,AxBKlB,uBDID,QAAA,SAAA,KAAA,CAAM,GAAN,EAAW,UAAX,EAAuB;A8BevBC,ALxB4C,AzBU1C,M8BcE,EAAE,A9BdA,EyBVsC,CKwBnC,A9BdA,IAAI,KAAK,CyBVqC,CAAC,CAAD,CAA/C,EKwBgB,CAAC,A9BdvB,EAAyB,I8BcH,CAAxBA;AACAA,ALxBO,AzBUHD,ACLJ,M6BmBI,EAAE,C7BnBC,CDKG,C8BcD,E7BnBT,KDKkB,GAAG,K8BcG,A9BdE,C8BcD,MAAM,A9BdV,CAAa,E8BcA,CAAV,A9BdH,C8BcrBC,A9BdID,C8BGmE;ALZlE,AzBUD,ACLL,AsBgBM,SAAS,IvBXH,EuBWN,CAAgB,EvBXL,OAAL,AuBWN,CvBXmB,CuBWQ,EvBXrB,CAAP;A8BeJ,AnB1CK,AISA,AQ8BLA,EOGA,IPHM,GZvCQ,AISA,AQ8BL,GAAG,IR9BP,CAAiB,MQ8BC,CAAC,CR9BnB,EeiCoB,AfjCO,CeiCN,GnB1CrB,CAAgC,CYuCd,CAAvBA,IZvCK,AISA,EJTwC,AISA,IeiCH,EAAjB,CAAzB,GAAgD,AnB1C3C,EmB0CL,AnB1CyD;AmB2CzD,ALzBI,AzBUA,AW3BJA,AISAA,AQ8BA,EOGA,ILzBI,AdjBE,AISA,IfkBE,AW3BE,CX2BD,CyBVC,CdjBG,AISA,EUQA,CVRG,GJTG,CAAC,CawBpB,AxBGI,AW3Be,CAAnBA,CX2BqB,AuBYd,GEtBiB,AFsBd,COGe,ALzBA,AVRE,CeiCD,GfjCK,AQ8BhB,CAAf,CEtBI,AVRJA,CQ8BkB,EAAlB,EAFgC,CAEV,KOGoB,CNlB1C,CMkByB,CAAzB,GAAgD,EAAhD,ENlBA,qBAAA,CAAsB,gBAAtB,EAAwC;AMmBxCC,ANlBE,ACPE,ARyBN,AjBfQ,AW3BND,AISAA,MeiCI,ALzBA,AdjBE,AISA,EeiCA,EbAR,AN1CY,CmB0CD,ANlBA,APkBX,CQzBY,AVRE,CeiCZC,A9BfW,AW3BE,EciBA,AVRE,IfkBT,AW3Ba,C4BoBnB,AtBsBF,AjBfoB,AW3BE,CM0CpB,AN1CmB,CAAnBD,AISsB,CfkBhB,AelBiB,EfkBA,IelBR,CEiCjB,EOlBI,CCP6B,ARyB/B,AjBfM,AelB2B,CUQD,MAAD,CAA3B,CRyBJ,CsBtBA,IxBXAA,IEiCA,CsBtBA,AtBsBU,MAAV,EAAkB,YsBtBlB,GAAuB;ATuBvBC,AStBE,AdHC,ARyBH,AjBfK,AW3BLD,AISAA,AQ8BAA,MOGI,AnB1CE,AISA,AQ8BA,CNGC,AMHA,COGD,AStBA,E5BpBI,AYuCA,COGD,EAATC,AStBW,A5BpBE,CM0Cb,EFjCgB,CEiCC,EN1CE,AISA,AQ8BA,CZvCC,AYuCA,CZvCD,AYuCA,CZvCnBD,AYuCAA,CNGA,GFjC0B,CAAC,UAAR,EwBWb,ExBXmC,EwBWA,KAAK,IxBX9CA,OwBWyC,EAAvC,EAA2D;AACzDA,AtBsBJ,AjBfG,AW3BHA,AISAA,AQ8BAA,MZvCM,AISA,AQ8BA,CNGC,AMHA,GgBnBG,A5BpBA,AISA,AQ8BA,GZvCG,AISA,GEiCb,GAAmB,AN1CA,AYuCA,CgBnBC,AtBsBA,AN1CA,AYuCA,CZvCD,AISE,AQ8BF,CNGG,AN1CtBA,AISsB,AQ8BtBA,CgBnBuB,KtBsBK,CFjCf,EAAbA,CEiCgC,KAAK,OAAjB,CAApB,CsBtBiC,KAAK,SAAL,EAAV,CAAnBA;ATsBJ,ASrBI,AdJF,AR0BJ,AjBfG,AW3BDA,AYuCAA,CNAF,KNvCQ,AYuCA,COED,AnBzCE,AYuCA,EEvBA,CdhBG,AYuCA,CgBnBD,ETqBE,ELzBT,EKyBa,CLzBC,CFuBG,CZvCC,AYuCA,CZvCC,AYuCF,CZvCC,AYuCpBA,COEA,AnBzCAA,CcgBE,CKyBqB,ISrBnB,ETqByB,CSrBC,ETqBE,GAAhC,EAAqC,MAAM,IAAI,MAA/C,EAAuD,mBSpBjD,KAAK,0BAAL,EADwB,EACW,CADX,EACc,KAAK,KADnB,EAC0B,KAAK,MAD/B,EAExB,UAFwB,EAEZ,CAFY,CAA1B;ATsBF,ASnBE,AdNF,AR2BJ,AN3CEA,ArBmBK,AyBXL,AQ+BAA,IOEE,EAAE,AnBzCE,AIQF,AQ+BE,CZvCC,AYuCA,EOEA,ALzBA,AnCGO,CqBnBJ,AIQF,AQ+BE,CgBjBD,EjDHJ,CAAc,CmCHjB,AnCGG,AyBXQ,EzBWS,CmCHN,AnCGX,CiCoBc,CZvCC,ArBmBK,AiCoBL,CZvCC,ArBmBhB,AiCoBc,CZvCC,AYuCpBA,CZvCAA,ArBmB4B,CwCsBN,ALzBpB,CKyBqB,MAAD,CAApB,KSnBE,AxBdsB,GwBcY,KAAK,WAAL,AxBdtC,EwBcI,AxBd2C;AekC7C,ASnBC,A5BtBHC,ArBmBA,AyBXE,AQ+BFD,IOEE,AfjCA,EeiCE,AnBzCA,AYuCE,CAAC,EOEA,AxCtBA,CAAC,AiCoBE,ER/BA,CzBWC,CAAC,CyBXC,GJRG,ArBmBA,CAAC,AiCoBE,CAAC,CZvCD,AYuCA,CjCpBC,AiCoBpBA,CjCpBY,AyBXS,CeiCC,AxCtBtB,AyBXsB,CeiCC,IfjCV,EeiCgB,CfjCC,EeiCE,CAAV,CAApB,KfjCW,CAA2B,CJRR,OAAhCC,EIQa,EAAuC,WAAvC,CAAX;ArBgBG,AJJN,AyBXE,AQ+BDD,CvBlIiC,CAAV,IuBkIjB,CAAC,E7BhBO,C6BgBJ,S7BhBL,A6BgBc,C7BhBM,A6BgBL,CvBlIa,AuBkId,CvBlIrB,AuBkIEA,I7BhBK,EAA4B,IAA5B,EAAkC,QAAlC,EAA4C,QAA5C,EAAsD;AoCkBzD,ASnBA,AtCEG,APAL,AiBxBA,AYyCA,EAAA,IZzCI,CAAC,CmByCC,C7BjBQ,APAP,CiBxBC,C4BsBC,AhBmBA,CAAC,CAAD,CZzCT,AYyCA,C7BjBa,C6CFC,A7CEA,AiBxBA,CYyCC,CAAC,CtBjBX,CAAoB,CsBiBN,C7BjBN,COAR,CPAiB,A6BiBtB,CtBjB8B,GPAjB,EAAe,I6CF1B,CTmBoB,A7BjBjB,E6BiBC,A7BjBoC,CPA7B,CoCiBa,CpCjBY,CoCiBhC,EAAwB,EAAxB,EAA4B,CpCjBrB,CoCiBP,CpCjB0C,GoCiBR,CpCjB3B,CAAb,coCiBE,EAAwD;A7BhB1DA,APAD,AiBxBG,AIQFC,AQiCA,EAAA,EZzCE,EVwBI,AchBF,IAAI,CQiCC,CtBjBG,AsBiBF,CRjCC,AQiCF,CRjCTA,AQiCA,CtBjBe,CUxBD,CYyCC,CtBjBG,AsBiBF,CtBjBG,AUxBF,AYyCF,GAAK,GtBjBpBD,AsBiBA,MZzC6B,GAAG,sBAAa,IAA3C;AmB0CE,AbCN,AhBlBEA,AUxBC,AIQDC,AQiCA,EAAA,CZ3CA,GmB2CI,A7BjBE,AchBF,GdgBK,AUxBF,CM0CT,CAAA,AMDW,CtBjBG,AsBiBF,CZzCC,AYyCF,CZzCG,AYyCZ,GtBjBiB,AUxBF,AIQfA,AQiCe,CtBjBG,AsBiBF,CRjCC,AQiCF,CNCjB,COlBE,APkBA,AhBlBqB,AUxBd,CVwBe,AsBiBF,CZzCC,EIQrBA,AQiCA,ERjCyB,CdgBR,AchBjBA,CdgBAD,CchB4B,CeiCC,ANjB7B,CMiB8B,AfjC9BC,EAAgC,CAAhCA,EAAmC,EEkCrC,AFlCEA,CSgBA,EPkBA,KOlBA,CMiB8C,EAAjB,ANjBnB,CMiBN,AbCJ,GaDoD,EAAhD,abCJ,GAAqB;AUdhB,AGcD,ANjBF,APkBF,AhBlBAA,AUxBE,AYyCF,EAAA,EZzCE,EmByCE,A7BjBA,CAAJA,E0BGc,AVeL,EOlBA,ADiBA,CAAC,CAAD,CNCK,AMDd,EZzCc,CYyCC,CAAC,CZzCC,EYyCE,GAAnB,MNCA,CaD6B,AnBzCA,CgB2BxB,AGcyB,ANjB5B,CGGoC,ChB3BN,cgB2B3B,AGcyC,EHdS,AGc1B,CAAzB,GAAgD,EHd/C,AGcD,AnBzCyC,EgB2BkB,GhB3B7D,CgB2BG,EACL,MADK,EACG,QADH,EACa,MADb,EACqB,CADrB,EACwB,CADxB,EAC2B,YAD3B,EACyC,kBADzC,EAEL,YAFK,EAES;AACdD,AGYI,AbCN,AN1CG,AWEI,APKL,AQkCA,CNDF,CMCE,IIZM,AGYF,EAAE,CRvCQ,CPKN,CekCC,APAA,CAAC,COAN,APAK,CIZK,AZtBd,AQkCA,GIZiB,AJYF,CAAC,CAAC,GAAG,CAAJ,GAAQ,CDvCnB,ACuCoB,CDvCQ,CK2BJ,CJYD,CAAb,CIZiB,GJYC,GDvC5B,ACuCL,EDvC6C,IK2BhB,GAAkB,CAAC,EL3B3C,CK2B0C,CL3BU,CK2BJ,GAAN,CAA/CA,AL3BK,EAA2D,SAA3D,EAAsE;AQwCvE,AbEN,AjBjBAA,ACHE,AqBrBA,APKE,AQkCF,EDvCA,ACuCA,EvBfI,E8BeA,C7BlBC,C6BkBC,A7BlBA,CchBC,EekCE,A7BlBA,AsBkBA,CtBlBT,AqBrBU,ACuCA,COAN,APAK,CtBlBG,AsBkBZ,CtBlBa,AqBrBA,ECuCE,CtBlBC,AqBrBA,CAAC,ACuCA,CAAC,GAAG,CvBfG,ACHxB,AsBkBiB,EtBlBO,CwBPxB,AzBU2B,ACHF,AsBkBA,CAAC,CvBf5BA,ACHE,AqBrBgB,CAAhB,CrBqB6B,AchBT,AQkCS,CAAd,IRlCb,AQkCgC,GAAlC,KEzBA,SAAA,cAAA,CAAe,WAAf,EAA4B;AEa5B,AGaG,ALzBD,AxBOA,AUxBF,AWGAC,APKE,AQmCF,ItBnBE,EUxBE,AWGA,CK0BCA,A1BLA,AUxBA,CciBC,AxBOA,CAAD,AchBE,AQmCA,CtBnBL,AUxBM,CgB6BC,CAAC,CFZC,AxBOA,CUxBX,CgB6Ba,CAARA,AhB7BS,EgB6BE,AJchB,EIdkB,CL1BlBA,EK0BqB,IAAI,CAAC,AFZxB,EAA0B,CVTR,GYqBpB,EAAkC,CAAC,GAAG,EAAtC,AZrBE,EYqBwC,EAAE,CAA5C,EAA+C;AAC7CD,AGaD,ALzBG,AxBMQ,AMgBP,AIvCH,AWGFA,APKE,AQmCH,IZ3CG,EciBE,AxBMQ,AqBpBN,EK0BE,CpBUM,AQ/BP,EYqBI,A1BNM,CqBpBL,CrBoBO,C0BML,A1BNH,CMgBN,AepCU,CfoCM,AIvCP,CciBC,CEYG,AFZF,CEYG,AhB7BF,CgB6BC,CAAhBA,EFZmB,EHdI,CfoCpB,AepCqB,EfoCO,GIvCJ,AIQT,GJRY,EJuC3B,EkBtBU,AlBsB4B,EkBtBL,EVTpC,GUSyC,GHd5B,EAAfA,MfoCK,AIvCwC,EJuCkB,EkBtBhD,CdjBb,CciB0D,KAAK,MAAlD,CAAX;AEaF,AFZE,AxBKkB,AMiBtB,AIvCC,AIQC,GJVF,CgB+BE,E1BPoB,AMiBlB,GIvCG,AIQA,EUSE,AxBKkB,EAAE,AUtBlB,CAAC,EVsBoB,AMiBhC,CNjBiC,AUtBlB,CciBX,AxBK4B,AMiBhB,GIvCT,CgB6Ba,ChB7BC,EgB6BE,MZrBH,YYqBqB,CACrC,IZtBF,WYqBuC,EACpB,MADoB,EACZ,GADY,EACP,MADO,EAErC,QAFqC,EAE3B,MAF2B,EAEnB,CAFmB,EAEhB,CAFgB,EAEb,YAFa,EAEC,kBAFD,EAEqB,QAFrB,CAAvC;AAGA,AGUF,ALxBG,AxBIQ,AMkBT,AIvCA,AWEF,APME,IYuBA,AhB/BA,CVqBA,C6BoBE,ARvCA,EQuCE,CfjCC,CYuBC,CpBQC,CuBEC,ARvCV,CK6BW,CGUP,ARvCQ,EK6BV,AhB/BY,EmByCE,CvBFC,AIvCA,CmByCC,AvBDb,IuBCiB,EAAtB,CvBFS,CuBEiB,AvBDb,GIxCgB,AIQT,ER+BX,CIvCuB,CJwCZ,OQhClB,GRgC4B,CAAC,CAAD,CAAV,CAAc,OAAd,AIxCyB,CJwCH,IIxCxC,cJwCkB,CADX,EAEJ,OAFI,CAEI,KAFJ,EAEW,UAAU,CAAC,CAAD,CAAV,CAAc,OAAd,CAAsB,kBAAtB,CAFX,CAAP;AoBPD,AVWH,AhBrBG,AMoBA,AIzCA,AWEC,APK+B,GR8BjC,CenCE,KfuCK,CUCT,CAAA,QKxCmB,CiBoBjB,AtBoBF,CAAE,CKxCoB,MAAM,CAAC,UiBoB3B,AtBoBF,AKxC4B,EAAa,CLwCvC,IKxC0B,CAAxB,CiBoBF,GtBoBA,asBpBA,GAAmB,EtBoBnB,CAAmB,QAAnB,EAA6B;AaA3B,ASnBA,AtBoBF,AjBdK,AOaH,AevCD,APKG,GOPJ,CQyCE,GbCK,EjBdO,AsB1BP,EiBoBE,AhCmBA,EAAP,EgCnBW,QtBoBb,GAA0B,CjBdrB,CAA4B,C8BaN,ASnBlB,CTmBmB,ASnBT,CvCMd,EAAiC,CiBctC,CsBpBwB,WTmBoB,EAAjB,CAAzB,GAAgD,EAAhD,CSnBiB,EAAV,EAAuC,wBAAe,GAAtD,CAAP;AZSF,AGWE,AbCJ,AjBdE,ACRA,AMqBC,AI1CD,AWGEA,APKC,CEiCL,ChBpBE,E6BqBE,C7BrBC,CAAC,AUrBA,EWGI,CK4BD,A3BFA,CCRP,CAAS,EqBlBI,GAAG,EXHA,GVqBE,CAAT,CUrBY,CVqBA,CAAZ,CqBlBiB,CK4B1B,A1BVwB,AqBlBG,EQuCA,A9BbA,C8BaC,A9BbA,KsB1BZ,EAAdA,OtB0BK,CAAoC,AW7BT,CmB0CU,EAAjB,A9BbpB,C8BaL,GAAgD,A9BZhD,AW9BF,EmB0CE,AnB1CyC,kBX8BrB,CAAC,GAAD,CADf,GAEJ,oBAAoB,CAAC,GAAD,CAApB,GAA4B,YAAY,GAF3C;A2BGD,AGWE,AbEH,AjBbC,ACVG,AMqBH,AI1CG,IAAA,OVqBO,KUrBK,GAAG,EVqBE,CAAC,CAAC,CAAC,KAAH,EAAU,CAAC,CAAC,KAAZ,CAAV,EUrBqB,EVqBW,CAAC,CAAC,KAAF,GAAU,AUrBjD,CVqBkD,CAAC,KAAnD;AACD,AUrBA,AWEC,APKA,GdYF,KqBjBM,CPKC,IOLI,IAAI,cPKK,COLC,MPKnB,COLI,IAA0B,CAAC,SAA3B,IAAwC,SAAS,IAAI,eAAM,OAA/D,EAAwE;AQwC1E,ARvCI,APIyB,AQsCxB,MD1CD,GQuCG,APGO,MvBZD,KuBYR,CCnBL,AFvBmB,AC0CO,GD1CJ,AC0CjB,COHL,CPG+B,QD1C3B,IEuBJ,SAAA,cAAA,CAAe,WAAf,EAA4B;AMiB7B,ANhBG,AvBLF,AUrBA,AWGG,APIC,AQsCJ,KD5CE,ErBoBG,CAAC,AcdF,CJPG,AY6CA,EtBxBE,AqBlBA,CrBkBT,AsBwBU,CAAC,CtBxBC,AsBwBF,CtBxBG,AsBwBN,GtBxBS,AsBwBA,CRtCD,EdcI,AUrBnB,AY6CmB,CtBxBC,AsBwBA,CAAD,CAAZ,GAAkB,CtBxBzB,EAA4B,AsBwBA,CtBxBC,AsBwBA,CAAD,CtBxB5B,AsBwByB,EtBxBQ,CsBwBC,GAAG,CAAC,CAAD,CAArC;AtBvBE,APMG,AiB3BN,AIMgB,AQuChB,ItBxBG,GAAG,CAAC,CAAD,APMS,CONZ,GAAS,GAAG,CAAC,APMV,CONS,APMS,CONZ,CAAO,IPMb,CONH,CPM6B,C+BT/B,G/BSK,EAAgC,I+BTrC,I/BSK,EAA0C,G+BT/C,K/BSK,EAAoD,C+BTzD,CAAO,KAAP,EAAc,MAAd,EAAsB;AACpBA,AxBGD,APMDA,AqBtBsE,MrBsBhE,E+BTE,AVb8D,OrBsBvD,CqBtBsD,CAAW,CrBsB9D,K+BTK,GAAG,I/BSI,C+BTC,A/BSA,AqBtBsC,EAAjE,IrBsB0B,EAAS,IAAT,CAA9BA,K+BT0B,EAAxBA;AxBIH,AchBK,QAAA,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,eAAe,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,MAAjB,CAAxB,CAAP;AUaF,AR0BJ,AuBXA,A9CNE,A4BvBIA,IkB6BA,E9CNA,E+BTE,AeeE,EvBWV,AKxCY,CLwCZ,IvBjBE,EAAe,GuBiBjB,AKxCsB,CLwCpB,EQ1BE,AHdqB,EGcA,KR0BzB,GAAE,SAAA,QKxCkD,CLwClD,AKxCmD,CLwCzC,MAAV,EAAkB,CKxCgC,EAAa,GAAG,CAAC,WAAD,CAAhB,CAA9CA;AGeAA,AR0BJ,AuBZ2B,AjCYtB,AbjBHA,A4BvBEC,APCA,OEuCG,CvBjBC,CaiBM,CkB1BJ,AHdF,GPCC,CEuCT,AFvCU,CRuCL,CkB1BW,AlB0BK,CUAJ,AFvCJ,CODG,APCP,CUaU,A/BSA,CqBtBH,CODG,C5BuBG,A4BtBhB,APAY,CEuClB,CQ1BwB,CVbH,ERuChB,AevCM,CAAC,CfuCsB,AevCvB,CAAL,GGaa,AHbF,C5BsBiB,C+BT9BD,A/BS+B,CqBtBH,CAAC,GRuC5B,EAA0C,CevCpB,APAvB,CrBsB8B,CqBtBO,CrBsBK,A4BtBhB,APAY,CODvB,EACc,APAY,EAAzC,EAA6C,CrBsBf,A4BtBI,CAAC,APAY,CrBsBK,A4BtBlB,APAlC,CODe,CPCmC,COChD,K5BqB4B,A4BrBvB,CAAC,C5BqBsD,A4BrBvD,CAAL,G5BqB4B,A4BrBjB,C5BqBfA,S4BrByB,GAAG,CAFX,EAEc,KAAK,CAAC,CAAD,CAFnB,EAGb,KAAK,CAAC,CAAD,CAHQ,EAGH,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CAHrB,EAIb,KAAK,CAAC,CAAD,CAJQ,EAIH,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CAJrB,CAAfC;AGeA,AR0BJ,AuBb2B,AjCa3BA,AenCI,APJE,MRuCF,AenCA,CLmCG,GuBboB,AzB1BrB,ERuCI,EenCE,APJF,CRuCG,CUAb,CKnCe,CPJD,CEuCK,AVAnBA,CgCpBA,AtBoBoB,AuBbO,EvBaL,AuBbK,AzB1BT,CAAC,GAAL,CEuCa,AKnCF,APJF,COIG,CGUpB,KRyBgB,EKnCG,ELmCa,AKnCF,GiBepC,CxBnBsC,CAAC,CUanC,AR0BgB,CAApB,CQzBuB,AHVE,CGSrB,CHT0C,CGUpB,AHVD,CiBezB,AjBfI,IPJ8C,CAAC,CAAD,CAAZ,EAAiB,KUcd,CAAC,AVdJ,CAAxB,CAAR,CwBmBN,GAAqB,AdNjB,EAEE,MAFF,EAEU,KAFV,EAEiB,MAFjB,EAEyB,eAFzB;AcOF,AdJE,ARwBN,AuBTE,A9CTE,A4BjBED,APJC,CEoCP,OvBfQ,E4BjBI,CiBeD,AdJA,AeeT,IAAA,AlB1Be,CiBeD,ACWF,EffR,AHXc,C5BiBhB,E6CFO,A7CEU,C6CFC,KCWpB,CDXE,CCWuB,clB1BK,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAdA;AQmCC,ALvBF,ARyBL,AuBVIE,AjCQF,AbjBI,A4BjBAF,IkB0BFE,E9CTE,CaiBCD,EuBAS,CRlCJ,CfkCD,CAAC,CuBAL,CAAc,AURjBC,CAAAA,AjCQW,CelCG,GQkCX,AURHA,A9CTe,A4BjBE,CkB0BZ,A9CTW,CoCiBQ,GURxBA,EjCQsB,CAAC,GuBApB,CpCjBY,CoCiBoB,ApCjBjC,CaiBS,GAAqB,CAAlC,EAAqC,CAAC,IAAI,AelCX,CfkC/B,EAA6C,EAAE,CAA/C,EAAkD,AelCX,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAfF;AQmCJ,AUPEA,AjCOA,AbjBC,AiBzBE,AWQD,APLA,MOKA,EkB2BI,AjCOF,CuBAC,AnB1CO,M6BmCC,GVOC,AUPE,CjCOD,CAAC,AI1Cb,CmB0Cc,AvBAF,AelCE,CfkCb,CI1CsB,CWQN,CQkCC,ARlCA,CQkCC,AvBAA,IelCI,CQkCT,CAAW,CRlCC,EkB2BN,EVOU,AUPjB,AjCOiB,CAAC,CiCPP,AjCOM,AelCb,CQkCgB,AvBApC,EAAsC,CelCC,CAArC,KQkCe,CAAnB,AUPkB,CAAhBA;AVQH,AvBAK,AbjBH,AiBzBD,AWQIA,APLD,MRuCC,GI1CG,CAAC,AWQE,EfkCA,GAAG,GI1CN,EJ0CH,AI1Cc,CayBlB,EFjBuB,GAAG,EXRnB,EAAqB,CAAC,IWQM,GAC7B,CXTC,CayBP,CbzBuC,CAAC,OayBxC,CbzBO,CAAP,UWSsB,IEgBtB,CAAiB,IFhBX,CAD6B,CEiBnC,EAAyB,AFfnB,UAAU,CAAC,gBAAX,EAFFA;AEkBF,AvBJG,AMqBD,AbjBL,AiBzBA,SVqBe,EuBIL,OvBJJ,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,EuBIjC;AvBHFC,AMqBG,AejCC,APPF,MdmBE,GcnBG,COOC,CrBYRA,YqBZqB,KAAK,GPPN,MOOhB,EAAiC,KPPnC;AdoBFD,AMqBC,AejCK,APR6B,MdoB7B,EqBZA,GrBYK,GAAG,CAAC,GAAG,CAAC,IqBZE,CrBYN,CAAU,EqBZA,QrBYS,EAAT,EAAa,CqBZhC,ErBYmB,EAAkB;A0BYtC,A1BXH,AqBZG,APRD,IdoBF,IcpBE,CY+BU,A1BXP,GAAG,GAAR,IcpBa,kBY+BV,CAAsC,eAAtC,EAAuD,MAAvD,EACL,KADK,EACE,MADF,EACU,QADV,EACoB,MADpB,EAC4B,CAD5B,EAC+B,CAD/B,EACkC,YADlC,EACgD,kBADhD,EAEL,YAFK,EAES;AACdA,AaCE,AvCdA,AMoBF,AehCG,APTY,MYkCT,GaCC,AjCMA,ENpBE,CAAC,E0BaI,CaCZ,AjCMF,CNpBc,C0BaG,A1BbF,CuCcC,CAAC,AvCdH,CuCcE,CvCdG,CuCcC,CAAJ,CAAd,AvCdY,EAAU,G0BaK,A1Bbf,CAAZ,E0Ba8B,YAAH,GAAkB,CAAC,GAAD,EAAM,GAAN,CAA/CA;AVSF,AhBrBG,AMoBF,AehCE,APV4E,GdmB9D,CAAfA,IcnB6E,EE2C/E,CAAA,KF3C8E,CAAW,GE2CzF,CAAE,MQxBA,IVnB4E,EAAxE,EUmBJ,ARwBF,GAAE,MQxBA,GRwBA,IQxBA,CAAM,EAAN,EAAU,KRwBV,CQxBA,ARwBe,EQxBG,SRwBlB,CQxBA,CRwB4B,CQxBE;AEgB9B,AFfEC,ARwBF,AhBrBA,O0BYKA,AVSE,CQxBD,CxBGC,CwBHC,CEeC,CAAC,CFfC,CxBGC,C0BYC,CAARA,C1BZU,C0BYC,CFfdA,ARwBF,CUTkB,EVSI,AhBrBV,C0BYS,E1BZE,CAAC,CAAxB,C0BY0B,CAAC,IVS3B,EUTA,EAAmC,CAAC,GAAG,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AAC9CD,AVSJ,AhBrBC,AqBbC,APVI,CE0CN,OUPU,CLzBD,GKyBK,CZnCH,CAAC,CYmCK,EZnCF,CAAJ,EYmCW,AZnCJ,CYmCK,CAAD,AZnCF,CYmChBA,CLzBF,CPVqB,WAAW,CAAC,MAA7B,EAAqC,CAAC,GAAG,EAAzC,EAA6C,EAAE,CAA/C,EAAkD;AYoCpD,AFhBA,AR0BJ,AKnCC,APVO,IYmCJ,IFhBI,EAAE,AVnBF,KUmBO,CVnBD,GAAG,GYmCK,EFhBlB,CEgBqB,CFhBC,IVnBE,CAAC,CAAD,CAApB,eYmCwC,CAC1C,eAD0C,EACzB,MADyB,EACjB,IADiB,EACX,MADW,EAE1C,QAF0C,EAEhC,MAFgC,EAExB,CAFwB,EAErB,CAFqB,EAElB,YAFkB,EAEJ,kBAFI,EAEgB,QAFhB,CAA5C;AAGA,AFlBE,AVnBE,IYqCJ,EFlBE,EAAE,EEkBE,AZrCF,CUmBG,EEkBE,AFlBP,CVnBM,GYqCK,CAAC,AZrCF,IYqCM,AZrCF,CYqCG,AZrCF,GAAL,CAAS,EYqCP,GAAc,CAAf,CAAb,QZrCoC,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,MAAZ,CAAxB,CAAR;AYsCL,AFlBE,AekBD,SAAK,WDbP,ACaE,GAAmB,EAAnB,WDbF,SAAA,aAAA,CAAc,KAAd,EAAqB;AACnB,AxBzBI,QwByBA,KAAK,ExBzBA,CwByBG,AxBzBF,CwByBN,ExBzBS,CAAJ,CwByBQ,CxBzBD,EAAE,EwByBI,CxBzBD,IwByBJ,CAAW,CxBzBD,CAAC,IwByBX,ExBzBb,EwByBkC,AxBzBF,CAAC,GAAG,CwByBxC,CxBzBI,CwByByC,CxBzBD,EAAE,CAA1C,EAA6C;AYsCnD,AYZI,AdNFC,A/BSG,AiBzBA,AIHG,QUmBF,CEkBC,AjCTO,AiBzBA,GIHN,CwByBG,CdNC,EVnBA,CwByBR,AdNW,GVnBC,CS2BhB,C9BCK,CAAuB,AiBzBvB,CAAwB,AIHT,CAAC,CrB4BhB,CiCSL,AFlBEA,C/BS+B,AiBzB5B,AIHW,CAAS,CJGU,GawBnC,CbxBK,EAAoC,IAApC,EawBL,AbxB+C,EIHP,CAAC,CJGpC,EAAgD,GawBrD,AT3B+C,CS2BrC,AT3BsC,CAAD,CAAP,EAAY,ES2BpD,AbxBK,EawBa,AbxB+C,EIHzB,CAAxB,CAAR,ES2BR,EAA0B;AGW3B,AHVG,AeFC,A7CGH,AiBzBA,AIHO,MrB4BH,AiBzBA,GjByBG,IAAI,GAAG,AiBzBd,CjByBe,CiBzBC,KjByBhB,EAAuB;A+BTrB,AdfA,AIHG,IJGH,IceI,CAAC,KdfK,CceV,AdfW,CAAD,CceG,Adfb,GAAgB,IAAhB;A4BsBA,AdNE,A/BSmD,AiBxBrD,IjBwBqD,AiBxBrD,EceE,C/BSsD,CAAC,G6CHlD,CdNC,E/BS4C,AiBxB1C,C4BqBC,AdNA,A/BUT,AiBzBS,CAAD,CAAV,GAAgB,IAAhB,U4BqBO,A7CG6C,C6CH9B,A7CIA,G+BVD,A/BUI,CAAC,C6CJC,GdND,A/BS0B,EACpB,GAAG,CAAC,G+BVf,EAAV,CcMW,AdNpB,CcMyC,KAArB,CACpB,A7CEkD,K6CF7C,KAAK,CAAV,GAAc,CAAd,GAAkB,KAAK,KAAL,CAAW,KAAK,GAAG,CAAnB,CADE,EACqB,KAAK,KAAL,CAAW,KAAX,CADrB,CAAf,EACwD,KAAK,MAD7D,CAAP;AdLC,AR0BL,AuBNI,AvCdG,APIHD,AiBzBA,AIJE,IJIF,IjByBM,C8CUD,AvCdO,CgBoBhB,CAAA,GNzCc,CAAC,CAAD,CVqBP,APIY,AiBzBf,CVqBqB,EgBoBzB,AvBhBsB,AiBzBF,CMyClB,AhBpBK,EAAuB,CUrB1B,I6BmCA,GvCdG,CPI2B,COJM,APIL,GAAG,CAAC,KuBgBvC,ChBpBO,API2B,EuBgBhC,AhBpBkD,APIL,GAAG,CAAC,IAAjB,CuBgBhC,AvBhBEA,qBuBgBF,CAAsB,IAAtB,EAA4B;AAC5B,AuBLE,AvCfFA,AUrBE,AIJC,IJID,EVqBI,CgBoBC,EuBLA,IvCfM,CUrBD,CAAC,CVqBG,AUrBJ,CAAV,GAAgB,IVqBM,AUrBtB,E6BoCA,EvCf0B,CuCeD,CvBK3B,GAAiC,CuBLD,GvBKhC,cuBL2B,CAAuB,CvCflDA,GuCe2B,CAA4B,IAA5B,CAAzB;AfrBAA,AR2BJ,AhBpBE,APGE,AiBxBA,AWQG,CL+BP,OQzBU,A/BUF,COHC,AqBbO,EXRL,CVqBC,CAAC,IPGT,COHK,CAAU,APGA,EiBxBf,EccqB,GAAG,GxBOA,EwBPK,EHN1B,CAAkC,KrBatB,EAAqB,IqBbjC,CrBaY,CqBbmC,CrBaP,CwBPnB,EAAxBA;AR6BJ,AhBrBI,APGEA,AiBxBH,AWQD,APbE,EOaF,CXdA,KV2BM,CUrBC,AILA,CrB6BG,CAAC,EOHA,CPGG,E4BhBA,CAAC,CrBaC,CAAd,EAAiB,OqBbL,CAAd,E5BgB+B,AqB7BX,GrB6BN,GAAuB,GAAG,CAAC,SqB7BvC,ErB6BY,GAAyC,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAnDA;A+BVF,AxBQE,AUrBF,AWQF,APdyC,EOczC,MGKM,GdbG,CAAC,CVqBC,AqBbA,CAAC,EXRH,CVqBL,CUrBY,GWQhB,CXRS,AWQW,CGKlB,CdboB,CcaC,Gdbd,EAAmB,EWQC,EXRpB,CAAP,GWQkB,EAAiB;AQmChC,AL7BDA,AxBQD,APEC,AiBvBH,AWQC,APdEA,IOcF,KQkCY,CL7BJ,A/BUF,CAAC,CqB7BC,GOcG,CGKG,A/BUF,A4BfA,CQkCT,ApCnBU,CoCmBQ,ApCnBnB,C+BVe,C/BUD,EqB7BE,COclB,CGKsB,AHLF,SQkCjB,AL7Bc,CHLY,CQkCS,AL7BpCA,MK6BC,EAA2C,ERlC1B,CQkCjB,CRlCuC,CQkCS,MAAhD,EACL,SADK,EACM,yBADN,EACiC,gBADjC,EACmD;AL7BpD,A/BUE,AiBvBP,AWQK,APfgB,QrB8Bd,E4BfE,MAAM,C5BeC,CAAC,G4BfG,G5Beb,CAAiB,CAAjB,E+BTA,A/BSoB,CAApB,G4BfF,EAA4B,SGK5B,EACmB,CADnB,EACsB,eAAe,CAAC,MADtC,EAEE,MAFF,EAEU,EAFV,EAEc,EAFd,EAEkB,MAFlB,EAE0B,eAF1B;AK+BJ,AL5BI,AxBKFA,APGG,A4BfC,APhBgF,MemDlF,E7BvBI,Ac5B8E,GUuB7E,AxBKE,C6BuBD,E7BvBI,E6BuBA,AfnDuE,CAAW,CUuB5F,CK4BJ,EAAmB,A7BvBE,CAAC,GAAG,CAAC,GqBZH,CPhB8D,Cd4BtD,Cc5B3BA,Ed4B8B,CAAT,AqBZnB,CrBYe,CqBZU,CrBYO,UAAjB,AqBZf,CrBYJA,CqBZ0C,cAAtC;AQoCJ,AL5BC,AeqBD,AvChBA,AqBZG,SkB4BE,EVOE,A7BvBA,EAAE,GAAG,GAAG,CsCCjB,ACeE,AvChBS,GuCgBU,CvChBC,G6BuBpB,O7BvB8B,GsCChC,CtCDoC,GAAG,KsCCvC,AtCD4C,CAAnC,CAAP,GuCgBoC,OAAO,CAAC,CDf9C,GAAiB,MCeI,EAAqC,WAArC,CAAnB;AVQD,AStBCA,ACgBA,AvCjBD,APEG,A4BdD,APjBC,GegDoD,A7BzBjD,CAAP,CqBVE,GiBiBM,CCgBD,C9CfC,GqB/BC,CwB8BK,AxB9BJ,GwB8BO,AxB9BJ,CAAJ,CrB+BQ,CAAC,AqB/BF,EwB8BM,ACgBpB,AzB9CgB,CyB8CG,EzB9CA,CrB+Bb,E6CDNA,ECgBA,C9Cf2B,CAAzB,EAA4B,CqB/BD,CAAC,MAA5B,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD;AwB+BnDA,AtBmBJ,AhBpBC,AMqBM,AbnBC,A4BdL,APjBK,GOWN,KiBmBQ,A7CCF,CamBQ,CUDhB,AFjDQ,CEiDR,GFjDY,CRkDL,CAAgB,EQlDP,EEiDhB,CAAE,EsBnBuB,A7CCF,CAAC,CqB/BD,CwB8BK,AhCoBrB,AQlDiB,CrB+BG,CamBQ,AbnBP,G6CDK,EhCoB1B,CbnBgB,CamBmB,CbnBN,AqB/BF,CAAC,CAAD,CrB+BK,AqB/BhB,CrB+BiB,CqB/BD,EEiDvC,CvBlBuB,CAAf,C6CDJA,AtBmBF,MFjDqB,CAAf,EEiDN,sBAAA,GAAyB;AsBlBvBA,AtBmBF,AVCAA,AbnBK,A4BdN,APjBM,MRkDC,EgCpBE,CtBmBC,GsBnBG,EtBmBE,AVCA,CgCpBC,EhCoBE,GgCpBG,ChCoBC,CAAC,GgCpBpBA,AhCoBe,CAAS,KAAT,CAAjBA,KUDA;AaGAC,ASrBED,AtBmBD,AVCDA,AbnBG,CuBgBL,KaIM,AvBDE,EuBCA,ASrBE,GTqBC,GvBDK,CuBCD,CAAC,CvBDG,EgCpBE,EhCoBE,CgCpBC,AhCoBA,EgCpBpBA,ChCoBe,CAAS,KuBCG,AvBDZ,CuBCa,AvBD9BA,MuBC6B,CAAhB,EAA0B,SAA1B,CAAbC;AACAA,ASrBEA,AhCoBFD,AQnDI,MeoDA,AvBDE,CAAC,CuBCD,ASrBA,EhCoBI,CuBCD,GSrBG,CTqBC,CAAC,CSrBC,CAAbC,EhCoBkB,CAAC,CAAD,CAAV,GAAgB,KuBCG,CAAC,EvBDpB,GAA2B,CuBCD,GAAG,CAAV,CAAhB,EAA8B,EvBDI,CAAC,CAAD,CAAV,GAAgB,CuBCxC,CAAbA,MvBDAD;AuBEA,AvBDAA,AbpBE,AiBrBG,AIVF,EeoDH,IvBDM,CAAC,CuBCD,CnB1CQ,CJyCJ,EuBCA,GbDG,GaCb,CARwD,CvBOpC,AbpBZ,CaoBa,CAAD,CAAV,AbpBR,GaoBwB,EIzCrB,CAA6B,KJyCxB,GAA2B,EIzChC,EAAyC,MJyCC,CAAC,CAAD,CAAV,GAAgB,QAArDA;AgCpBE,AhCqBF,AbpBC,AiBrBD,EJyCA,OgCrBOC,A5BpBA,GJyCG,CgCrBC,AhCqBA,CgCrBC,AhCqBF,CAAV,EgCrBe,CAARA,AhCqBS,CAAhB,CgCrBkB,EAAE,C5BpBC,CACnB,C4BmBqB,IAAI,CAAC,E5BpBP,EACT,E4BmBV,EAAkC,CAAC,GAAG,A5BpBnB,E4BoBnB,A5BnBoB,CAAC,C4BmBqB,EAAE,CAA5C,EAA+C,E5BpB5B,EACY,CAAC,QADb,EACuB,UADvB,CAArB;AmB2CA,AStBID,AhCqBJ,AbpBD,AiBpBA,AIZG,EeqDF,AvBDA,QgCrBU,EhCqBA,CgCrBG,AhCqBF,CAAD,CAAV,CgCrBgB,EhCqBA,CAAhB,CgCrBoB,CfGpB,AeHqB,CAAD,CAAhBA,ITsBqB,AL5BzB,CK4B0B,KNnB1B,MCTA,GDSA,EMmB0C,EAAjB,CAAzB,CL5BA,EK4BgD,CNnBhD,CMmBA,ANnBU,MAAV,CCTA,CDSkB,ACTR,MAAV,EAAkB,GDSlB,EAA+B,CCT/B,EAA0B;AK6B1B,AStBIA,AdNFA,AlB2BF,AQrDW,EesDX,ML5BQ,ClB2BD,CgCrBG,ShCqBV,CgCrBoB,GAAG,AdNA,GAAG,CK4BD,AStBE,CTsBD,GL5BK,aK4BW,EAAjB,AStBF,CTsBvB,AStBsC,EdNZ,CK4BsB,CL5B9CA,CK4BF,CAXwD,SSXH,CAAC,KAAhB,CAAsB,MAAtB,EAA8B,GAA9B,CAAf,EAAmD,MAAnD,CAAnBA;AfIFA,AeHE,AhCqBL,AQrDK,MwBgCA,EfGI,MTnCE,GwBgCK,CfGG,AeHF,AxBhCF,GSmCO,CeHjB,CAAiB,AxBhCX,CAAU,SwBgChB,GfG+B,MAAd,CAAnBA,aTnCkD,IAA1C,CAAN;ASoCFA,AeHE,AdPF,AVzBC,MwBgCC,EfGI,ACVF,IcOI,GAAG,GAAT,CfGe,GAAG,CCVpB,EAAqB,ODUS,CAAC,QAAX,MAAyB,eAAM,WAA/B,GAClB,UAAS,aAAT,EAAwB,cAAxB,EAAwC,MAAxC,EAAgD;AMmBpDC,ANlBMD,AeJH,AdPCA,AV9DJ,Me2FI,EAAJC,EAAQ,ANlBI,ACXF,EK6BVA,IL7BgB,CeoBhB,EfpBmB,EDWI,GAAG,ACXF,SAAL,AeoBnB,ChBToC,CAAC,ACXjCD,OeoBJ,EhBT0B,EAApBA,SgBSN,CAAc,OAAd,EAAuB;AhBRjBA,ACXF,UDWQ,eAAe,GAAG,ICVxB,MDUkC,CAAC,QCXrC,EACmB,CADnB,EACsB,CDUI,EAAxBA,YCVmC,CAAC,MADtC,EAC8C,MAD9C,EAEE,MAFF,EAEU,MAFV,EAEkB,eAFlB;AK6BJ,ANjBMA,AeLJ,AdJE,AV5BJ,KesDG,IftDI,CSqCK,CeLH,AdJA,EV5BT,ESqCiB,GAAG,ACThB,IcIF,mBfK4B,eAAV,IAA6B,uBAAU,WAAV,CAA3CA;AMkBJ,ANjBI,ACTH,AV5BJ,IesDG,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,CNjBL,KMiBI,CAAhB,EAA0B,INjB/B,EACE,GMgBG,CAAT,WNhBqB,CAAC,CAAD,CADjB,EACsB,eAAe,CAAC,CAAD,CADrC,EAEE,KAFF,EAES,CAAC,KAFV,EAEiB,CAFjB,EAGE,CAHF,EAGK,CAHL;AMkBJ,ANdI,ACZL,AemBCA,A7BjCG,ImBwCH,EAAE,EUPI,CVOD,AnBxCO,ImBwCH,CAAC,IUPM,GAAG,EAAnBA,MVOyB,CAAC,INdV,EMcgB,CnBxC7B,CAAsC,CmBwCN,CAAV,CAAhB,EAA8B,INdnC,Cb1BD,Ca0B4B,CAA3B,Ab1BiD,EmBwC5C,ANdyB,CMclC,OnBxCG,EAA8D,Ga0BlB,CAAC,MAA5C,EAAoD,MAApD,EACE,YADF,EACgB,cADhB;AMeJ,ANbI,AgBMJ,A9CbG,AiBpBLA,ImBwCE,AUPA,E7BjCI,CAAC,EjBoBO,CoCoBN,AnBxCE,Ga2BG,CMaD,AUPA,CAAC,KVOX,ApCpBG,AiBpBe,CjBoBM,AiBpBL,CAAD,CAApBA,IjBoBK,EAA6B,Q8BOR,AgBMA,MAAd,CAAV,GhBNW,AgBMuB,EhBNE,KgBMK,CAAC,KhBN/B,CgBMuB,ChBNe,IgBMI,ShBN1C,AgBMuB,EhBN8B,CgBO9D,OAAO,CAAC,KhBPC,CgBMuB,ChBN8C,EgBO7D,IhBPR,AgBMX,ChBNI;AACD,AgBQHA,A9CfFA,AiBpBAA,KaesB,C9BKhB,AiBpBA,CAAC,Ca4BH,AgBOI,E7BnCE,OjBoBO,GAAG,AiBpBA,CAAC,CAAD,CAApBA,Sa4BiB,AgBOe,E9CfE,C8CeC,A9CfA,MAAD,C8BQ9B,A9BRJA,E8BQ6B,WAAzB,CAbFA,KgBoB2D,CAAC,OAAD,CAA3DA;AVKA,ANXA,Ab5BF,AWOK,CG3O8B,CAAR,MK2QrB,CNXC,Ab5BA,AWOO,KQgCF,IAAI,CL3QmB,CAArC,CK2QI,EAAmB,ANXnB,Ab5BmB,Ca4BC,Ab5BA,CAAD,EAAI,CAAJ,EAAO,CAAP,CWOhB,CXP0B,AWOO,CXPjB,Ca4BnB,Cb5BgC,SWO7B,CXPgB,CAArB,AWOoD,YAA/C,EAA6D,gBAA7D,EAA+E,gBAA/E,EAAiG;AEsBpG,A9BTF,AiBnBD,AWOC,EAAA,I5BYI,K8BSK,GFrBG,CEqBV,AFrBW,E5BYb,EAAiB,G4BZjB,CAAqB,UAAS,WAAT,EAAsB;AEsB1C,A9BTC,A4BZA,IAAA,K5BYKA,IAAM,G4BZC,C5BYZ,A4BZa,GiBUf,C7CEqB,G4BZnB,CAAqB,O5BYrB,EAAgC,C4BZF,WAAT,EAAsB,CiBU7C,SAAA,0BAAA,GAA6B;AAC3B,A7CEE,A4BZA,M5BYA,E6CFE,KAAK,Q7CEQ,CAAC,K4BZC,C5BYF,E6CFb,A7CEsB,I6CFI,A7CEb,CAAf,G4BZA,CiBUiC,CjBVH,UiBUF,CjBV5B,CiBUF,CjBV6C,CiBUK,ejBVhD;AiBWAA,A7CED,A4BZC,UiBUM,eAAe,EjBVJ,CiBUO,KAAK,KjBV7B,EAA8B,QiBU9BA,GjBVA,EAA2C,gBAA3C;AQiCA,AUJF,A9ChBD,A4BZE,CEpO4B,CAAV,GFiOnB,CQmCE,GUJG,QhBhQwB,CAAjC,KgBgQI,GAAsB,KVIK,CAAC,gBAAgB,EAAjB,AUJmB,CVI5C,AUJ6C,GVIG,EAAhD,QUJF;AVKE,ASvBA,A7CGL,A4BZE,GALD,GQqCI,ISvBI,qBTuBqB,CAAC,YStBxB,ITsBwC,EAAjB,CAAzB,GAAgD,EAAhD,GSvBI,EACe,CADf,EACkB,KAAK,KADvB,EAC8B,KAAK,MADnC,CAAJ,EACgD;ATuBhD,AStBE,AdLR,AHLC,SGKQ,IK2BI,AStBA,EfWE,YChBf,CAA4B,CK2BtB,KL3BN,EAAoC,CcK5B,GAAgC,eAAhC;ATuBH,AStBE,AdLLC,MAAI,CcEA,KdFJA,CcKW;ATuBV,AStBK,A5BjBD,GmB0BL,MnB1Bc,EmBuCL,EAAE,AStBA,ITsBI,EAAN,IAAY,EAAE,IAAI,EAb3B,MSTM,C5BjBD,CAAuC,C4BiBN,U5BjBjC,EAAoD,G4BiBJ,CAAC,KAAhB,C5BjBjC,C4BiBC,C5BjB+D;A4BkB/D,AdNN,AdXAD,AIdK,MUyBD,AdXE,GIdQ,GUyBJ,AdXE,C4BiBD,E5BjBI,AIdV,CUyBS,AVzBO,CUyBrB,CVzBK,CUyBY,CVzBQ,QAApB,EAA8B,IJcD,CAAC,E4BiB7B,AxB/BD,CwB+B+B,CxB/BQ,KwB+BtC,C5BjB4B,CAAlCA,C4BkBU,ExBhCL,EAAmD,2BwBiC5C,KAAK,wBADP,EACiC,CADjC,EACoC,KAAK,KADzC,EACgD,KAAK,MADrD,CADJ;ATsBN,ASnBK,AdRH,AewBA,AjCKG,AIxCL,AIdAA,IUyBE,EVzBI,GeoDC,AUHA,AjCKO,AIxCP,CcWC,EVzBI,CUyBD,ClB6BN,CuBFQ,AvBEO,AQtDL,GeoDC,GAAhB,EAAqB,AUHnB,EjCKG,AQtDoB,CyBiDD,A7BnCA,CJwCQ,AIxCP,EIdI,GRsDxB,CIxCmB,CJwCe,CIxCN,EcWP,EAAxB,IVzBFA,GJcwB,CAAxB,G6BmCgD,CAAC,aAA/C;AfvBD,AlB6BD,AIxCD,AIdCA,ERsDA,CkB/BA,GVvBM,GUyBC,CVzBG,ERsDA,CkB7BC,AlB6BA,AQtDE,CRsDH,CAAV,IkB7BiB,AlB6BA,IkB7BI,CAAd,AlB6BP,EkB7BwB,QVzBD,EAAE,CAAC,CAAD,CAAZ,CAAbA;AeqDEA,ASpBE,AdPF,AlB6BF,AejCK,APrBLA,ERsDA,EkB7BE,EVzBI,EeoDE,CR/BM,CQ+BJ,AL3BF,AVzBE,CwBgCD,ChCsBC,CuBFG,AL3BF,AlB6BA,AQtDE,CRsDH,CAAV,EuBFiB,CAAC,CvBED,KAAjB,IgCtBI,AjBXC,GiBWwB,AjBXO,EQ+BH,CAAC,AfpDX,EwBgCW,AxBhCT,CUyBC,AVzBA,CAAD,CAAZ,CeoDoB,AL3B/B,AVzBFA,CeoDiB,EAA0B,ISpBd,EAAzB,GToBa,CAAfA;AACAA,ASpBC,AdPF,AlB6BD,AejCA,APrBAA,EOqBA,CGEO,GVvBD,EeoDE,CL3BD,AlB6BA,CuBFG,AfpDA,GeoDG,AL3BF,AHJA,APrBE,COqBD,GQ+BK,CAAC,CL3BD,AlB6BjB,AejCA,EPrBqB,EUyBA,CAAd,AVzBiB,EUyBA,IVzBxBA,GeoDiC,CAAC,MAAM,GAAG,CAAV,CAAhB,EAA8B,SAA9B,CAAfA;AACA,AL3BA,AlB6BH,AejCC,APrBAA,IeoDE,AL3BA,EVzBI,GAAG,CeoDD,AL3BA,EVzBI,CUyBD,CK2BC,EfpDI,CAAC,GeoDf,CAJmB,AfhDT,CACV,IAAI,CAAC,GAAL,CAAS,IAAT,EUwBwB,EVxBP,EUwBjB,EVxBqB,CAAC,GAAL,CAAS,IAAT,CAAjB,GACE,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,CAAjB,GAAkC,IAAI,CAAC,GAAL,CAAS,OAAT,CAF1B,CAAZA;AwBgCE,AdND,AHJF,APnBCA,MAAM,GAAG,EwB6BA,CxB7BG,IwB6BE,AxB7BE,GAAG,IAAI,CAAC,KAAL,CACjB,IAAI,CAAC,GAAL,CAAS,CwB4BT,MxB5BA,IAAoB,IAAI,CAAC,GAAL,CAAS,IAAT,CAApB,GAAqC,IAAI,CAAC,GAAL,CAAS,IAAT,CADpB,EAEjB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,GAAT,CAFjB,CAAnBA;AemDE,AUHA,AzB7CF,QegDM,CUHC,AzB7CA,CegDC,AfhDA,IegDI,EAAN,IAAY,AUHhB,EVGkB,CUHC,GVGG,EAAtB,EAA0B,CfhDV,GAAV,CAAD,EAAiB,UyB6CqB,CAAC,UAA5C,AzB7CgC,GAAV,CAAjB,CAAP;AeiDI,AL5BJ,AVpBD;AeiDI,KARkB;ALpBY,IAAA;AADjC;AK+BEA,AL5BH,QK4BS,GAAG,GAAG,EAAE,GAAG,EAAjBA;AACAA,AUFA,AjCKG,AIxCA,QmBqCG,CUFD,AjCKO,AIxCA,EmBqCH,GAAG,EAAE,GAAG,CSrBnB,CTqBEA,AUFA,CVTmB,EUSC,AjCKjB,CAAyB,MiCLD,AjCKxB,CiCLyB,CjCKQ,MAAjC,EAAyC,CIxCzC,C6BmCH,A7BnC8C,S4BgBhD,M5BhBK,EAA4D,C4BgBjE,K5BhBK,EAAoE,GAApE,EAAyE,MAAzE,EAAiF,S4BgBtF,CAA8B,A5BhBzB,EAA6F,c4BgBlG,EAAgD;AAC9CA,AhCwBFA,AIxCAA,AWOK,MfiCC,AIxCA,E4BgBE,AhCwBA,CejCM,EfiCH,CIxCC,GAAG,EJwCE,CAAC,CAAD,CAAN,GAAY,EejClB,CAA0B,GfiCF,CAAC,CAAD,CAA7BA,CgCxBiC,C5BhBC,CAAC,C4BgBC,AjBT/B,EiBSHA,AjBTyC,OXPT,CAAlCA,GWOK,EAAmD;AQ+BtDA,ASrBAA,AhCwBFA,AIxCA,AWOA,MfiCM,AejCF,CAAC,CQ8BG,ASrBA,AhCwBA,CIxCD,EmBqCI,AvBGA,GuBHG,EAAE,CvBGC,AejCjB,CfiCkB,CuBHC,AvBGF,AejCA,CfiCN,CuBHTA,CSrBoB,ChCwBC,EgCxBE,EAAvBA,EhCwB2B,CAAC,AIxCF,CJwCC,AIxCA,CJwC7BA,KIxC4B,EAAS,eAAT,EAA0B,MAA1B,EAAkC,GAAlC,EAAuC,MAAvC,CAA5B;AmBsCEA,ASrBA,AhCwBF,AIxCD,AWOG,IiBSA,ITqBM,CvBGD,EuBHI,AvBGF,AejCA,GQ8BK,AvBGF,AejCA,CAAC,CQ8BG,AvBGT,GuBHY,AvBGF,EuBHfA,AvBGiB,CuBjBE,EvBiBC,EAAtB,AejCY,CAAV,EiBSyB,CAAC,MAA1B,GAAmC,6BACjC,KAAK,eAD4B,EACX,CADW,EACR,KAAK,KADG,EACI,KAAK,MADT,EAEjC,IAAI,CAAC,IAAL,CAAU,gBAAV,CAFiC,EAGjC,yBAHiC,EAGN,CAHM,EAGH,cAHG,CAAnC;AAIA,AhCqBH,AejCE,GAFD,MAEO,EiBYE,EjBZE,EiBYE,KjBZK,EiBYT,CAAY,OjBZV,KAAsB,QAA1B,EAAoC,GiBYlC,EAAuC,wBAAe,EAAtD,EAA0D,cAA1D,CAAP;AjBXA,WAAO,GAAG,CAAC,UAAD,CAAV;AGGG,Ae0BH,AlB5BD,GAFM,MGIO,Ae0BP,AlB5BA,QkB4BL,GAAgB,Of1Bb,CAA4B,MAA5B,EAAoC,Qe0BC,CAAC,OAAzC;AVGA,AL5BFC,Ae2BED,AlB7BA,MGEE,EK4BG,AUDC,GVCE,CL5BVC,EK4Ba,GAAN,IAAa,GAAG,AUDC,GVCE,AUDC,GVCrB,KACE,GAAG,GAAG,CAAN,IAAW,GAAG,AUF2B,CAAC,EVEzB,GAAlB,EUF0C,CAA/CD,CVE+B,GAAG,IAAI,GAAjC,IAAyC,GAAG,GAAG,CAAN,IAAW,GAAG,GAAG,GAD3D,MAEE,GAAG,GAAG,CAAN,IAAW,GAAG,GAAG,GAAlB,IAA0B,GAAG,IAAI,GAAjC,IAAyC,GAAG,GAAG,CAAN,IAAW,GAAG,GAAG,GAF3D,CAAJ,EAEsE;AUFtEA,QAAM,oBAAoB,GAAG,wBAAwB,CAAC,UAAtDA;AVIE,AL/BJ,Ae4BEA,AlB9B6B,MQiC3B,AL/BA,AHF2B,EQiCzB,AUHE,GVGC,CL/BC,CK+BN,GL/BU,Ue4BY,GAAG,Wf5BA,EAA7B,EAAiC,Se4BoB,CAAC,OAAD,CAAnDA;AVIE,AL/BF,AHJA,IGIA,EK+BE,EAAE,EL/BE,CK+BC,EAAL,AL/BO,CAAT;AKgCE,AL/BH,AdTI,AWOJ,GGAD,MAEO,AdTO,IcSH,MAAM,IAAI,SdThB,CAAiC,KAAjC,EAAwC,OcST,GAAzB,AdTN,EAAoD,EcSd,MAAM,IAAI,wBAAe,GAA7D,EAAkE;AKgCtE,AL/BD,AlBgCG,AIzCLA,AWOD,IGEG,CKMmB,CnBff,GJyCQ,CkBhCN,EdTI,CcSD,CAAT,CdTa,EJyCV,CAAkB,EgCtBvB,IhCsBK,EAA0B,IgCtB/B,EhCsBK,EAAkC,AIzCL,CAAC,I4BmBnC,M5BnBkC,C4BmBlC,A5BnBAA,G4BmBU;AACR,AdVD,AlBgCD,AIzCA,GcOO,MAEA,AlBgCA,AIzCA,E4BmBE,EdVE,AlBgCA,CAAC,IAAL,CkBhCU,AlBgCA,CIzCC,CAAC,EcSE,IdTH,EAAS,I4BmBL,ChCsBU,AIzCd,CJyCe,AIzCjC,K4BmBE,ChCsB8B,EAAS,IkBhCL,ElBgCJ,CAAzB,CkBhCA,AlBgCP,EkBhC0C;AACxC,AlBgCH,AIzCA,IcSG,MAAM,GAAG,CAAT;AACD,Ae4BC,SAAK,YAAL,GAAoB;AAClB,MAAA,MAAM,EAAE,gBADU;AVIpB,AL/BF,Ae6BI,IVEF,EUFE,UAAU,EAAE,WVEW,CAAC,QUJN,QVIsB,EAAjB,CAAzB,GAAgD,EAAhD;AACA,ALhCF,Ae8BI,IVEF,EUFE,QAAQ,EAAE,aVEa,CAAC,gBAAgB,EAAjB,CAAzB,GAAgD,EAAhD;AACA,ALjC4B,Ae2BR,IVMpB,ALjC4B,Ce2B5B,CVME,GAAG,EAAL;AACA,ALlCF,IKkCE,EAAE,GAAG,EAAL;AACA,ALlCH,AegCG,IVEA,EAAE,EUFE,CVEC,EAAL,IUFW,CAAC,IDnBd,MCmBM,KAAuB,QDnB7B,CCmBE,EAAsC,MDnBxC,gBAAA,CAAiB,MAAjB,EAAyB;ATsBvB,ASrBA,ACmBE,AlB9BC,IQgCH,EAAE,AUFA,GVEG,ARhCO,EQgCZ,ASrBO,KCmBK,CAAC,sBAAa,QlB9BvB,CAAgD,CkB8BvC,CAAV,GAAsC,ODlBtC,ACkB6C,CAAC,ClB9B7C,EAAgE,CiBY5D,MCkBL,oBDlBA,EADK,EAC8B,CAD9B,EACiC,KAAK,KADtC,EAC6C,KAAK,MADlD,EAC0D,MAD1D,CAAP;ATsBD,AUFE,AlB9BH,GQhCwD,EU4DtD,MAEO,IAAI,OAAO,CAAC,IAAR,KAAiB,SAArB,EAAgC;AACrC,A7BrCC,M6BqCD,G7BrCU,MAAT,C6BqCS,A7BrCO,C6BqCN,M7BrCV,EAAyB,OAAzB,EAAkC,K6BqCX,UAAd,CAAV,GAAsC,KAAK,mBAAL,CACpC,KAAK,cAD+B,EACf,OAAO,CAAC,IAAR,GAAe,KAAK,QADL,CAAtC;AjCKC,AIzCL,SJyCc,AIzCP,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CJyCvB,AIzCE,CJyCgC,GIzCJ,OJyC9B,AIzCqC,CAAC,CJyCQ,AIzCT,CAAP,IAAc,EJyC5C,EAAuD,GIzCJ,CAAC,CAAD,CAAjD,IACH,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADlB,IACyB,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADrD;AmBuCA,AUAI,AjCGJ,AIxCD,EmBqCC,OvBGO,CiCHC,KAAK,SjCGS,CAAC,EuBHE,AUArB,CVAsB,CUAC,MjCGL,EACpB,OuBJwC,EAAjB,CAAzB,GAAgD,EAAhD,CvBIkB,CAAC,UAAD,EAAa,OAAb,CADI,CAAtB;AuBFA,AUD2B,AjCK5B,EuBJC,yBAAyB,CAAC,gBAAgB,EAAjB,CAAzB,GAAgD,EAAhD;AACA,AUDM,QAAA,CVCC,SUDS,CAAC,MVCjB,gBUD8B,UAAd,CAAV,GAAsC,iBACpC,MAAM,CAAC,KAAK,aAAL,MAAwB,UAAU,CAAC,sBAAa,UAAd,CAAnC,CAD8B,EAEpC,KAAK,cAF+B,EAEf,KAAK,cAFU,CAAtC;AVEP,AUCM;AfjCA,AekCF,AlBhCD,SGFY,KHEH,KAAT,EAAgB,GGFb,CAAyB,MHE5B,EAA4B,MGFzB,EAAyC,KHE5C,EAA2C,EGFxC,EAAoD,QAApD,EAA8D;AACnEA,AHEIA,MGFE,IHEI,MAAM,GAAG,EGFE,GAAG,AHEA,CAAC,MAArBA,OGFkC,CAAC,kBAAf,EAAxBA;AekCE,AlB/BEA,IkB+BF,MlB/BQ,IkB+BE,CAAC,IlB/BM,GAAG,aAAa,EkB+BT,GlB/Bc,KkB+B5B,CAAV,GAAoC,AlB/BhB,GAA8B,IkB+BP,CAAC,QAAR,AlB/BhB,GAA8C,CAAhEA,CkB+BuD,SAArB,GAAiC,OAAO,CAAC,QAAzC,GAAoD,CAAxF;AfjCF,AekCE,AlB/BEA,MGHA,CAAC,EekCE,ClB/BG,MAAM,GAAG,CiBWnB,EddA,AekCE,CAAmB,CflCC,KHGO,IkB+B3B,ClB/BgC,GiBWlC,MjBXmB,GiBWnB,AjBX8C,UAA3B,GAAwC,CiBW3D,CAAe,EjBXgD,KAAJ,CAAU,GiBWrE,EAA4B,CjBX+B,CAAvDA,QiBWJ,EAAwC;AACtC,AddA,SccK,EddE,IAAP,GccA,CAAe,UAAf,EAA2B,WAA3B,EAAwC,CAAxC;AdbD,AHEG,GGJJ,MAEO,EHEEC,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,IAAI,SAAjC,EAA4C;AiBY9C,AdbAD,AdHG,AWKCA,QiBWA,AdbE,CcaD,A5BhBO,GWKF,EiBWA,AdbE,CdHT,CAAgB,CcGJ,AHEA,GAAG,GXLf,EAAyB,I4BgB5B,EAA2B,AdbE,CAAC,AdH3B,EAAkC,AWKL,CAAC,CAAC,KGFnB,AHEwB,CAAC,CGFxCA,AHEuC,CAAN,EAAW,KAAK,CAAC,CAAC,GAAG,CAAL,CAAhB,CAAD,CAA5BA;AiBYF,AdbF,AdHF,AWKM,MXLF,EWKE,GiBWG,AdbA,EdHE,CAAC,AWKA,CXLD,AWKE,CXLT,AWKQ,CAAN,EXLW,CWKC,KAAK,CiBWnB,A5BhBoB,AWKA,CXLC,AWKF,CXLC,AWKlB,CiBWqB,A5BhB3B,E4BgBI,A5BhByB,QcIzB,eADK,EACY,CADZ,EACe,eAAe,CAAC,MAD/B,EACuC,MADvC,EAEL,SAFK,EAEM,QAFN,CAAP;AccC,AdXF,AdLC,AWKI,IXLJ,IWKI,GXLG,CAAC,CAAD,CAAP,AWKU,CAAC,CAAC,CXLC,EWKE,CAAL,CAAN,GXLgB,AWKA,CXLC,CAAD,CAApB,EWKyB,CAAC,CAAD,CAArB;AGCP,AegCG,A7BrCD,S6BqCM,QAAL,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,EAGH,gBAHG,EAGe,cAHf,CAAhC;AAIA,AR9CF,IQ8CE,eAAe,CAAC,GR9CD,CQ8Cf,CAAqB,QR9CvB,EAA6B,IQ8C3B,IR9CF,EAAuC,sCAAsC,CAAC,OAAD,CAA7E;AQ+CE,ASrCF,A5BlBA,AWSA,EiBSA,ETqCE,EnBvDE,ImBuDI,GAAG,GnBvDG,CmBuDC,ASrCA,A5BlBA,CmBuDC,ASrCA,A5BlBF,CAAV,GmBuDgB,ASrCpB,A5BlBoB,CmBuDC,ASrCA,AjBTJ,KXTS,CmBuDV,AnBvDW,CAAD,CAA1B,AWSA,CQ8C8B,CAAf,AnBvDgB,AWSJ,CQ8CzB,ISrCkC,CAAC,CAAD,CAApC,EAAyC,AjBTzC,EAAuC,aiBSiB,CAAC,CAAD,CAAxD,sBjBT6E,CAAC,OAAD,CAA7E;AQ+CC,ASrCD,A5BlBE,AWSH,IXTG,K4BkBK,C5BlBC,CAAC,CAAD,C4BkBG,A5BlBT,GAAY,I4BkBP,CAAY,K5BlBK,CAAC,CAAD,CAAtB,O4BkBK,EAA6B,wBAAe,EAA5C,EAAgD,CAAC,eAAe,CAAC,MAAjB,CAAhD,CAAP;AACD,A5BlBE;AmBuDD,AnBtDD,SmBsDQ,gBAAP;AACD;;;;;;;AS7BM,A5BlBA,S4BkBS,A5BlBA,U4BkBT,CAAoB,MAApB,A5BlBA,CAA2B,C4BkBC,K5BlB5B,EAAmC,WAAnC,EAAgD;A4BmBrDA,A5BlBA,M4BkBM,C5BlBDC,G4BkBK,C5BlBD,CAAC,C4BkBG,E5BlBA,CAARA,EAAW,C4BkBG,CAAC,A5BlBF,C4BkBC,CAAnBD,C5BlBqB,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;A4BmBtDA,A5BlBE,AWSG,IXTH,E4BkBI,GjBTQ,CiBSJ,GAAG,MAAM,AjBTd,CiBSe,A5BlBF,AWSO,CiBSN,A5BlBA,C4BkBnBA,K5BlBkB,EAAS,CWStB,EAAgC,QXTC,CAAC,CAAD,CAApB,CAAhB,EWSG,EAAgD;AiBUrDA,A5BlBC,AWSD,MiBSM,GjBTC,CiBSG,GAAG,KjBTG,CiBSG,AjBTF,CiBSG,CAAD,CAAnBA,OjBTgB,EAAa,WAAb,EACd,cAAc,KAAK,SAAnB,GAA+B,cAA/B,GAAgD,WADlC,CAAhB;AiBUAA,AjBRD,MiBQO,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnBA;AACAA,AhC+BK,AIlDL,M4BmBM,GhC+BQ,AIlDP,MAAP,IJkDK,CAAoB,CgC/BJ,GACjB,CAAC,IAAD,ChC8BC,CgC9BM,ChC8B0B,GgC9BjC,EAAa,IAAb,EAAmB,IAAnB,EAAyB,ChC8BxB,EAAoD,CgC9BrD,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,CADJA;AAEA,AhC8BA,AIlDD,S4BoBQ,AhC8BA,IgC9BI,EhC8BE,CAAC,IgC9BP,CAAY,KhC8BN,EAAa,QgC9BnB,EAA6B,AhC8BvB,EAAyB,kBAAzB,CAAb,GgC9BmD,EAA5C,EAAgD,CAAC,eAAe,CAAC,MAAjB,CAAhD,CAAP;AACD,AhC8BA;;;;;;;;;Ae9BM,SAAS,QkBoCd,AlBpCK,CAAkB,SkBoCvB,ClBpCK,EAA8B,MkBoCnC,OAAA,CAAQ,AlBpCH,EAA8C,MkBoCnD,EAAkB;A7B9Cb,AWWLA,MAAM,GXXQ,GWWF,GAAG,SAAS,CAAC,KXXpB,CAA+B,IWWZ,EXXnB,AWYH,EXZ0C,YWY5B,GXZX,EAAwD,AWYxC,MXZhB,EAAgE,CWYnE,EXZG,CWY4B,CXZyC,MAArE,EAA6E,KWYhF,GAAgD,WAD1B,EACuC,WADvC,CAAxBA;AkBoCEC,A7B9CF,AWYAD,MAAM,EkBkCA,C7B9CC,AWYE,GAAG,GXZC,GAAG,AWYE,CAAC,CAAD,CXZlB,AWYAA,CkBkCoB,C7B9CC,E6B8CE,I7B9CI,IAAI,C6B8CC,CAAC,I7B9CjC,E6B8CEC,A7B9CqC;A4BqBlC,AC0BHA,A7B9CA,IAAA,I6B8CI,CD1BQ,G5BpBJ,CAAC,G6B8CTA,GD1BG,A5BpBK,C4BoBe,C5BpBN,K4BoBd,EAA4B,Q5BpBC,C4BoB7B,A5BpB8B,E4BoBS,I5BpBV,CAAxB,EAAkC,E4BoBvC,EAAkD,W5BpBI,CAAC,MAAM,GAAG,CAAV,CAAjD,CAAR;A4BqBFD,A5BpBC,AWWD,MiBSM,AjBTF,GAAG,EiBSI,CjBTD,CAAC,CiBSG,EjBTV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","file":"View.cd74c59f.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target, true);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (const type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @private\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass Event {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    evt.target = this;\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return false;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        const pixelExtent = sourceProj.getExtent();\n        const projectedExtent = sourceProj.getWorldExtent();\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n\n}\n\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nclass View extends BaseObject {\n\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.getCenter().slice();\n    let resolution = this.getResolution();\n    let rotation = this.getRotation();\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          const rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenter();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getSizeFromViewport_() {\n    const size = [100, 100];\n    const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    const element = document.querySelector(selector);\n    if (element) {\n      const metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  }\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  constrainCenter(center) {\n    return this.constraints_.center(center);\n  }\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  constrainResolution(resolution, opt_delta, opt_direction) {\n    const delta = opt_delta || 0;\n    const direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  }\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  constrainRotation(rotation, opt_delta) {\n    const delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const size = opt_size || this.getSizeFromViewport_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    const size = opt_size || this.getSizeFromViewport_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.maxResolution_;\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.maxResolution_;\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  getState(pixelRatio) {\n    const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const pixelResolution = resolution / pixelRatio;\n    const rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  }\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = [centerX, centerY];\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    // calculate rotated position\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    const resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    const centerX = rotX * cosAngle - rotY * sinAngle;\n    const centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  rotate(rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      const center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n}\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n"]}