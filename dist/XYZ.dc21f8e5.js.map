{"version":3,"sources":["../../../src/ol/reproj/common.js","../../src/ol/util.js","../../src/ol/TileState.js","../../src/ol/easing.js","../../src/ol/Disposable.js","../../src/ol/obj.js","../../src/ol/events.js","../../src/ol/functions.js","../../../src/ol/events/Event.js","../../../src/ol/events/Target.js","../../../src/ol/events/EventType.js","../../src/ol/Tile.js","../../src/ol/dom.js","../../src/ol/ImageTile.js","../../src/ol/AssertionError.js","../../src/ol/asserts.js","../../../src/ol/structs/LRUCache.js","../../src/ol/tilecoord.js","../../src/ol/TileCache.js","../../src/ol/math.js","../../../src/ol/geom/GeometryType.js","../../src/ol/sphere.js","../../../src/ol/extent/Corner.js","../../../src/ol/extent/Relationship.js","../../src/ol/extent.js","../../../src/ol/proj/Units.js","../../../src/ol/proj/Projection.js","../../../src/ol/proj/epsg3857.js","../../../src/ol/proj/epsg4326.js","../../../src/ol/proj/projections.js","../../../src/ol/proj/transforms.js","../../src/ol/proj.js","../../src/ol/reproj.js","../../../src/ol/reproj/Triangulation.js","../../../src/ol/reproj/Tile.js","../../src/ol/tileurlfunction.js","../../src/ol/size.js","../../src/ol/ObjectEventType.js","../../src/ol/Observable.js","../../src/ol/Object.js","../../../src/ol/source/State.js","../../../src/ol/source/Source.js","../../../src/ol/tilegrid/common.js","../../src/ol/TileRange.js","../../src/ol/array.js","../../../src/ol/tilegrid/TileGrid.js","../../src/ol/tilegrid.js","../../../src/ol/source/Tile.js","../../../src/ol/source/TileEventType.js","../../../src/ol/source/UrlTile.js","../../../src/ol/source/TileImage.js","../../../src/ol/source/XYZ.js"],"names":["const","let","arguments","super"],"mappings":";;;;;;;AUAA,ADGA,AaHA,ACAA,AHAA,AKAA,AGGA,AMAA,ADAA,AjCHA,AyCGA,ADHA,AOGA,ACHA,AEGA,ADAA,AECA,AnCAA,A6BDA,AHHA,A5BGA,AVHA,ASGA,AwBHA,A1BGA,AOAA,AhBHA,AaGA;AWAA,AaAA,ADAA,AKHA,AXGA;AxBHA,ACIA,AkBDA,ACCA,ACJA,AKKA,ADAA,AQDA,AMAA,AGAA,ADAA,AECA,AnCAA,A6BDA,A/BJA,ADIA,AFAA,AOAA,AXJA;AmBAA,AIGA,ASCA,ADAA,AjCJA,A2BIA,AIJA,AnCAA;AQKA,AkBDA,AOEA,ADAA,AQDA,AMAA,AGAA,ADAA,AjCCA,A6BDA,AhCAA,AFAA,AILA,AZAA,AkBUA,AcPA;ALHA,ASKA,ADAA,A1BLA,AoBKA,AcFA;ArCGA,AkBDA,ACLA,AMOA,ADPA,AQMA,AMAA,AGAA,ADAA,AENA,ANMA,AhCAA,AFAA,AONA,AGWA,AJXA,AkBIA;AIEA,AjCHA,A0BGA,AcFA,eEGe,AXAA,AnCAA;AgCCf,AaDA,AGAA,ADAA,AjCPA,A6BOA,AHCOA,AtCAP,ASDA,AXCE,AiCHF,EjCGE,EwCAW,AtCAP,EFAA,EAAE,CADO,KECC,CMAD,AYAA,ACAA,AiBAA,EpCEb,GsCF2B,GAAG,EAAzBA,CtCEL,UAAA,GAAc;AkBDd,ACAA,AEAFA,AIDAC,A7BCOD,AwCAL,ApCEA,AmCJF,ADPA,ApBMA,AyBEA,AzCCE,AITF,AaGA,AaHA,AcKA,ExBIE,ACAA,AiBAA,AtCAA,EuBAI,AIDF,A7BCS,AkBHP,AyBEA,KpBCG,AEAE,AIDF,A3BCA,EqBAE,AiBAA,AtCAA,CqBDI,AECD,AIDF,A3BDG,CoBEF,AkBAA,AtBHE,AyBEA,CdAfC,CPCe,CqBOb,G3CP0B,GAAG,EwCDhB,CxCCRD,A2COL,GrBRa,MqBQb,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC;AlChBtC,AaUE,ACAA,AEAA,AEVF,AOSA,AOTA,ADUE,AOFF,AGAA,ADAA,AJAA,AlCRA,AOMgC,AyBY9B,AzCRA,AKFK,AcRP,AcAA,AlCOO,EqBGL,ACAA,AEAA,AeAA,AtCAA,MAAM,CuBAC,AeAA,AjCFO,ANDA,CCGN,CuBAC,AeAA,AtCHI,EKCR,CeEO,ACAA,CHAC,CEAC,ACAA,AhBFO,CgBAR,AtBDR,GwBEO,AeDC,AvCDY,UqBCZ;AAGb,ACAA,AHAA,AKAA,AeAA,A1BDF,AIJgC,A0BNhC,ArCSE,AYTF,A2BMA,A7CEE,EqBGA,ACAA,AHAA,AKAA,AeAA,E1BDI,EWCA,CFAC,AHAA,AoBAA,CfAC,CFAC,AHAA,AoBAA,AjCFA,CeEC,ACHK,ALFiB,EIKpB,AGFE,ClBAZ,GaCa,AoBFA,E1BEK,AIJY,EAAA,EIEjB;AAIb,ACAA,AHAA,AKAA,ASFF,AMEE,AOHF,AGAA,ALAA,A/BCkC,ADVlC,AKWE,AHFK,ARCN,ANFC,EqBIA,ACAA,AHAA,AKAA,AeAA,KjBAK,AiBAA,CfAC,CFAC,AiBAA,AzBHO,CQDD,AEIL,CHAC,AJDT,EICW,AFAA,AKHC,ELGC,ALHR,CAAgB,IGErB,CAAY,IHFP,EKCQ,ALDmB,SAA3B,EGEL,AHF2C,EGEZ;AIHlB,ACKb,AHAA,AKAA,AKHFC,AUFe,AQMb,AlCJgC,AyBVlC,AFaE,AnBAEE,AyBQF,A5BXA,A+BHF,A7CC4B,EsBK1B,AHAA,AKAA,AuBCA,AXDA,EPHE,AZGAA,EHHE,CQGC,AoBQE,A5BXF,CUGC,CFAC,CALM,AEKL,AXHwB,C6BWhC,CzBREA,CEAS,AFATA,CYHU,AaWE,CvBRD,A4BCA,AlCJmB,CuBGlB,AtBHd,AdFqC,C6BEtB,AkBIA,AlCJiB,AIG9BA,COJU,AYII,AnBAT,AyBQP,A5BXgB,CeAlBF,GZGIE,EAAM,GEHK,K4BHA,S9BMXA;ARCF,AaAA,AHAA,AKAA,AIAK,AKHP,AaDA,AGAA,ALAA,A/BKE,AVCA,AiCTa,AMgBb,A5BZE,AZAG,AFFH,ESKF,AaAA,AHAA,AKAA,IFAI,CnBEG,CMFD,AaAA,CHAC,ASAO,A1BHA,COGN,AKHA,CKGC,ANCT,CbNQ,CwBKG,CIAN,AdHO,CUGC,AtBHR,CCKL,ADLqB,AFFT,C4BKU,A1BHjB,COHQ,CNQM,ADLK,CiBDX,CnBDL,CAAU,EGOlB,CUDA,CAAY,EWNA,EXMZ,EAAkB,KCJV,CAAmB,SAAnB,CAAN,MdFM,CAAN;ASOF,AaRa,AHOb,AKAA,AIAA,AaDKH,A5BEHA,AVCJ,ASPA,AEEG,AHDI,ATCL,A2CJF,A7CEG,CGFH,CMQE,AUDA,AKAA,AIAA,EaDW,A7BJP,CZFqB,ESQpB,AmBDA,CJAC,AXCE,CJAD,AELO,ATCP,CsBGC,AIAA,EAAR,AfCY,CMDD,APLE,AVEF,CAAC,CiBGC,ANCE,CJRF,CPIN,CAAS,CAAT,EuCEqB,AvCFT,CAAZ,CAAP,CuCE+B,GtBJlB,AsBIRA,G9BHA,CAA+B,EEKT,OFLtB,CEKU,CFLgC,EEKT,QFLjC,EAAsD,GEK5C,GAAiC,MAAM,cAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAApDA;ANFJ,AEGE,AUDA,AKPY,AGIPA,ACGN,AKJD,AaDA,AGAA,ADXA,AnCiBIA,AVEJ,AST4B,AXK1B,AaFD,AHDCA,ATCD,AECMA,AJNL,CwBCFA,CfQE,AUDA,AlBDA,EMDI,AoBDO,AvBCA,EOFL,CVGD,CYEG,CNHC,ANCF,C0BFU,A1BNJ,AGOI,EGKjB,AIPY,CFKD,AkBJS,AvBCC,EKGR,AIAE,GAAG,CMDD,CQHZA,AvBCuB,CGK5B,AYHmB,KZGnB,AHLkC,CGKtB,AHLuB,CKNtB,GFWb,EAAkB,AHLG,KeJR,AfIiC,UAA1B,GAAwC,MAAM,CAAC,MAA/C,GAAwD,ISGL,IAArD,ETHmE,CSInF,KTJ0E,EAAiB,QSG3E,GACE,ATJwD,EAA8B,ESGxF,GACS,eADzBA;ANIF,AEHA,AUDA,ApBDKA,AcIHG,ADVwB,AXM1B,AUJY,AkCHd,A7CEC,ESOC,AUDA,AlBDA,EFAW,AcITA,GJFG,ARFA,EQEE,AIELA,AZJK,CYILA,ADVwB,AXHb,IYaXA,ADVwB,COOb,ANGN,CJZM,AGEa,COOX,ENGbA,EAAM,OAANA,EdJmC,CoBNxB,EpBM2B,IAAnCH;AUGL,AUDA,AUFK,AoBJP,ALZA,AhCoBE,A8BMA,AzCTA,AULiD,EFOjD,AUDA,AlBDA,AULiD,K+Bc1C,AzCTF,E4BDS,A5BCP,CQEC,AEPiD,CCQzD,A8BMA,A/Bd0D,CFOhD,EoBHL,AaUS,GbVQ,CaUtB,E9BNA,COFmB,APEP,CHZC,CUUQ,CRN4B,CAAuB,KCQxE,EAAuB,CDR0B,CAAjDA,GCQA,EAA8B,GAA9B,COVa,CPUsB,WAAnC,EAAgD,gBAAhD,EAAkE,WAAlE,EAA+E;AHA/E,AUDA,AUFA,AjBKEG,A8BMF,AzCrBa,AKSR,AFDL,A8BFK,EzBOL,AUDA,AUFA,EjBKEA,ERPE,EeIE,APGJA,CAAAA,ANNY,A4BHA,CfMN,CVCC,CoBHC,AzBFA,CKKC,AGETA,CAAK,ANNF,CuBCQ,EAAb,AvBDsB,AFDP,CQObA,EAAM,IHdK,ELOT,C8BFC,CAA4B,CtBS/BA,CRP0B,CQOT,KAAjBA,ARPgC,A8BF7B,EtBSqB,AsBTiB,G9BEJ,IAAvC,C8BFK,C9BEwC,C8BFQ,CtBSnDA;ALEF,AEHA,AUXa,AOIRH,AGIN,AIlBD,AaAA,AGaA,AtCAE,ALIA,AFDE,A+BGG,ADLLA,EzBOA,EiBPW,EfDP,AuBCE,C3BUC,EDPA,A6BEO,C1BEN,AiBPS,AtBET,EKKE,AyBPE,CRAQ,CpBGpB,AFDY,COHZ,AwBMK,ADLU,CCKM,CxBNN,GeCVA,ASKA,E1BXQ,A0BWc,C/BHnB,A8BFRA,C9BEsB,CGQtB,A4BLK,EAA2B,QAA3B,EAAqC,+B/BHlC,CAAN;AGUF,AEJA,AsCAA,A5CAF,AmCRO,A3BAH,ALIH,AFDE,A+BGD,AUpBF,AXeEA,EzBOA,AsCAA,ETRW,A3BAT,EFQE,A0BFA,ADLE,EzBOA,ENAR,AQRU,CRQV,AQRW,CuBCG,CaOD,CtCdE,A0BYD,CYEC,ATRS,AJCP,CvBDb,GAAe,AwBMA,ChCEnB,CAAE,E+BPAA,KaRa,A5Cef,AQRI,AwBMF,EAA4B,ChCE5B,SAAA,OAAA,GAAU;AMCV,AwCTF,A9CSE,AmCToC,A3BCnC,AwBMC,ADLFA,EzBOA,E0BFE,EhCEI,A+BPA,CzBOD,ANAE,EMAA,GNAK,AgCFF,ADLE,GCKC,ADLE,CzBRF,A0BaC,CAAD,EAAI,CAAJ,ChCEb,AgCFE,EhCEqB,A+BPvBA;AzBQA,ANAE,AmCVkC,AIiBpC,AxBlBK,AdMLA,A+BGC,ADLDA,EzBOA,ILLM,A8BFA,CQcC,EjCPA,ANAE,AeXK,CoBCsB,C7BU3B,AiCOT,CtCZY,EsCYE,AxBlBT,CoBC+B,ApBDhB,AdML,C8BFC,CIHoB,CnCUlC,AuCOF,CRdmB,CzBTN,ASKR,CfWgB,ACLA,CaCrB,ACP2B,AdML,GDKpB,AeXG,EAA2B,CdMX,A8BFrBA,C9BEAA,CcNK,EAAgC,IDOrC,SAAA,WAAA,CAAY,SAAZ,EAAuB;ARKvB,AeAKA,AIDA,AIAPA,A7BCI,AmCJF,ADHF,ApBGI,AyBYF,ACnBK,AhCEL,AOFA,AFMK,AkBFL,EzBOA,EeAW,AQDP,AKNA,E1BFA,GiBQU,AzBCL,AwCXK,AzBAP,AFMO,CPKN,C6BJR,ArBAS,CRIC,AmBDL,CAAa,AVVP,CmBIG,AnBJF,EDOE,ANLd,CiBQK,AVVE,CPES,AOFA,CMWU,AIDF,AIAL,EWVd,ClCNQ,AeiBgB,AQDP,AMHtB,AKP2B,AzBAP,CoBOR,ApBPS,AFMhB,CQKAA,AQDPA,A7BCI,AaL2B,CAAxB,CENW,CoBOhB,ApBPyB,AFMO,CAA3B,CsBCa,CrBAT,A0BPJ,A3BM8B,CAA9B,CsBCL,ArBAE,A0BPmC,AzBArB,CFMsB,CsBCf,ArBAS,ACPA,GAAhB,CyBAX,AzBAE,EyBAsC,AzBAP,EoBOtC,CpBPO,CoBO0B,ApBPjC,EFMK,EAAgD,M2BNhD,EAAwD;AlCY7D,AkBJKA,ACGL,AzBCG,ASED,A0BNAG,ADJgC,ApBI9BH,A0BPJC,AhCEE,ATKG,AgBPN,AdKC,A2BCK,AIEL,AnBFA,EPKA,A0BHA,ERDW,AWATE,A3BLA,EFSE,AkCXA,A3BMA,CZDCF,CKMC,CmBDC,AhBGA,A0BNLE,AKPFF,AzCOc,A6BDA,CJCG,AWAfE,ArBAQ,ANLF,AwBMA,CQRC,AhCEA,APGA,A+BGA,C/BHC,A+BGF,CRDY,AQCpB,C1Bfa,AkBcQ,ACGT,AUHVA,ArBAY,A0BPdF,ChBOsB,ACGT,AUHN,AlCFM,CFER,AEFAA,A+BGS,ClBDG,ANLf,ATKoB,CyBAF,AzBAf,AEFW,CwBKJ,AUHVE,AtBDe,CWCU,ACGpB,AjBRW,ATKO,AEFP,A+BGA,CRDU,AfM1B,A0BNM,AHCW,ClBDG,AkBCJ,CRDE,AvBFC,A+BGP,CPEQ,AhBGA,AIPA,CWCU,AWA9BA,CHCsB,ERDJ,ACGpB,EDHqC,AVApB,ANLf,AwBM0B,ERDR,AVAhBH,AbF0B,CuBEzBA,AvBF0B,A+BG/B,AnBFA,CeAK,CnBOH,AmBPsC,AfAP,IZDjC,EAAuC,CAAC,GAAG,A2BCtC,E3BDL,A2BCoD,E3BDL,EAAE,CAAjD,EAAoD,G2BC/C,EACL,YADK,EACS,gBADT,EAC2B;AtBKhC,AmBDD,AqB1BD,ALiBAA,AzCUA,AkCToC,ApBK9BA,A0BPJA,AhCEC,ATKD,AEFEA,A2BGFA,AIAA,AnBFE,CbAJ,CMKE,A0BHA,ESPI,A5BKF,E2BNI,AZQA,E3BHE,CFED,CmCL2B,ApBKxB,AkBCF,C1BGC,A0BHA,CAAD,C1BGG,APJA,AiCCX,ClBDc,AbFA,EwCJE,ADDA,ARQF,ClBDG,AbFAE,AYCF,CeEG,AfFF,C4BLG,ADDA,AzCOF,AcDF,C4BLK,A1CMF,AiCCA,AnBFhB,C4BLiB,APCe,ApBKb,AcCA,AIAF,ClBDG,AkBCJ,CSPK,APCW,AFMpB,AnBFO,CPdR,AmCSM,A1CMG,AcDpB,CdCe,C0CNS,A1CM1B,AiCCwB,CSPL,CAArBF,AxCI4B,CAAC,CAAD,A+BGE,ClBDX,AbFfA,CaE8B,CAAf,A0BPgB,ARQjC,ElBDmC,E0BPE,KZQN,CdDd,EAAbA,ScCiB,EAAwB,MYR7CA,IZQqB,EAAoC,UAApC,CAArBA,CAFgC;AxBShC,AEHA,AeDF,AENOA,AbSH,AVDJ,AkCVE,AMFAC,AzCOD,AiCCC,AnBFE,EPKF,EiBPW,AVET,E2BNE,CpCcG,EMDA,A8BbA,ARQA,E5BMP,AEHS,A4BTT,CMFU,ClCWC,AiBPS,AbSlB,A8BbFA,CpCcc,CiBJD,CAAC,AENS,AbST,CsBLd,AnBFe,CTQf,ASRgB,CAAD,CUFY,AbSzB,AGPA,CQIiB,AENS,AWF5B,CbQoB,CENG,AVEF,CPfR,A4BWC,ArBIZ,EUF+B,GFMpB,CAAf,EENOD,CFM0B,IAAI,IAAI,CAAC,EAAT,GAAc,OAAd,GAAwB,GAAzD;AjBME,AEJA,AeDF,AuBCE,AVREG,ApBGE,AyBYJ,AClBAF,AhCCA,APGE,A2BKFA,AIDD,AnBFG,EPKF,AsCAA,EVREE,ArBGA,E2BNE,AZSA,CWSG,CtCdD,EKOE,AQLA,A0BNA,CDkBR,CjCPU,CkCXC,C1BMC,AyBYE,AtCdF,CoBMC,AuBCA,AVRXA,CbOY,AaPZA,CUQa,A/BLA,CCAC,AyBYhB,A1BZgB,CZFC,AYEF,CqBHbA,ArBGA,CQIiB,AaPZ,AMHY,ClCVN,AeoBO,AmBVA,AZSA,CfHC,CAAnB,CqBHAA,ANMqB,CPCV,CAAf,APJU,C0BNRF,AvCIM,EoBMsB,CPJC,CbFC,IoBMhC,EpBNsC,EaEE,CAAC,EbFE,EaEH,CAAT,CAAgB,AbF3C,EAA6C,MaElB,AcGa,CdHY,IAAI,CAAC,IcGpC,EAA+B,GdHzB,CAAzB,EAAmE,UcGhD,EAAiD,YAAjD,CAAvBA;AtBGA,AeDF,AuBtBe,AhCoBf,AEFQ,AyBaR,ACnBEA,AhCAA,ALMK,AFFD,A2BMJD,AfJE,C0BjBJ,CjCsBE,EMHI,E4BRA,AZUE,GtBCC,AHLO,EGKL,AkCXA,AvCIAA,AYEA,CDEG,CTFP,CqCNO,CnBUC,ApBNE,CoBMD,AlBJO,CAAE,CFFnB,CuCJJC,ClCXa,CeqBM,CAAC,ApBNE,EYEpB,CeIuB,GPAZ,ApBNT,A2BMwB,CPA9B,CpBNgC,EoBMA,CAAhC,KOAwC,CAAC,gBAAX,EAA5BD;AtBEA,AeDF,ATHkC,AED3B,AyBcP,A/BrBkD,APK1C,AYEL,A6BTI,EpCcL,COVA,CLFgD,GMK5C,EDEG,A6BTO,ClCEwC,CAAC,CFY7C,ALPA,CaEC,CRKC,CeDC,CAAC,EpBNE,CAAC,EoBME,AbX6B,CaW5B,AbX8C,GkCF7D,CpCTQ,AEWmC,AkCFjB,ErBalB,CAAf,GAAgC,CpBNpB,CAAsB,EyCP3B,CzCOK,CAAJ,AyCPqC,CrBaN,CpBNC,GoBMxC;AfEE,AoBHK,AdF2B,AEA1B,A0BNN,AhCFA,APMQ,A2BKR,AfHE,A6BTFC,AXOE,EzBOF,IsBFI,AcZA,GhBWU,AcRP,C5BMyB,AXFxB,CYEC,CaEJ,AcRK,A3BMA,CaEQ,AZFP,ADAF,C6BTG,AXOD,CzBOE,AeAA,AmBXA,A3BMA,CCAP,AbFQ,AYEL,CPKM,ALPA,AyCPA,C7BSC,CaEX,AZFY,A0BNjB,A3BMS,CZFK,AYEZ,CaEwB,AdFM,A4BNb,AvCIX,EWEwB,AmBF9B,C9BAoB,C2BKC,AGLD,CjBEhB,C4BTmB,CAAC,EzCOE,A2BKA,C3BLC,CKjBhB,AoBqBR,EAAkC,AzBJX,CAApB,A8BAN,EAAgC,EHKlC,EAAuC,IFDlC,CgBXU,ChBWqC,AKJlD,CWPFA,CXO8C;AzBQ9C,AkBJKD,AECLA,AdEA,AFGE,AyBNA,ArBDG,ANRN,APMQ,A0B6BT,ACxBI,AfHD,AkBFG,EzBOJ,EkBJW,AIET,EFDI,EpBGA,CIEC,AyBNA,C7BIC,AyBPA,CnBMR,AmBNS,CIGP,CzBMA,EyBNW,CTCG,AhBKF,EJ3BD,A6BqBX,CXAwB,AECP,AdEnB,CAAY,AgBDM,AGLd,EPGyB,AOHT,EHKE,CFDG,CFDQ,AECP,CFDQ,EAAL,GAAU,AdMrC,CgBLiB,AhBfD,EgBelBA,EdEA,CYH6B,CZGE,EYHiB,EIE9C,CJFGA;AlBKL,ADLF,AqBEEA,AdGEG,AZDJ,ASGI,AKPC,AbFE,A2BKJ,AfHF,A6BVC,AXQM,EzBON,EDLI,AOKFA,EcHI,AgBZF,CAAC,EjCiBE,CJPG,ALIZ,CAAA,CMCY,CGER,CHFU,CMAVA,A8BfF,AXQa,CnBOXA,AHEY,CiCjBC,EjCiBb,CGFAA,AZDJ,C0BFuB,AdGd,AZDP,G0BFwB,AKJlB,CnBOJA,CN1BW,SoBuBsB,CAAC,A1BEtC,GAAE,I0BFwB,EAAxBH,G1BEA,eAAA,GAAkB,CAAE,CAAtB;AIKE,AEHA,ADN6B,AkBDxBA,AEMA,AKRP,ADSAA,AnBGI,AwBXA,AMHA,AvCIC,A0B4BL,AepCI,AXQG,EzBOL,EiBPW,AOFP,ADSA,AWXF,AEJA,GtCkBK,AoCdF,ATED,ENQU,AfIP,AwBXA,CXCU,AiBJT,ClCWC,CmBDJ,AiBdK,CtCkBV,AEHW,AiBPS,AEMF,AeVP,ATIA,CRCX,AOHc,CPGb,AmBTY,CtCkBG,AMAd,CeJG,AeVU,CNGb,CTOsB,AfIP,CNAjB,C8BXmB,AMHA,CXWG,AKRpB,E5BnBW,AiBoBO,AiBJE,CXWG,CNNb,AbSV,CaTW,AiBLE,EfUV,AICPA,EJDsC,AeVP,CAAlB,CAAT,CEJ8B,CAAC,CnBQb,EAEpB,OmBVgC,CAA9B,CnBQkB,EAET,SAFS,CAAfA;AnBWP,AEHE,ADP6B,AoBM7B,ACHA,AIN2B,AUDzB,AvCID,A2BIDA,AcZE,AXQI,C3BfR,CEsBE,AmBDA,EeVE,AEJA,EhBWE,AECE,CHED,AeVA,CfUC,ACHA,EpBIE,ADPqB,AmCJrB,CAAC,ClCWC,AmBDL,CAAL,CiBdY,C1CeC,A0CfA,AXQA,CNMC,ECHE,ErBHa,CmCJV,ClCjBN,ADqBgB,AqBGT,AcPA,CTIC,CAAC,CHIG,CHEzB,EGF4B,EYRA,CAAC,ATIhB,CLGT,AKH0B,CLG9B,AgBXE,CFI0B,AEJI,ChBWC,AcPd,EAAgB,CZQG,AGJzB,CHI0B,CGJD,EWRpC,CFIiB,CAAjB,KTI6C,CAAC,CAAD,CAAT,CAAa,EHIvB,EAA5BA,IGJsC,EAAzB,EACJ,OADI,CACI,MADJ,EACY,SAAS,CAAC,CAAD,CAAT,CAAa,QAAb,EADZ,EAEJ,OAFI,CAEI,MAFJ,EAEY,YAAW;A3BUtC,AEJE,ADPA,AoBMD,ACHG,AIPyB,ASkB7B,AxCXO,A4BwBP,AKvBO,AUZJ,AXUSA,EzBKV,EoBJE,GpBIG,EAAE,AiCOT,AxCXgB,AiCCA,CFRa,ASkB7B,ClCdE,GqBGY,AIPe,ACMX,CLCH,AKDI,CDNU,AEQtB,C3BJL,ANGK,AiCCiB,CjCDC,AgCDH,CQYtB,AxCXO,AgCDgB,C1BFP,AkCcd,CxCX0B,AiCCrB,EAAuB,ENDhB,CAAV,EaWJ,ARZgC,CLCH,AKDI,CAAD,CLC5B,AaWF,ARZoB,GAAgB,CAA1BA,KQYV,QAAA,CAAS,SAAT,EAAoB;AjCpCP,ADwBXG,AqBED,AIOD,ASIA,AClBE,AzCOF,AgBPKH,AdGL,A2BIA,AICA,AfJKA,AcEK,I1BDRG,AULS,AEIA,EWGP,EYPE,AzBAS,CwBkBN,AxCXF,AEJA,A+BKA,EFMP,AUdS,AzBAU,EhBOR,AiCCA,C3BHTA,AkCaY,AClBF,AzCOL,AiCCK,C3BHVA,AJFF,A+BKW,CAAJ,CQRL,AzCOa,AgCDE,ChCCV,AkBHkB,AcEP,C1BDhBA,AmCLe,ARQA,ADFE,C1BDZ,A2BGA,CFMP,A/BPmB,AkBHS,CaW1B,Cff4B,CVK5BA,AkCaO,APVa,COUG,AxCXF,A6BAA,C7BAJ,CgCDF,CCES,CjCDC,AiCCA,ADFjB,ChCCS,A6BAS,AICF,AfJrBH,CeIiB,CFMtB,C/BP+B,C+BS7B,ASEgC,AxCXlC,AiCCgC,COUG,APVnC,COUkC,CAAzB,EAA8B,AXXvC,EAAuC,OEOvC,ASIgD,CAAC,CTD/C,ASC8C,CAAvC,CAAT,QTJA,EAIE,cAJF,EAKE,SALF,EAME,gBANF,EAOE,UAPF,EAQE,MARF,EASE,eATF,EAUE,kBAVF,EAWE,eAXF,EAYE;AACAG,AlBfA,A2BOJ,ACnBmB,AzCQlB,AGFM,ADFN,A0B2BD,ACvBI,AICH,AUbC,AXWS,CQUX,AtC9BOH,G6BwCHG,AFnBA,IEmBAA,CAAAA,AlBfK,AVNO,AwCVP,AXMM,EAMJ,EDmBPA,CAAK,GY/BP,CZ+BEA,ACzBW,CAMI,CDmBT,AFnBU,C1BFb,CUMH,AVNyB,E0BEL,ChBIC,IkBerBA,ACzBW,EDyBM,ACnBU,E7BFxB,EAAmC,OUMA,CgBJtC,AGAsC,InBIK,GkBehB,IAA3BA,ElBfqB,GAAkC,iBAAlC,GAAsD,IAA3E;AcJF,AjBOE,A8BMJ,ACpBM,AtCMJH,A0BEC,AcZF,AXYWA,ELDV,CEbgC,GYM5B,AtCME,GOQC,A+BdA,GdOG,AcPA,CdOC,CKCK,CtBMd,A+BdW,ATQI,CrBGhB,CAAA,CDGe,A+BdA,ATQI,CSRhB,AtCMe,GOQC,APRE,CwBCZ,CAAV,CAAuB,EhBItB,ADGe,AsBNa,CAAC,CtBM5B,AsBN2B,CAAnBA,E7BFqB,GAAT,EAAc,GwBCpC,ChBIC,GgBJyC,WAA1C;AACD,ASCG,AKPC,AtCKDA,AaLFC,AY6BF,AItBYD,KSVR,CzBGE,EbKI,CiCED,CpBPPC,CyBAS,GTOO,E7BFA,CiCEd,EjCFiB,A6BEE,CIAH,ErBFlB,AiBEwB,MIAtB,EjCF4B,A6BEE,C7BFD,A6BEE,Q7BF/BD,IYAF,IiBEwB,CAA0B,CAA1B,CAAdA,EjBFV,kBAAA,GAAqB;ASGhBA,AMKP,ApBAI,AKPA,A0BNO,AtCMPA,A6BEQ,CrB5BsB,CAAL,Ea4BhB,AMKP,GnBjC4B,CAAlC,ADiCQ,AKPA,AZAE,KYAG,CZAG,EqBES,CMKN,A3BPA,EqBES,AdKT,CcLU,AMc3B,CNd4B,ATFtB,GSEoB,AdKJ,EcLW,CAAC,CdKhC,AKPwB,AZAE,CqBEF,AMc1B,AfhBE,AZA2B,COOD,CcLU,ATFT,AiBEZ,GRAS,CrBFT,CqBE0B,AQAjC,ERAgB,AQAF,CRAnBA,ArBFkC,C6BE7B,EFcV,AEjBwC,CFiB5B,AEdgB,O7BFsB,CAAC,E2BgBnD,EAAwB,E3BhBtBA,Q2BgBF,EAAoC,YAApC,EAAkD,eAAlD,EAAmE,cAAnE,EAAmF;AzBPrF,AyBSE,ApBVI,AKPA,A0BNA,AhCDC,AOCL,AY6BF,AdtBO,KTOP,CAAA,AoCdM,AzBAA,GPDU,AKQA,C2BPN,C/BaC,E+BbE,EpCcb,CAAE,AoCdI,AzBAU,CNaV,CAAY,AINX,CLRA,AKQmB,CLRC,AOCzB,AFOK,EEPe,AFOO,CAAtB,EAAyB,CAAzB,CLRA,CKQ4B,CJM7B,ADd8B,CJepC,EKDgC,CLC9B,SAAA,CKDI,aLCJ,GAAiB;AACjB,ACRE,AIOC,AKPA,A0BNC,AhCDJC,ANME,AkBlCJ,APoCE,AkBAUD,AlCHL,M2CJD,AhCDA,CJeG,CFTD,CGCC,AQCA,AhBHO,CgBGN,C2BPC,AhCDA,EKQE,C2BPC,AhCDA,AuBQI,CrBIH,A8BXA,ATOI,ClBAV,ChBHF,C2CJD,ATOgB,AlCHG,CKCN,AWEA,CXFC,AWEX,CLRY,CAAC,CKQC,AkBAI,CAAC,C3BO1B,ACRE,CQCK,ChBHF,COUuB,ACRF,AHDxB,CWEyB,AhBHO,CQEhC,AHD0B,AWE5B,ETOA,CIfAC,AuBQoB,KAAoB,ClCHnC,EAAyC,MkCGG,CAAC,CAAD,CAAvCD;A3BQZ,AoBPA,AMoBI,AlBfA,A4BZC,AhCDHA,ANMI,AaLF,AY4BJ,ACnBEA,AfFD,AkBAW,AlCHV,COQF,CPRE,E2BGI,ATPF,EPDI,ANMF,A0BIE,EbTA,Ce2BC,AlBfA,EJbI,AOCF,AlBIA,CAAC,EWLI,CIaZ,AGZW,CAAC,CgBOG,CnBKD,AgBHE,AGFA,CnBKhB,AVPe,A6BEE,C7BFD,AaLhB,Ce2BA,AFlBmB,A/BLrB,C2BGsB,EMoBA,AjCvBA,GkCGL,EAAP,CvBRoB,AXKF,CWLG,ANMd,A0BIc,A/BLF,CKCzB,A0BI4B,K/BLV,CWLQ,AXKM,CiCuBC,AtB5BrCA,EoBUqB,EAArBA,CEkB0C,IjCvBI,CAAC,IiCuBzB,GAAgC,EjCvBhC,CAAtB,YiCuBsB,GAAkD,KAAtE;A1BXJ,AoBT2C,AqBJ3C,A/BGIA,AyBaJ,AClBG,AhCDD,ANMG,AkBnCL,AL8BG,AgBOQ,AlCHT,EWLA,AXKA,CkBPA,C8BKI,GrCHC,CMMG,CyBaV,AxBlBS,AgBLM,CQuBf,ARvBQ,CcOK,A/BGA,ANNF,AXKA,CAAC,CsCCT,CAAA,ArBAa,KAAK,AyBarB,A/BnBmB,C+BmBjB,A/BnBkB,CXKlB,CAAoB,CqCHpB,CCIC,C3BNsB,CAAC,KMMV,EoBJd,ApBIEA,AjBDF,GWLiB,AXKiB,C0CcpC,CJbG,A3BNmC,E+BmBpC,A/BnBiB,CAAR,C0BET,E1BF0C,CXK1C,IqCHA,AKiBA,GLjBU,A1BFwC,CAAC,KAAK,CAAC,O+BmBzD,CAAkB,G/BnBgC,EAAoB,EAApB,CAAlD,C+BmBA,EAA6B;AfZY,AKkBzC,AgBtB8B,AXA5B,ApBIAA,AyBaF,A/BlBA,APGK,A0BwBP,ACnBE,AGDK,AlCHN,MqCHK,ANOA,CCeG,ADfF,CdHG,CyBaC,A/BlBF,APGO,CuBE2B,CUJhC,GKiBK,A/BlBd,APGK,CAAe,EaEH,CekBjB,AULS,CXVL,CJHqC,AUJvC,ApBIkB,CekBC,A5BpBhB,CuBEoC,AeanB,CtCfM,A2BKP,QCerB,AUL+B,CAAC,IAAvB,IAA+B,IzBbZ,GAAR,CAAlBA,CyBa+C,CAAC,IAAV,CXVA,GWUkB,KAAK,IAAtD,AXVY,EAAiC,EWWnD,KAAO,IAAP,CXXkB,CAArB,EWWkB,AXXmD,SWW1C,CAAC,IADnB,IAC2B,SAAS,CAAC,IAAV,IAAkB,KAAK,IAD3D;AfPA,AKcA,AcvBF,AEDgC,AXC5B,ApBIAA,AyBcJ,A/BnBC,ATQM,AGJH,AkBnCJ,AL+BI,AdGF,A2BKEA,AGDC,CI7BiC,AIsCtC,CJtCiC,EQuB3B,A5BDF,GdGGA,CaEG,ACLF,AaQE,CMPD,ApBIE,AfGK,C8CRgB,CrBU9B,AtBNS,AaJA,AdGE,CaEC,E6BJE,C5COT,CoC9B+B,ApC8Bf,CoC9BhB,ApC8BA,EAAmB,AGJP,ADDjB,C4CH8B,A3CIZ,CYCG,ACLH,C8BAY,AXC5B,ApBIoB,ACLb,CmBCY,ApBIA,AbFE,CaErBA,AZDO,AaJY,CbIE,C0BIG,GJE1B,AvBPA,A2BK6B,CJEjB,CtBNH,ADDsB,ECCA,CsBM/B,EAAkB,AtBNT,CAAP,KgCH6B,MAA7B,OVSF,EAAuC,EIFS,UAAnB,EAA+B,gBAA/B,EAAiD,YAAjD,IACvB,gBADJA;AJGAG,AmBV2B,AEG7B,A/BEE,AyBeJ,AxCZE,AGJC,AaJGH,AdGF,A0BuBJ,AKjBO,AUbA,AXfL,G7BgBAA,CsBaEG,KVLK,AfGA,AiCCO,AUbA,C3CYd,AgBRU,C8BGV,A9BHW,AdGF,GuBOPA,AQDG,AUbA,ClBcHA,AQDkB,AUbA,C5BSlB,CAAa,AbFA,C4CAf,A5CAgB,CuBOdA,AqBPU,AbMP,CRCE,CQDmB,EUbrB,ClBcHA,CkBd4B,ClBctB,AqBPR,A5CAe,A+BMV,ClBJmB,AbFtB,C4CAmB,AbMY,GlBJlB,EAAe,C4BTzB,EVaA,AUboC,EVaE,QUbtC,EAAgD;ArCWnD,AkBCJ,ACGM,AmBXyB,AEK3BA,A/BCE,A0BNJ,AzCSD,AgBTY,AdIV,A2BKC,AICF,AUbAH,AXWD,IRAK,AsBHFG,ErBME,AQDA,AUbE,CAAC,CdYD,CvBFC,AmCPA,ChBWC,AmBXqB,A7BMrB,A4BTE,ElBcA,EqBNRA,A/BCU,A0BNA,ARUA,CaLVA,A/BCW,CUIL,AmBVqB,AfSf,CYTC,AZSA,CeTc,CEK3BA,AbKe,AUbE,CGQZ,ALLK,AEHQ,CrCUlB,AqCViB,CnBWG,AmBXtBH,CFGqB,CnCOC,AwCFpBG,A/BCM,A0BNc,C1BMC,CTCrB,AwCFM,A/BCA,C0BNR,CRUA,EAA4B,ElBJE,CAA1B,EAA6B,AcGnB,CAAR,IAAgC,kBAAkB,GAAG,CAAzD,EAA4D;ALDrB,ACIrC,AMiBF,AazBF,AEEI,AjCQF,AHAA,AKPI,A0BNP,AtCIC,AaLmC,AdKpC,A2BKK,AICF,AfLG,AyBRLH,ExCOA,E8BME,ERCE,AqBNA,A9BN+B,AaU/B,AcZE,GZ+BC,AlBfA,AHAA,AQRO,CFNoB,CSYzB,AmBRT,A5BJyC,CiBW/B,AUbE,ClBcD,AVLA,AZFA,CAAC,AaLsB,CAAW,AiBWhC,AUbE,C3BEmB,AiBWpB,CpBGZ,AGdEA,AiBWS,CaLG,C/BCV,AkBIW,CFkBf,AevBgB,AjCQA,AEPA,AkBIL,AfLR,C0BFL,AXOE,AfLwB,C0BFd,A/BUV,AgBJkB,CEmBC,AbvBhB,AyBRkB,CAAC,CzBQM,CWIN,CiBJC,ApCQvB,APTF,AeCK,COMY,AqBNS,CFF1B,A1BEkC,CRQN,APTA,CyCDP,EbyBnB,CrBfA,CeJM,IPJH,C4BDG,C5BCsC,CyBR/B,C5BSU,AZFzB,AwCP2C,CdYvC,GdHyB,CAAC,I4BTf,CAAfA,I5BSkB,CAAZ;AVSR,AmBR2C,ACKrC,AaDN,AMNIG,AECE,A/BCE,AZFN,AkB3CF,ALsCM,AaUD,AICF,AfLDH,AyBRAA,ILaI,AMNFG,CvCUJ,CAAA,AoBHM,AqBNA,A5BAE,AyBRA,E5BSA,CZFC,CqBEkC,AcI/B,AMNRA,CAAAA,CnBOQ,AVLA,AGDE,CHCD,ACPA,CSYC,ATZA,CXed,AuCVIA,AECW,A9BNA,AEME,CbSf,AuCVO,CECQ,C9BNC,EQOyB,ACEjC,AmBJNA,A7BEI,ESAmC,AoBFjC,AzCAR,AaLoB,A2BFE,C3BEX,C8BMW,CAAC,A5BAE,AyBRA,E3BEA,CAArB,CEMyB,EbS/B,GAAE,AyCXQ,SzCWR,AaTAH,EyBR6C,CAAC,UAAD,CAA7CA,CtCiBA,GAAkB;AAClB,AmBJA,ACCI,AEHC,AGgBL,AQf6B,AMLzB,AECA,A/BCC,AZFN,AaLI,AaUF,AXJDA,AJGK,KEZH,CSeE,AmBPA,AECA,A5BAE,CbSC,AyBUA,EHhBO,AbAA,CIHJ,CMKV,CsBLU,C5BAG,C4BAD,CnBGP,AbAA,CaAgB,AbAA,EgBgBrB,AcpBgB,EAAE,CnBOC,AKaE,AgBnBF,CnBGd,AmBHe,CrBMC,CEHQ,CtBM7B,ASNK,E8BJoB,A9BIO,CTMJ,AuCVF,AEFlB,CtBQR,CAAY,CMcZ,CzBVA,EmBJA,ANLuB,CSGlB,CHEa,ANLO,CSGiB,ATHhB,CAAD,CAAZ,C0BFL,A1BERA,EOEQ;ApBQP,AkBFH,ACFIG,ACCE,AEHJH,AGiBA,AQjB6B,AMJzB,AECA,A/BCD,ACPF,AiBUD,AfJAA,AJGA,A6BZA,CtCgBF,C4BHE,EVGI,ACFFG,CTTA,CUUE,AEHE,AiBJF,AECA,A5BAE,AyBTF,C5BUC,A4BVA,E7BYE,CwBAsB,ALCrB,AfJE,CHJR,AkBQO,CREC,AQFF,CAAR,AfJa,CKOC,ACFZA,ACCU,CDDVA,CGFc,AmBHF,AbIC,CVQf,CEXQ,AqBDQ,AhCGA,CUEdA,AGFiB,AbAF,CUEV,AcFsB,ALCV,CAAC,CKDS,ALCV,CAAJ,CTCbA,CGFuB,AmBHF,CvBYvB,ACPQ,AGFkB,AmBHF,AbIC,EnBDC,C8BJC,A9BIA,CAAD,C8BJG,AXKd,AnBDC,EaAG,AbAY,CmBCE,AfJV,CSGvBH,CJSA,AuBhBQ,A5BIiB,CKYb,AURE,AfJY,C0BDU,A1BCX,C0BDY,A1BCxB,AyBTW,CVagB,AfJxCA,CeIA,CnBDwC,CAAC,CSSzC,ATTwC,CAAxB,CSSK,CTTwB,Q6BZxC,C7BYiD,CAAC,A6BZb,C7BYY,CAAtC,CAAhB,E8BNQ,CDNH,CAAL,EAAmD;ApBsBnD,ACPI,ACCA,AEHJA,AWGA,AMPI,AECA,A/BCH,AahDH,ACmDE,AIAA,AfJAA,AJGD,A6BZGA,A7CQJC,EmCKE,EnCLE,E0BME,ACCA,AEHE,AiBJF,AECA,A5BAE,EyBTE,CdaD,CLCC,ASDA,CKER,AQNS,AbIA,CTCC,ASDF,CaJG,AbIX,EnCLa,C0BKL,AoBLM,AXKC,CKEf,ApBNiB,CoBML,AMPI,ADRE,A7CQF,C2BOC,A3BPnBA,CgDCoB,AbIC,AfJC,COMD,AEHE,AmBHF,AbIC,AfJC,AyBTA,CVaF,CAAJ,CNDS,CWGxB,AMPuB,AfKvB,AXJyB,C0BDD,AEJhB,AbSiB,CKEJ,CpBNO,GeIb,CfJK,EeIa,CNDE,CFH3B,AEG4B,AiBP5B,A1BI4B,CeItB,AfJdD,GeIwC,CAAxC,ENDwB,AgBZM,EhBY9BA,cgBZqB,CAAnBA;ArCYA,AkBGE,ACCA,AEHJA,AGgBA,AQZEG,AMRE,AECA,ANcN,AxBrBE,AaWD,AIAC,AfJAH,AyBTEA,ILgBAG,EdFE,ACCA,AEHE,AGgBA,AcpBF,AECA,A5BAE,EyBTE,CrCWD,AkCYT,AxBrBS,AiBWA,COUT,ChBTW,AoBNA,EpBME,AoBNA,A5BNX,CsBcEA,AQPU,CnBGG,AWIbA,CQPY,CrBMC,AQFf,AfJiB,CSGC,AgBZA,CrCWhB,AmBIe,AaCfA,AEOJ,CFPS,AMRW,AJelB,AtBdoB,C0BDD,ADRE,CrCWD,CwBiBG,AgBnBF,CxCEnB,AgCKAA,AQPoB,CHTG,Cb4BC,AcxBlB,ADJkB,EnBcT,AGFW,AGgB5B,CHhB6B,CaW/B,AGvBuB,CAAU,CGGvB,AHHwB,CHuBhC,ChBXQ,KGAoB,CAAV,CAAuB,ATHX,CsBc9B,CtBdgC,CAAC,CAAD,CAAF,EyBTkB,CzBSV,AyBTW,CAAD,CzBSR,AyBTR,CHuBhC,AtBdyC,CsBc9B,AtBd6B,CsBcxC,AtBdoB,AyBTkC,EhBYpC,AaWJ,CbXdH,AaWA,CtBd+C,CsBc9B,AtBdjBA,CyBT4D,CAAC,CAAD,CAA7B,IAAoC,UAA9C,CAAnBA;AnBeE,ACPI,AEKR,AIoBE,ADJF,AcpBI,AECA,AjCQF,AHAA,A8BMF,AxBrBD,AiBWA,AfJCA,AyBTE,C3BbiB,EAAdA,C2BaH,ClBOAG,CDOE,AMcI,AcpBJ,AECA,A5BAE,CAAC,ESGA,AIoBA,AlBfA,AHAA,A8BME,CtBdC,AyBTF,CCQC,ADRA,CnBcC,AmBdF,CCQG,ADRT,CnBcU,AgBSE,AtBdA,CAAC,CauBb,AlBfA,C8BjBa,Cb4BK,AULX,AtBdC,CSGO,AIoBA,AlBfA,AKRE,CMEX,AGCU,AiBJA,AECA,ChBmBK,AcpBJ,CECC,ANcE,C3BNpB,A2BMO,ETSP,CrBfA,C8BMyB,AGvBF,CHuBG,CMdD,ApCQA,CiBLV,AmBHW,A5BAlB,AyBTkB,ChBYrB,CAAuB,AaWE,EtBdE,GsBcG,CtBdC,CAAC,CyBTrC,CHuBO,CtBdyB,CAAS,C4BPnC,ChB0B4B,ApBXlC,A8BM2C,EbXtC,CAAP,EGgByC,AULS,IAAL,AtBdX,CAAxB,GsBcgD,AtBbtD,CsBaK,EVKc,CZlBf,CYkB8C,AULS,AtBbtD,CsBauD,EtBb5D,CAAS,CYkB8C,AULS,KAAK,IAAzE,CtBbI,CYkBmB,CAAvB,EZlB4B,IAAI,CAAC,GAAL,CAAS,WAAT,CAAxB,GACA,IAAI,CAAC,GAAL,CAAS,IAAT,CADA,GACiB,IAAI,CAAC,GAAL,CAAS,IAAT,CAFrBH;AMMI,AMeJ,Ac3BQ,AEOJ,ANcN,A/BlBO,ASML,AyBXE,AXYG,CjB/CyB,AyBwDhC,CzBxDwB,G6BqCpBG,CpBYE,AsBLA,GrCJU,ASMP,AcCO,EcHL,AHTA,CnBcC,CsBLC,A5BEA,CMGC,IAJJ,CT7CsB,AG8CvB,AyBXU,CGSC,A/B5CpB,ANwCO,AkCLa,CGSC,ArCJO,CSMN,CiBNpB,GWJQ,A5BUgB,CAAC,CTNpB,AuBOA,CAA6B,CvBPC,ESMf,CAAW,IiBN/B,AjBMmC,CAAC,AcC/B,EAAwC,EdDd,CAAU,CAAV,AyBXtB,CzBWW,AyBXuB,CRK3C,CjBM6C,CcCxC,EAAkD,CdDN,AyBXxC,CzBWyC,CyBXC,CAA1C,CAAP,CzBW2C,CiBN7C,AjBMuD,GiBNzC,CjBM6C,CAAd,CAAzB,CAApB;AKWA,ACPI,AGHJ,AmBFI,AXJF,AKmBJ,A/BnBEF,ASMD,AyBXE,AXYDD,GWjBA,GnBmBI,AGHA,AmBFA,ArCJA,AuBOE,CTSC,EoBrBA,AXYE,EGPA,CZgBT,AdhBU,AuBOE,GTSG,AdhBF,CqCIC,AXJA,CXSC,CsBLC,CtBKC,EQFI,CTSC,AdhBF,AuBOE,CTSC,AdhBF,CkBMT,CmBFW,AXJrB,CWIsB,CvBYxB,CSTAA,GRHQ,GGEc,CAAC,AlBNvBC,CqCLQ,SnBWc,CAAlB,CAAJ,EAAqC;AtBUhC,AkBEL,ACRI,AGHF,AmBFE,AJAN,AjCJED,APGK,AyCRH,AXYFA,IUHI,ElBKA,AsBLA,ArCJE,AuBOA,G3BQQ,AyCXP,A5CDO,EyBGL,AmBFA,ArCJE,AkCLF,CDSG,EjCJE,CiCQd,A3BJa,G+BAG,A5CDX,C4CCY,A5CDO,CyCRtB,ChBWiB,CAAC,AmBZZ,Adac,E3BQjB,AmBNiB,AkBDtB,CrCO8B,AHZzB,A8BIoB,CRED,CtBNQ,CGY3B,C2BRwB,C3BQM,AIfL,CAAC,CkBMZ,AeEnB,CfFE,AeEU,CVDa,CAAU,CREF,EfTH,AuBOL,CvBPzBA,AuBOAA,CUCA,EAAqB,IlBCG,EAAqB,KAArB,EAA4B;AnBOpD,AmBNM,AGHL,AmBFG,AJKJ,ADVK,AhCCL,ATQK,AELLA,AyCRC,EtCoBD,AIfA,GJeG,CAAC,AyCXA,A5CDE,EOHA,CgCDQ,AzCSA,GSRJ,APGE,GsBMC,AtBNE,EAAfA,CFKK,CAAmB,CSRN,ATQb,CKOL,AIfmB,CTQQ,GwBCJ,CfTC,CAAC,CeSC,CsBLC,EAAE,GLLxB,CAAmC,CAAnC,AhCCa,EqCIkB,ALLO,AhCCP,CqCIC,ALLhC,ChCCa,CgCD4B,AhCCpC,GeSqB,AfTW,KeSN,CAAC,CAAD,CAAL,AfTmB,CAAC,EeST,GfTc,CAAC,EeS/B,CAApB,SfT4C,EAAqB,EAArB,CAAlD;AJgBD,AmBNM,AcEH,AQnBM,ALOR,AhCEA,ATOA,A2CbD,AXWC,KcdEG,C9CgBE,CAAC,AgCFAF,EMKE,AGZA,AhCEA,CgCFC,AzCSA,CgCFC,CAAC,CSPC,AzCSX,CyCTO,ChCEP,ATOa,AgCFA,CAAb,CSPe,CAAR,ATOS,CAAC,CPChB,AaIC,CbJD,AgBRkB,CAAC,ATOA,CMKC,EGZE,ATOvB,CSPmB,CTOM,ESPE,ATOA,CSPC,ATO5B,CPCC,AgBRkB,CTOW,ESPE,CAAhC,GHYmC,ObJlC,AaIyC,CAAC,UAAtB,CAAnB;AdVM,AGKR,AIsBE,AlBfA,A4BbH,AhCEA,ATOG,AENF,AYKK,AkBDH,IAAA,CRNAE,EtBEGH,EyBGE,AIsBA,AlBfA,ACLO,EdCL,AENE,K6ByBT,AlBfA,ACLG,CAAiB,CaFtB,CIsBiB,AlBfA,AbJA,AENjB,CFMkB,AcDb,AkBDa,CAAC,ClBCQ,AkBDT,CDqBhB,AlBfA,AXVqB,A8BIrB,ChCEoB,CAAL,CAAf,AgCFsB,G9BJxB,EAA+B,a8BIW,CAAC,SAAS,CAAC,CAAD,CAAV,EAAe,QAAf,CAAxC;ALAH,AGkBC,AcpBE,A5CKD,AENC,AYKF,AkBDC,CPlBwC,CAAV,CzBkB/B,CEJE,G4BqBK,EcpBA,A5CKA,AcDA,CZLC,CAAC,CYKC,CAAC,EZLT,C0CCA,A1CDY,EYKP,C8BJU,A9BIA,CgBgBjB,CLnCyC,CAA3C,AvBcsB,AYKb,CgBgBgB,A5BrBF,CYKC,E8BJE,CAAC,A9BIlB,CAAmB,GZLN,CAAlB,C4BqB8B,AcpBf,CdoBM,AhBhBhB,CAAP,CgBgBmC,EcpBC,SAAnB,GAA+B,OAAO,CAAC,MAAvC,GAAgD,KAA/D;AdqBA,AYdF,AFQF,AxCTI,AEND,AYKF,O4BEQ,CZcG,CUNZ,CAAA,CVMe,A9BfJ,G8BeO,AYdhB,CZciB,A9BfJ,C8BeK,CAAD,AYdA,CZcD,CUNlB,CAAE,CVMuB,E9BfF,C8BeL,AYdQ,A1CDF,C0CCG,CFQ3B,CVM+B,CAAC,CAAC,AUN/B,AxCT2B,C8BeG,A9BfF,C8Be1B,CYde,C1CDc,GAAT,C0CCe,A1CDhB,CwCSrB,AxCTE,MwCSF,CAAO,CERU,GAAgC,KFQjD,EERwD,AFQtC,CERuC,OAAxC,GAAkD,CAAnE;AAEA,AFOA,AxCTC,AgBbI,AgBUL,SQYS,AxBtBK,AgBUP,KQYO,IAAL,IAAa,MxBtBjB,CAA6B,CAA7B,CwBsB0B,CAAC,AxBtBK,GgBUJ,CQYxB,ARZyB,IQYM,KAAK,IAAL,GRZP,CQYoB,ARZrD,SQY8D,CAAC,IAAtD,IACN,KAAO,IAAP,IAAe,SAAS,CAAC,IADnB,IAC2B,KAAK,IAAL,IAAa,SAAS,CAAC,IAD3D;AVME,AUJJ,AxCVC,AGLM,AaRL,AdMA,A8BID,AlCFM,C0CYP,OVOU,CAAC,A3BnBK,ADFP,AJEO,MIFd,AJEK,CAAgB,GQArB,ARAK,EKAA,ALAqB,CYM1B,APN2B,CaRpB,Gc2BmB,CAAC,Ad3BhB,CAAX,Ec2B0B,Ad3BZ,Cc2BZ,A3BnBG,CaRL,Cc2BiC,A3BnBK,CaTD,CACnB,GVQlB,EIMA,CPNK,EAA2C,IGAhD,EIMA,EPNK,EAAqD,UGA1D,CAAiB,AIMjB,GAAkB,CJNlB,EAAuB,CHAlB,EAAyE,KGA9E,EAAiC;ADa5B,ACZHC,AiBaF,AOMI,AQXF,AQPA,AEKJ,AtCAI,A8BUJ,ArChBEA,ADFD,AgBKD,ApBHE,IkDMI,ElBaA,A3BnBA,CoBaG,AyBPA,C1CND,AIMA,CLMQ,AiCJP,AQPA,A5BEA,ApBHA,GAAG,CyBaV,AbPW,AZNA,IQAI,AHAfA,COMM,CZNC,CQAW,AkBGjB,CAAA,CcKC,A5BFkB,CLMf,AyBOkB,CzBPM,AyBOL,AhCnBF,CQAC,AgCQA,CpBLzB,CbSO,AyBOkB,AZhBE,ApBHA,CgCmBrB,AhCnBsB,COYQ,EmBTjC,AMgB8B,EgBlB7B,ChDDoB,CQAJ,CAAgB,AwCCA,CAAC,AhDDA,CoBGrC,EZHoB,AYGoB,CZHpCA,AIM4B,C4BEU,CRWG,AQXF,AxCRA,CgCmBG,AgBlBF,AhDDA,C0BGzC,AMgB0C,AgBlBA,ChBkBvC,AZhBN,ApBH8C,EYM1C,AQH4C,EoBKE,A5BFT,C4BEU,MxCRR,CAAlC,CAAP,CgDCE,GROsC,CAAtC;AjCKF,AkBAa,AQYX,ADLG,AkBdoB,AtCCrB,AW7CC,AL8BL,AacF,AIAO,AfFLA,ApBHD,EOYC,GAAG,CAAC,AaTA,GaqBG,AV/DO,AL8BP,AacA,AIAO,EvBCL,CQHC,CFZC,CAAC,CiBcP,AfFQ,CeEQ,AfFrBA,CFZO,CAAS,CAAT,CXqBP,A4BPK,CjBdc,CiBcQ,CZ5CtB,CU+DH,AV/D2B,CX6CzB,AMfmB,AaczB,Cbd0B,AacA,CEmBC,GfjCN,AiBcd,CjBdwB,CiBcQ,GZ5ChC,AL8B4B,AacnC,CbdoC,CK9BQ,AQ4CP,EbdN,CAAS,CeiCpC,AfjC2B,IAAc,Cac7C,EAAgD,CbdC,AacjD,CbdkD,CacC,CAAnD,CbdqB,CAAZ,Aac6C,CbdpD;AXsBD,ACbG,AiBY2D,AqBX3D,AIIuB,AtCErB,ADTC,ANEL,AkBtCAD,AL8BD,AacCA,AIAA,CTrByC,CD2BoB,AC3B9B,IHvBzB,AQ4CA,AIAF,C9BNCC,CGAC,AuBME,CvBND,AiBY6D,AqBX7D,AnCHO,CccuD,AyBP5C,CtCEhB,APPA,A0BME,AIAF,C9BNC,AkBtCE,AQ4CA,AIAF,GVMV,ApBZa,AkBtCE,AQ4CA,C1BNVA,COOD,CJPF,AHAc,C6CKS,AfCrB,C3BNc,AIOA,ADTb,ANEa,A8BMA,CTrBuB,AwBoBhB,AvCPC,Ceb5B,CrBeuB,CyCCnB,AfKFD,AIAI,CAAJ,CZ5C0B,CuBuCD,AXKA,CxBRpB,AYpCLA,EZoCmC,ENEL,COOC,APPA,CyCCC,CAAC,AlCM7B,EDTC,EAAuC,ANE5C,EAAuC,CAAC,GAAG,EAA3C,EyCCyB,AzCDsB,EAAE,CAAjD,EyCCoD,AzCDA,SyCC3B,GACrB,OAAO,CAAC,cADa,GACI,CAD3B;AtCAE,AiBaJ,AOME,AkBXF,ANDA,AhCAG,ADTHA,ANEE,A0BMFA,AIAE,AfHF,IfHE,EGAE,AGFE,AoBQA,CaCC,AxBJFC,CWGG,GCaG,AkBXX,AnBFW,AIAF,AfHA,CTLG,AoBQA,AXHF,E8BKV,C1CRa,A0CQD,AvCVG,ANEF,A0BME,AIAb,AfHW,CAARA,EZHW,AHAA,AeGA,CwBIhB,CxBJkB,EwBII,AjCTA,CHED,AGFE,ASKF,CWGrBD,EmBEA,C7CRyB,C2BmBG,AkBXH,A7CRC,C2BmBG,AYZA,AvCPJ,CuCOK,AvCP5B,E2BmB0B,CxBnBZ,AwBmBd,ArBrBFA,CHEgC,AYGA,CAAC,GZHjB,GoCOhB,AxBJA,CZHwC,CYGC,CZHrC,AYGsC,GAAG,EAAE,GAAG,CAAlD,EAAqD,EAAE,CAAvD,EAA0D;AZFvD,AwBmBA,AkBXDA,ANDF,ADVK,ApBpCL,AQ6CAA,AIAC,AfHC,AJEG,GgBQL,AGTA,CfDE,EWGI,CR7CDC,C2B+CG,CPXM,ARSP,AnBDO,CIFN,CG1CC,CAAC,CP4CL,CeCS,AXHF,AJEO,CTQN,A2CLE,A3B/CF,CAARA,CoBoCA,AZSY,CmBEC,APXK,ApBpCP,EAAE,CoBoCb,AZSgB,CAAC,CaCb,APVT,AMA4B,ApBpCP,AP4ChB,EIFkB,AJEO,C2BRzB,AZSY,AXHO,CWGG,CMT3B,AMAiC,COWJ,AnBFA,GAAG,CmBEC,C3B/CD,AQ6CL,CmBEzBD,A3B/C+B,EcoCjC,ANSqC,AXHF,CAAC,CiBNpC,ANSuC,AXHJ,CiBNhC,AjBMoB,CG1CvB,CQ6C0C,AXHF,CG1CC,CqB8CvB,APVlB,AdpC0C,AQ6CzB,CAAjBA,CMTS,CdpCoC,EqB8CtB,ArB9CvB,EAAiD,EAAE,AH0CA,CiBNnD,AdpCA,AH0CoD,CAAC,CiBNlC,AdpCmC,EH0CE,CAAL,CAA5B,CwBId,CxBJmD,CwBIvB,KxBJd,CAArB,IwBI4C,CAAT,EAAY,CAAZ,EAAe;AjBD/CA,AEFA,AGiBL,AkBZEA,ANDA,AhCDA,AyBTA,AKkBJ,AClBE,AhCAA,ANEE,AkBtCA,AQ6CF,AIAE,AfHD,AJED,IWAW,AJ5CT,EZoCE,EuCWI,AtCFF,AyBTA,AhCEA,A8BOA,CNHQ,AaYhB,AClBS,AZSA,AfDA,C0BUT,AXTU,AfDA,C4BEG,CfJN,AeIO,ADVF,AhCAV,CkBMkB,AjBGP,AyBTA,AMAA,CNAC,A1BAA,AoBSA,CJDU,AiBEP,AbDF,CaCX,ATDY,ERDW,AuBGP,CvBFlB,AeSF,ArChBmB,AWMA,C0BUjB,AClBO,AtCEW,AkBtCA,AQ6CV,AfDU,CkCGG,AnCArB,AsBXM,AMAa,ApBpCA,AQ6CA,AIAA,AnBDF,CqBRG,ANSA,AfDZ,CWCJ,AEHC,CjBGH,A+BTK,CdMuB,AEGP,CnBAC,AyBTlB,AKkBR,A1BV0B,CqBRtB,AdpCgB,AQ6CO,CmBEG,A7CTtB,C6CSuB,AbXF,AKkB3B,AClB2B,ApBpCA,CoBoC3B,AZS4B,AIA1B,EAA4B,C9BPC,EWME,CAAC,CAAD,CDGjC,A2BOA,AXTQ,AfDD,CkCGc,AnBFd,CFHF,AN1CiC,CI6CtC,AtBPM,AkBtCiC,AQ6CA,CJAhB,AEHwB,AN1CT,AP4CE,CO5CtB,C2B+C0B,ARO5C,AnBtDE,CmBsDK,ArCfD,A0BMqC,CAAC,ChBE5C,GYFA,CADyB,AICc,AfDU,CeCC,AfDA,CWElD,AuBCqB,AnBF8B,AfDF,C0BUjD,A1BVA,EkCII,ARMc,ArCfD,A0BMqC,CJClD,AtBPc,C0BMsC,GhBExD,AgBF2D,EmBGhD,A7CTL,C6CSM,AnCDK,IVRY,C0BMU,CAAhC,CAAP,GmBEqB,CvBDrB,CAAuB,AtBRrB,C6CUuB,C7CTc,SsBOvC,CuBCEA,CvBDkC,KAApC,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,4BAAvB,EAAqD,KAArD,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,+BAAvB,EAAwD,KAAxD,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,+BAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,0BAAvB,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CAPyB,EAQzB,IAAI,kBAAJ,CAAuB,6BAAvB,EAAsD,KAAtD,CARyB,CAApBA;AnBLH,AqBIFC,AWME,AQPA,AEQAD,AnCFA,A6BDC,AhCDC,AyBTAA,AKkBJ,AClBD,AhCAG,ANGE,AkBvCH,AQ6CF,AIAK,AnBDL,A6BZM,AXUA,GUEI,CjCRP,CiCUG,CfJD,AaYE,APTF,E3BPE,A0CWE,CVDD,AQPA,AJGE,ACZK,AXUA,CUEd,APRU,A1BAF,ANGA,CUQC,AHFA,ADTA,CiCUG,CPVC,COQb,ATCY,CNHZC,AaYe,CQLC,AnCFF,A6BhBO,APKL,AKkBA,ClChBD,AoCQC,ATDD,C3BPC,A2BOA,CeIG,CbbC,AKkBd,CLlBe,CzBSjB,AuBAW,CvBAM,A8BSE,A/BlBrB,CIWO,AJXa,AwBSA,AUbjB,CrCMC,AwCGJ,AHT4B,CrCMN,A0CWE,CAAC,AbbvBD,CWKsB,ANaE,ArCfxB,A8BMW,CpBEY,AoBFvB,CvBAA,APNwB,CMH1B,AkCJG,CHsBL,CFNE,A7BZ6B,AkCJO,CrCMhC,AOS0B,A2BOE,CMbD,AEQd,AhBPd,CMM6B,AQPA,AdCO,I1BJH,A0CWE,AvCbtC,CHEqC,CAArC,CgCUuC,ChCVC,AgCUA,AKhBrC,EAA8C,C9BejD,EmCEiB,GFRjB,AEQkD,AhBP/C,EAAsD,IWVtD,CKiBsD,CAAC,ALjBK,OLgB/B,CUCf,ELjBd,CKkBD,CVFkE,AKhBO,SLgB3C,GAC9B,OAAO,CAAC,IUCE,mBVFoB,GACI,IADpC;AhCTE,AyB0BF,AiBdI,ANFN,AhCHG,AyBTCA,AKkBF,A/BlBD,ANGK,A8BMH,AfJH,AyBTAA,AXUA,KCCE,C3BLE,A0CYE,ALlBA,AXUF,E7BHE,C4ByBC,ASVE,AtBbF,CiBLG,CFSD,CeKG,ALlBA,CHsBV,CQJY,AbdA,C7BED,AYGb,AyBTe,CrCMD,AkCgBE,CLlBC,EhCGA,CGDb,AHCc,CGDC,A6BFE,CHMD,CAAC,CDsBnB,CSVuB,AGtBA,CRIR,AKkBS,CTUD,AI5BE,E7BEvB,A0BIA,CGNa,AKkBf,AGtB4B,CRI1BA,AhCGE,GAA0B,A6BGA,C7BH1B,A6BGN,EAAmC,EWVpB,EZgCb,CYhCwC,QKkBP,ELlBpB,GAAwC,KKkBzC,CADA,ULjBgD,QAA9DA;ArCOG,AqBGH,AiBAE,AISI,ARIH,A/BlBJ,ANGM,AkBxCL,AnBuCK,A+BOD,AfJL,AyBRCA,AXSE,AlCHGA,IAAM,E6BEP,AqBSE,AfLF,AUZE,GCQC,AvB1CA,AnBuCO,E8BIL,AlCHS,EkDWL,CfLD,AnCNS,CkDWN,A3BnDf,AY8Ca,CNJC,AzBHT,A+BOO,CWJV,A1CHoB,A+BOlB,AUZa,GhBQC,AiBAA,AXIA,AUZE,C7CMfA,CkDWiB,CAAC,A9CZlB,EAAyB,E0CGL,AZCA,CYDC,AXIA,ADHA,CCGC,ADHF,CLDrB,AqBOU,AfHY,ADHxB,CCGgB,GNJc,EiBAd,KAAqB,ADRE,CAAC,MAAD,ChBQM,CiBA7B,ADRgC,GhBQC,AiBAA,OAAO,CAAC,ADRlB,EhBQoB,AgBRE,ChBQD,KiBA5C,GAAoD,EjBAT,CAA7D,AgBRyC,CCQvC,ADRFA,ChBQ2E;AACzE,AqBSI,ANHN,AhCHE,AyBTE,AdpCL,AnBuCCC,A+BM6B,AUV7B,AXQC,ILDC,EqBSI,ANHA,AxCTF,GQMG,AiCVA,ERCEA,ERME,AqBSE,ALhBF,CjCUT,ARNFA,C8CYe,AbfF,CRMC,AeMd,APZc,CzBSC,EyBTE,CAAb,EaekB,AbfF,CaeG,AbfF,GRMG,AQNA,CRMC,EQNrB,CaYU,ALbP,CRCsB,AQDT,ERCW,CAA3B,EzBSqB,AyBTS,CRMV,CAAV,CAAuB,EjBGnC,aiBHY,CAAZ;AACD,AqBSK,AtCNJ,AyBTI,AKkBN,ArCfI,A8BKmD,AUTrD,IAAA,EKgBI,ARGA,APViD,EERjD,CzBSC,CuBDH,AUTI,ERCE,AQDA,CRCC,AhCGA,C6CYG,AbfJ,CAAJ,AKkBS,CQHC,AtCNd,A8BSc,ELlBA,AQFI,EHoBd,GQHiB,ARGA,CQHC,A7CZpB,IqCewB,IAA5B,EAAkC,ILlBX,IAAP,EAAa,IAAI,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAAV;AZiBN,ACRKD,AMcL,AiBtBF,ACUgB,ANCd,AhCFEG,AyBTG,AKkBH,ArCfC,ADDH,A+BMG,AUTD,AXOF,IREW,AuBRP,ArCSFA,AiCVA,CKWE,CADFH,ANEI,CnBKC,AOMA,AYXA,AxCTF,CQOHG,CAAAA,A8BSO,CGnBD,EAAE,CICG,APkBX,CjBFF,AmBLc,ClBHQ,AkBGP,AxCTf,CsCgBgB,CjBFC,CCRQ,AdCvBA,CcAF,AdAQ,ARPS,GwCSjB,ClBFI,AMaJ,CPNwB,AmBLA,CnBKC,AiBEA,AtChBzB,C4BoB0B,AUJA,CtChBD,GsCgBvB,CjBFe,GbPfA,CAAM,AiCVY,CpBiBgB,GbPlCA,CAAqB,CcAvB,AMaA,AavBU,CnBUa,CmBVK,CjCU1BA,CaOe,GAA+B,CoBjBtC,CAFU,GnBYpB,CADyB,CDQ8B,CAAC,ACNxD,IAAI,EDMa,GAAgD,IAAjE,SCNA,CAAuB,aAAvB,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,aAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,aAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,kCAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,4BAAvB,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,8CAAvB,CAPyB,CAApBH;ADUL,AIZA,AGkBA,AiBxB6B,ADO3B,AEUAG,ANLA,AlCDJ,AgCQK,ArCfF,ADDC,AyCHA,IKiBAA,AxCNE,AmCXF,InCWM,CmBLD,AmBCA,AJKEF,ExCTA,E8CcPE,ANLW,CMKXA,ANLY,CCZD,CzCGX,CwCSe,ACZF,ChBMf,AqBWEA,ANLOF,CMKF,CNLa,EAAE,CMKpBE,CFVA,CEUM,ANLiB,EILA,CHVL,EDeU,IILE,CAAC,OJKR,CAAkB,MAAlB,CILA,EJK2B,CILD,AJKjD,EAAqD,CAAC,GAAG,CILD,CAAC,AJKzD,EAA6D,EAAE,CAA/D,EAAkE,QILjB,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B,GAA+D,oCAAtF;AnBAH,AIwBG,AOfA,AShB2B,ACkBzB,ANLA,APZA,A3BUwB,ANP3B,A+BKC,AnBEG,A6BVH,IAAA,EKiBE,GjBaG,AOfA,AxBLO,CiCXe,ALanB,CAAC,ATJF,CURC,CRAC,CQAC,ELeV,AxBLG,CiCXwB,AZCzB,ArBUkB,CkCON,CVFC,AShBY,AdS3B,CeSgB,CnCJlB,A6BDI,EAAmB,CJGrB,EPeA,AjBpBG,CkCOoB,CAAC,AlCPO,CiBoBN,AlBjB3B,SAAA,EmCGQ,GnCHR,EkBiB2C,ClBjBnC,EkBiBsC,gBAAH,GAAsB,SAA/D;AatBA,AGLF,ACeI,AnCJF,A6BDI,APZH,A3BSyB,AgCS5B,ArCfA,A8BKC,AnBEDH,A6BfoB,GAAb,CAAP,CRFE,CawBE,ARCE,A1BRA,CAAC,C4BED,CELC,A/BMA,AVVA,CKMqB,AMClB,CiCRV,AZFS,IaiBI,AnCJX,A2BKa,CAAC,CQDD,CJVb,A/BMc,A6BDE,AvCTlB,CUUE,ACHiB,CiCRnB,APgBM,A1BRc,C8BHD,AGLP,ALUS,AlCHO,AMCT,CAAnBA,CND4B,AgCSL,CQDD,CJVC,AIUA,CNLG,EKV1B,APgB4B,EOhBP,EPgBrB,EQHQ,ARG0B,IENb,CAAkB,CAAlB,GELF,CAAc,AFKW,KAAK,EELT,CAAC,SAAtB,AFKyB,CEL1C,AFK4D,CAAC,GAAG,CAAtB,CAAtC;AKRJG,ACcE,AnCJF,A6BDK,APZH,A3BeJ,AgCGE,A/BjBG,ANEN,ADDC,A+BMD,AnBECH,A6BVD,IIGGG,ECcE,AlCPE,C4BAF,E7BGG,A2BKE,A/BjBK,APCP,CAAC,C6CCNA,AvCYF,CuCZEA,AjCOU,C4BEC,APZF,AKkBT,EhCHF,AMLe,CiCPbA,AvCYU,AgCGI,COfT,ACcQ,AnCJb,CXXF,C8CeiB,AvChBZ,AKSc,CDGD,AJZO,CsCEvBA,ClCUA,CkCVM,CtCFH,AKSU,CNKf,AgCGyB,A1BRA,CkCOD,ARCE,A/BjBK,AKShB,CkCOU,AxCFF,AMLvBH,G0BQE,EhCHF,C2BfkB,C3BeY,G2BfnB,CacH,OxCCR,EAA2C;AuCXvC,ACcA,AnCJF,A6BDI,APbgB,A3BgBpBG,AgCGC,A/BjBH,AOJK,AdKN,AYQCF,INKEE,EuCZE,ACcA,AlCPA,GDGG,AJZA,AOJO,CFaN,EkCOE,ANLE,CjCXD,AKSA,CkCOC,CxCFVA,CKFA,ALEAA,CkCHe,AjCXF,CsCEC,AjCOC,CDGA,ACHC,CiCPA,AvCYhBA,CwCEiB,AxCFZ,ACdY,CuCgBC,AvChBA,AKSC,CDGnB,ACHFF,ENKEE,EuCZuB,CAAC,ACUlB,CNDI,CAAkB,CAAlB,A1BfP,CPIE,AOJ8B,CAAhC,E0Be8B,AjCXF,AOJO,CAAnC,EAAsC,CPIN,CsCC7B,ALUgC,AjCXF,AOJjC,EAA0C,EAA1C,EAA8C,EAA9C,EPI4B,AOJsB,CPIN,CiCWd,A1Bf9B,C0BegD,CAAC,A1BfK,G0BeF,CAAtB,CAAvB,GjCXqB,CAA4B,CiCWG,GjCX/B,CAA1B,GAA8D,GiCW/D,CjCXN,CiCW4E;AZY5E,AiBpBI,ACcA,AnCJF,A6BDM,APduC,A3BkB7CH,AiCdG,AhCDN,AOJCA,AFaAC,MiCPI,ACcA,AbnB2C,AnBDzC,AFaF,CgBaG,AhBbPA,CNMQ,AQnBA,CHgBD,A4BXO,A3BQP,C4BEC,APdG,CnBDA,CmBC2C,CnBDzC,E+BMA,AvCaE,CwCCD,AnCJZ,AGhBc,C+BMD,AjCOfA,CkCOgB,AxCDE,AQnBlBD,CHgBiB,C6BDG,APdT,CAAP,EtBeF,A6BDqB,CKTD,CAAC,CNDlB,CAA2B,COUxB,ClBWR,AtBP6B,CiCdxB,EXqB2B,AYXxB,AlCIwB,AiCdK,EMD7B,INCH,EAAwC,GjCchB,GsBOiB,AtBPA,EAA5CA,CsBO+C,AWrB5C,EAAmD,YXqBxD;AAEA,AiBrBI,ADIF,AEUE,AnCJF,A6BDM,APdL,AKmBH,ACfAA,AzBLAA,AgBUE,MeJE,ACcA,ARAE,ACfA,AzBLA,CyBKC,CzBLC,C8BUD,AjCMA,C4BXG,CzBLC,C+BMD,CDIR,ALLW,AzBLA,C+BMD,ANDE,ATKH,CQUI,CMVD,ANUE,AxBpBA,EAAhBA,E8BUE,ANUI,ACfNA,CMCmB,CAAC,AlCUlB,CAAmB,A2BIE,ARVrB,EAAoB,GePd,APiBoB,IQAE,ARA9B,EQAgC,ARAE,CRVhC,EAAgC,IgBUK,CAAC,AnCJT,KAA7B,AmBNA,EAA4C,mBgBItC;AjBoBN,AOfA,ASZE,ACcA,ANLK,AFKP,AnBpDJ,AP4CE,AkBFI,MeJA,ACcA,ClCRC,CAAC,CiBqBC,AOfA,AEEE,AnBpDF,CW0CC,ClBEC,AkBFA,ClBET,C0BQE,CQAU,AlCRA,CwBMV,AxBNW,CiCNC,ACcA,ARAE,EFFA,ASZA,AjCMA,CAAhB,CkBFI,CDuBF,AjBrBiB,CkBFC,ClBEC,CiBqBC,AiBpBd,AlCDR,CwBMuB,ASZA,APcE,CTavB,AOfsB,ASZA,APcE,A1BRF,CO5C1B,CAA4B,EmBoDxB,AnBpDJ,CiBkDkB,CjBlDc,EAAhC,EiBkDoC,AShB1B,A1BlC0B,SiBkDlB,CjBlDlB,EiBmDM,AjBnD0C,OiBmDnC,CAAC,KADI,GACI,eAAY,KAD9B;AfGF,AqBVE,AGJE,ADIF,AEUE,ANLG,AFKJ,AChBH,ApBpCAA,AL+BA,AgBWM,MeJF,ACcA,APhBA,ApBpCE,AL+BF,COqBG,CuBVD,A9BXA,C4BWC,AHNA,CAAC,ApBpCE,C0BsCD,ANFF,CAAH,CMEO,A1BtCE,AL+BF,CAAP,C8BWS,AdAA,CYAX,AEAY,ALNA,CpBpCG,CAAC,AL+BF,COqBhB,AqBViB,CAAC,AGJA,ADIhB,A9BXgB,C4BWD,AGJE,A1BtCN,CEoDS,AuBVF,AEUA,AtCRpB,A+BRA,ApBpCsB,CuB0CD,CAAJ,AIUK,APhBA,ATMhB,CYAJ,A5BXqB,C+BEf,A/BFR,CK/Ba,CAAe,AL+BF,COqBG,CAAC,CyBAD,CAAC,A3BpDjB,CX4Cb,CW5CkC,EAArB,CAAbA,IEoDsB,CbRtB,IaQ8C,EyBRtC,EtCAR,GAAW,EaQW,GACpB,OAAS,CAAC,WADU,GACI,IAD1B;AAGA,AwBhBI,ADIA,AEUA,ANLC,AhCHH,A8BQJ,AChBI,ApBpCFA,AL+BEA,AFaA,AkBFG,CQHP,G1BKI,EiCNE,ACcA,A3BpDE,CWwCF,ChBTI,CAAC,CK/BC,CyB0CD,ApCEA,A+BRA,CAAP,AzBLU,AFaF,CO5CG,AL+BA,AgBWF,CeJC,A/BPE,CAAC,AFaF,CiCNC,ArCMA,CW5CG,AP4Cf,CgCFE,AzB1Cc,AL+BA,C8BWD,CEUC,AhCrBL,CK/BA,C2BoDO,AtCRlB,AW5CoB,C0BsCD,CAAC,A/BPE,E8BWA,A9BXX,C8BWY,AzB1CZ,CAAe,C2BoDD,AhCrBE,CgCqBD,AhCrBE,C8BW1B,A9BX2B,C+BCvB,A1BhCK,EAAqB,AL+BA,EK/BrB,AL+BgB,CK/B7BA,GL+BwC,EAA5B,EgCYJ,GhCZuC,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAlD,CAAVA;A+BQE,ADID,AEUC,ANLD,AlCID,AgCEJ,ACjBG,ApBpCDA,AW0CMA,GSRN,EKME,CCFE,ACcA,A3BpDE,GbmDC,AiCfA,CpBpCG,CyB0CD,CdAG,CSND,ApBpCE,AW0CA,EcAA,CdAG,CX1CC,CbmDf,AanDgB,CoBoCD,EOgBE,AxCDA,AanDN,C0BsCO,ADIA,AzB1CE,CyB0CD,AEUA,APhBA,CMEC,EDIb,ALNe,CAAC,ApBpCZ,CyB0Ca,ALNA,ApBpCE,E2BoDA,AxCD1B,CuCb2B,ACcA,APhBA,CMEC,ANFN,ApBpCX,CoBoCN,CpBpC2B,CoBoCD,CpBpCpB,CAAbA,AW0C8B,SgBAtB,AhBAQ,CAAVA,CeJgB,GAChB,OAAO,CAAC,gBADQ,GACW,uBARzB;AvBqBH,AMOL,AiBnBI,ADGA,AEUA,ANHJ,ADbE,AhCDG,ANGA,AkBtCLA,AL8BE,AEYG,AJCH,AkBDIA,MeHF,ACaA,A3BpDE,CS0DC,Cd5BD,AFaA,CUQQ,AwBCP,AvCjBO,ANGA,AaRP,AEYO,CG1CJ,CyB0CD,AEUA,APhBA,CAAC,AzBNA,AgBYE,CX1CC,AL8BX,EyBMW,AzBNA,CyBMX,CXsBF,AgBhBI,AzB1Ca,AP2CF,AkBDE,CcAD,AEUA,A3BpDE,AH0Cb,AJCW,CkCSC,A9BVO,AJCT,CgBeK,AiBnBF,AjCIZ,AkBDc,CRSf,ArBbA,AkBtCQ,CGmDc,AMO3B,AiBnBoB,ACEZ,A7CHmB,AkBtCL,CZmCjB,AKQgB,CLRQ,CqCON,CAAC,CtBSnB,AHnDQ,AH0CR,AJCH,CLRG,ANGA,AkBtCuB,CGmDM,AuBZP,ADGvB,A5BA8B,AJCP,CiCJC,AtCJO,ANGA,EkBtCtB,ElBsCR,AkBtC6B,ElBsCO,AkBtC5B,CAAbA,CW0C2B,CRStB,AQTe,CdAf,CMSyC,AQThB,CdAiB,E6BZvC,UvBqBH,EAAwD,CQTf,CAAC,MAA3B,CAAdA;ARUNA,AMQA,AiBpBI,ADGD,AEUC,APhBH,AhCDD,ANGAA,AkBtCA,AL8BI,AEYJA,AJCI,AkBDE,GSRC,GjBiBD,AuBZF,ACaA,A7CdE,AaRF,AEYE,AJCF,EEbE,CyBMC,AhCDA,AYnCA,C2BoDC,ChCtBC,CQqBG,AwBCF,CvCjBC,AOLP,AEYS,CTPD,AKQA,CUQG,AQTF,CdAG,CfJC,CWKD,CkCSC,AlCTb,CUQgB,AwBCF,A7CdE,CqBaC,AuBZF,EAAE,AtCJrB,AYnCqB,C2BwCb,A3BxCc,CZmCC,EegBvBA,ANT2B,CG1CN,E0BuCO,A1BvCA,C0BuCC,A7BGE,AcAF,CAAC,CdA9BA,CfJkC,AkBtCb,ClBsCc,CkBtCD,CW0CL,CAAhB,CAAwB,CX1ChB,ClBsCa,CAAlCA,AkBtCwC,I0B6BhC,A1B7Ba,EAAyB,AW0CjC,EAAmC,QX1C3B,CAArB,CW0Ca,EAA+C,UAA/C,CAAP;ARUNA,AOcE,AOdA,ASZE,ACaA,APhBFC,AhCDA,ANGF,AkBtCD,AL8BK,AEYJD,AJCG,AkBDE,IvBPH,EegBI,AuBZF,ACaA,AhCtBA,AEYE,EuBNA,AhCDA,AOLA,CemCC,AOdA,ASZA,ANHLC,AhCDK,ANGA,E4CCE,ACaA,AhCtBA,CEYG,C8BUD,AhCtBP,EQqBW,AcAb,ApBTa,GMSG,AcAF,ASZA,CzCDhB,AyCCiB,CCaC,AvCjBhB,ANGgB,C6CcC,AvCjBA,CsCPX,A7Bcc,CfJD,AeIE,EoBSA,A7BhBA,C6BgBC,AUCb,AvCjBa,GsB8BtB,AbvBa,EMSgB,AcAf,AUCa,CjBaC,CbvBG,CMSC,ArBbF,CGAhC,AkBakB,AfhBhB,ANG+B,C4B2B/B,AOdgC,EdAI,CrBbN,C6CcrB,A7CdO,G6CcuB,A7CdA,CGAzC,CgCagB,EpBThBD,CoBS8C,EUCE,CxBD9B,AwBC+B,C7CdjD,EqBasD,CAAtDA,AcAqD,CAAC,AUC3C,C1CdX,CAAc,C0Cc2C,EVDzC,EhCbhB,A0CCQ,CVYsD,ChCbzC,IgCanB;AhCZAA,AiBeF,ACFAC,AoBTE,AGHE,ADGF,AEUE,AvCjBH,ANGF,AaRI,AEYHD,AcAG,KhBfD,CQwBE,AuBZA,ACaA,A9BVE,CKWC,CjBfC,AwCIF,CFAC,CGHC,CzCDG,AURF,CQqBC,AuBZA,CHGR,CtCJY,CkBaD,AsBTA,A9BZA,C4BYC,AEAA,AEUA,AhCtBA,AEYE,E8BUA,CDbC,A/BTA,AEYE,C6BHD,A/BTT,CVQY,AOUrB,CGlBoB,COuBpB,AqBXqB,CAAC,AGfd,CvBwBRC,AwBCuB,C1CdT,AiBeY,AyBDF,A9BVE,C0BAZ,A1BAa,IZJI,AsCIF,AEA3B,EvBW+B,AqBX/B,AEA6B,CvBWG,CVLlC,CmCVQ,C9BIW,EZJL,EYI2B,CZJC,EOU1C,EPV8C,GiBepB,GLX1BD,EKWsD,CVLtD,CAAY,GAAZ,CPV0C,CAAU,AOUnC,EUKS,GjBfgB,AiBgBxC,CjBhBY,GAA+C,GiBgBlD,CAAC,CjBhBVA,ciBewB,GACI,KAD9B;AjBdEA,AiBiBF,AwBhBI,ADGA,AEUA,AnCJF,A2BGJ,AChBI,AhCAH,AOLK,AEYJA,AJAE,AkBhBF,MeaI,ACaA,AhCtBA,AEYE,EZJE,AmCHF,AzBLA,AFYA,C0BSR,CAAA,AtBTY,C6BHD,ADGA,AjCMA,CPVG,AURF,C+BSC,A7BGE,CFZD,CVQG,COUD,C4BbC,AzBLA,AFYA,CRJG,AURd,AFYY,CRJG,AkCarB,A1BTiB,CiCHG,APYlB,AChBkB,A3BOZ,CiCHa,ANJjB,AvBOmB,CAAC,CZJpBA,AmCHmB,A3BOA,CDMZ,CAAc,CkCtBf,CjCgBN,EgCAE,AEUuB,ARD7B,AtBTe,AJAc,CgCAC,CEUC,A9BV7BA,CsBSA,KMTmC,CAAC,AEUA,CAAC,AnCJ5B,CAA6B,C2BGtC,E3BHS,CAAP,M2BGF,GMTI,ANSQ,EMTyC,KAAK,IAAtD;AxCHF,AkBYF,AuBXI,ADGD,AENK,AZKV,A5BUI,AgCAF,AChBI,AzBLA,AagBC,AfJD,AkBAL,I1BJG,A8BGE,CYLFG,CxBcE,AuBXA,A/BTA,AFYA,CRJC,CAAC,AURA,CRqBC,AgCAE,AXLK,EYXL,CjBeC,AiBfA,AzBLA,EVQR,A8BGY,A5BUZ,AgCAY,AxBrBF,AFYA,C2BPC,AZWR,CkBPS,ANJV,AZWiB,CvBRN,AkBYA,AhBCA,AQrBA,C+BSC,APYP,AChBO,AzBLZ,AFYY,C2BPC,A3BOb,ERJF,AkCamB,AXLhB,CnBHL,AFQE,AiChBkB,CAAhB,AZWwB,EkBPL,ANJA,CjBevB,AuBXwB,APYE,CChBD,CjBeC,AiBftB,CZWC,CWKI,AChBmB,C/BQ5B,AmBGoC,EWKH,CAAjC,EO1BQ,IrCkBR,CmBGK,EACL,GnBJA,GAAS,UmBGJ,EACa,YADb,EAC2B,gBAD3B,EAC6C,YAD7C,EAEL,aAFK,EAEU,OAFV,EAEmB,MAFnB,EAE2B,eAF3B,EAE4C;AvBT/CH,AkBYA,AuBXE,ALQJ,AhCJE,A0BH+B,AIWnC,AChBQ,AzBLH,AamBHA,AXRA,AJCG,C0BOL,KOVM,AlBUE,AXRF,CwBMG,CpCTC,AkBYF,CuBXC,C7BEC,C6BFC,ArCIA,C+BRC,CZcG,EYdA,AvBMA,CREC,A+BRA,AZcE,CvBXC,AkBYF,AiBfF,CMIG,ALQhB,ADZU,CMIO,CzCDG,AkBYF,AdPhB,CcOA,AkBHmB,ADZF,CMXX,CvB0Ba,ElBZI,EmCHnB,EAAqB,ECY3B,IpCToB,CAAgB,CYGV,GZHN,CAAlBA,OuBWoC,IAAI,CAAC,GXR3C,EWQsC,AXRS,CWQE,UAAU,GAAG,KAAxB,CAAtB,EACd,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,MAAxB,CADc,CAAhBA;AvBVEC,AwBoBF,AiBnBI,ALUJ,ANViC,AIanC,ACjBU,AzBLP,AEWC,IAAA,E6BFE,CjBmBG,CxBpBD,E8BC2B,ElBEvB,GAAG,EZHXA,AmCHa,CAAC,ELIiB,CKJd,CXuBnB,AMnBiC,AKJzB,CvBMa,CAAC,CYiBG,IiBnBE,A7BEd,CYiBb,CiBnB6B,C7BEC,M6BFM,CAAC,E7BExB,CAA2B,UAA3B,EAAuC,WAAvC,CAAX;AMUE,AOeF,ADNF,AiBrCQ,AXqBR,AKRO,AZeP,AXTC,AJAC,IAAA,CiCnBAE,CvB4BE,AKAA,GEeG,CjBxBC,CsBER,AtBFS,CUSC,AVTF,CeSG,AfTT,CeSU,CLAC,CVTC,CiBwBZ,GPfgB,AOeA,AFfd,CLAe,AOejB,AKtBF,CAAY,AtBFQ,CqBTpB,ArBSqB,EeSE,CLAV,AKAb,ELAI,AKAsB,EMlB1B,ECWA,EAAwB,CtBFV,CAAoB,GqBTlC,IAAA,CAAK,ArBSS,CAAZ,GqBTF,EAAW,QAAX,EAAqB;A7BMnB,AiBiBF,ACJG,AOgBDH,AaxBA,ARCAG,ADXA,AMGG,AzBNL,AaqBE,AfTA,IsBEAA,AtBFA,CUMA,EDOK,CjBjBD,AyB6BE,AIlCF,ArBSA,C8BCC,A5BbA,EQqBE,AKAA,EMlBE,ArBSA,CSaX,AaXEA,ADXU,ArBSV,CsBEAA,E9BNA,AiBiBe,CMJD,CvBbC,A8BMfA,APOe,CEgBG,AaxBlB,ARCK,CDXD,CAAc,CJkCG,AaxBF,CrBYG,AaXtBA,ApBdoB,COyBG,APzBF,AaqBrB,CORsB,ADVlB,AnBHgB,CmBGpB,CnBHwB,CmBGC,AnBHL,EOyBL,APzBY,EAAP,EAAW,COyBG,CQYC,AfrCf,CeqCgB,AfrCtC,OOyBiB,GAA+B,OAAO,CAAC,AQYjC,CAAkC,KRZxC,AQY6C,GRZG,KAAjE,SQYuB,CAArBH;AzB5BE,AiBkBJ,ACLI,AOgBFA,AazBoB,ATTlBA,AMGD,AzBNJ,AaqBE,AXVDC,AJCC,KkCQA,APpBC,CjBqBE,AoBTkB,AIQrB,A9BTG,Ea0BI,EzB7BA,A6BLE,CMGD,CnCEC,AkBaA,ANVA,CiBRG,EXkBA,AiBfA,AvBKA,CZHC,AsCIkB,AIQ/B,AbjBe,AjBQhBA,E0BCkC,CpBSjB,ClBbC,A6BLE,CAAC,EJkCE,CPhBV,AiBfS,CnCEC,AkBaA,AoBTkB,CbyBf,AazBgB,CTTtCD,AMGqB,CAAhB,EOcR,APd2B,CjBef,AOgBkB,CPhB3B,KlBbI,CAAJ,EAAkC,MyB6BZ,CAAqB,SAArB,EAAxBA;AzB5BI,AkBaH,AOgBDC,Aa1BmB,ATRjBD,AMGA,AvBKJC,K0BAE,C1BAE,Ea0BE,EIlCI,CMGD,CAAC,CnCEC,C6BLG,CMGD,CAAT,CNHa,AjBQjBA,CuBLgB,CAAC,AvBKA,EiBRI,CMGD,CV+BC,AU/BjB,EnCEE,AmCFiB,AvBKvBA,CZHwB,AyB6BA,AIlCP,CAAU,AMGF,AvBKA,CuBLrB,AvBKJA,EZHM,A6BLW,AMGW,AvBKA,Ca0BC,AIlCzBD,CjBQJC,EZHgC,AYGA,CZH1B,AYGNA,EAAmC,EAAnCA,Oa0BwB,CAAqB,SAArB,EAAtBA;AzB5BI,AkBaL,AOiBCD,Ae1BA,AJOF,AFEF,ACfQ,AZeN,AfVA,A6BJK,CKxBoB,CAAT,AnBsChB,KaFO,CXmBC,Ce1BD,ANST,AXAS,AfVA,A6BJO,CHchB,AXAU,EYfE,CnCEC,CoCWX,CDba,AZeb,AfVa,C2BLC,AZeA,AfVA,C4BQG,ADbJ,CAAH,AECL,CHcP,AGd0B,CKxBC,ARsCzB,A1BVO,CkC5BT,AlC4BqB,C4BQG,ADbF,C3BKb,CAAP,CgCCE,CjBSF,CEiB2B,ASjB7B,CMT4B,ALNpB,AZeoB,CvBbpB,CAAsB,AyB8BE,Ae1B5B,ANSF,ACf4B,AECvB,EAAgC,ErCC/B,AoCWW,CAAkB,GpCXC,AuBapC,CvBbM,AkCaN,EEFiB,GAA2B,CXmBC,AWnB7C,CFEA,ETkBI,CSlBM,4BTkBU,YAAhB,EAA8B,eAA9B,CADyC,GACQ,YADnDA;AzB7BG,AwBqBL,AYTA,APlBI,A3BoBF,AgCDF,ACfQ,AtCGV,AkBtCO,AQmDLA,AXZA,AJCD,MeWO,CCOC,EtBPA,AgCDE,ArCZF,AkBtCO,CmBkDJ,AtBXF,CiBRCC,GjBQT,CiBRa,AKmBE,AnBlDV,Cc+BS,Ad/BO,CoBmCN,CAAP,CHaR,AHjBiB,CAAb,A3BoBF,E2BpBkB,Ad/Bf,AQmDiB,CMpBD,A3BoBA,AgCDX,ArCZZ,C2BoBE,A3BpBsB,AkBtCO,CmBkDpB,AXCgB,CMpBD,CL2BG,AtBPzB,AgCDyB,ELnBvB,Ad/BC,ClBsCP,CgCP+B,Ad/BO,CS0DJ,AURA,ArCZF,CgCPC,CAA3B,EAA8B,CGiBlC,IEE2B,AnBlDtB,ClBsCP,C2BoB6B,AURlB,AnBlDuC,CS0DJ,AUR5C,ArCZ0C,EmCU1C,KTGAD,CCO2B,MACvB,CAAG,CAAC,CQXR,GAAkB,WRUS,IAEvB,CAAG,CAAC,KAAK,WAAL,CAAiB,SAAjB,EAFmB,IAGpB,sBAAS,eAAT,KAA6B,sBAAS,KAAK,WAAL,CAAiB,SAAjB,EAAT,CAHpC;ANRAA,AOmBE,ADNF,AQdE,ASTA,AXKA,ADbI,AKmBR,ACfS,AtCGPC,AkBtCA,AQmDA,AXZE,AyBHFD,AXMK,CQMP,CXGE,ILFM,ArBXF,AkBtCA,AsBoCE,EZgCA,AIrCA,CYQC,AlBYA,AXZA,AcGO,CHSN,CSHC,CHjBC,CAAC,CXkBG,AWlBJ,CakBG,AblBP,CGiBQ,AjBhDd,AsBoCgB,CnBaC,ArBXF,A0Baf,CMpBgB,Ad/BA,AQmDA,CcfG,CIGjB,A5CDgB,EiCMT,CWJH,GvBSNA,AYLE,AjCNsB,CAAC,C0BaA,AGTpB,CD0BS,AOpBZ,ANNgC,CeFrB,AJJiB,CIIhB,AlBWE,AXZI,CfDpBC,C0Ba8B,CAAd,AcfkB,EdeD,AXZ/B,AyBHFD,EXMK,CHSW,CGT6B,CHSP,CkBXhC,AZTqB,IAAX,CYSc,ChB4BxB,AIrC2B,EHW5B,EGXgC,AHWoB,CGXnB,CJqCC,AIrCF,CJqCnC,AIrCc,CYSV,ChB4BoC,AIrCA,EYSA,GfErC,EAAgE,CGXrD,CYSiC,AZT3C,CYS4C,WAA5C,GAA0D,IAD9D;AzCFE,AiBkBJ,AYvBK,AKoBP,AChBO,ApBnCH,AQmDA,AXZA,AyBFFA,AXKA,IX1CE,EsBqCI,CpBiBC,CjBlBD,CYGC,AcGA,GWLK,CrCDD,CepCC,CAAC,AsBqCE,CpBiBf,AFtDY,CAAV,CW0CF,CTYmB,CAAC,AFtDF,EEsDI,AbZtB,EmBSS,CvBfH,AqCCmB,CrCDD,AepCA,AsBqCE,CpBiBC,AFtDF,CAAD,CAAN,CfoCZ,CAAF,AYGgB,CGvCU,AsBqCf,EpBiBO,EoBjBc,CtBrClC,CEsDoC,EMHpC,EnBTF,AmBS2B,AXZzB,CKeyC,EMHb,CAAC,INGX,CAApB,AbZA,AiCLkD,CdchD,UcdkC,EAA2B,IjCK/D,GAAoB,EiCLgB,EAApCA;ApBmBA,ACPA,AdNE,A+BPC,AtCEH,AkBrCE,AQmDD,AXbgC,AcIlC,GHOC,CRjDE,CoB6BO,CtCQL,CqBWCC,ArBXA,EOKE,EcME,AiBbA,CjBaC,EdNR,AW1CU,CGgDC,AHhDA,CGgDb,AHhDY,CX0CG,AW1Cb,CGgDc,ArBXZ,CqBWa,CHhDC,CRgDlB,CWAoB,ArBXA,IkBrCI,CAAC,CGgDzB,AHhDwB,CAAN,CGgDU,CAAC,AXA7B,CVXA,AkBrC8B,ElBqCE,CqBWC,CdNR,CW1CvB,GRgDF,CHNE,GcMF,EAA4C,CXA5C,CAAQ,CAAR,EAAW,QAAX,EAAqB;APZjB,AkBaF,AOoBE,AlBpBFA,AHNA,AyBZE,AMKA,AtCEF,AkBrCA,AQoDFD,AXdI,IMUF,ArBXA,AkBrCA,EQoDI,EhBJA,CHNC,CcMC,ClBbCC,AkBaA,AOoBA,AUjCA,CjBaD,AiBbE,CjBaR,AXAS,AsBlBA,Cd9BC,CfmCC,AmCAA,AtCEA,AkBrCA,CfmCC,AkBaA,AOoBV,AlBpBU,A4BbV,ApBnCQ,Cc8BR,Ad9BF,CoBmCc,AtCEA,CGFC,AyBiCA,AUjCA,CnCARA,AenCS,CRgDC,CPbC,AmCAA,C/BOlB,A+BPE,CnCAkB,AkBaA,ArBXA,A0BeE,CYjBD,AtCEA,CkBrCC,CfmCC,AkBaA,AiBbA,ApBnCA,AQoDE,ChBJzBA,A4BbE,ApBnCoB,CAAN,CoBmCU,AtCEZ,EqBWc,AHhDA,CGgDC,ArBXA,CqBWD,CAAhB,ArBXZ,CGFgC,CAAC,AenCjC,CGgDkC,AOoBT,GPpBzB,ElBbE,AyBiCA,EzBjCuC,CAAC,GAAG,AuBiBX,EvBjBhC,EAA+C,EAAE,CAAjD,EAAoD,OuBiB7B,CAA3BD;AvBhBM,AkBaJC,AOoBE,AWpBJ,AhCNE,AyBZC,AMKG,AtCEL,AkBrCC,AQoDFD,AXdG,AyBDHA,ItBrCE,CcuBA,CN6BI,AcfA,CDWC,ClBAD,CAAC,AdNA,EyBZE,C7BKC,AkBaA,AiBbA,ECaV,ArBhDY,CX0CV,A+BPW,ApBnCA,CoBmCC,ApBnCF,CqBgDK,ADbJ,ApBnCX,AsBqCe,CnBWD,AdNA,A+BPN,EpBnCQ,AsBqCE,CrCFD,AkBcb,ClBdc,AmCAA,CnCAD,CAAT,AoCac,CpCbD,AkBcb,AkBDe,AbIA,CLHd,AHjDa,CAAC,CoBmCnB,ApBnCkB,AQoDI,CvBjBlB,AkBcJ,AHjDY,CfmCU,AkBcb,AiBda,CCaX,AhCNY,CW1CC,CX0C5B,CJPQ,AkBcS,CAAC,ClBdc,AoCaE,CrBhDlC,CGiDa,ClBdL,AkBcc,IAAI,CAAC,ClBdc,AoCa1B,ClBCO,EkBDwB,EpCbtC,AkBcyB,CKGG,GvBjBc,CkBcZ,AkBDe,ClBCd,AkBDe,CpCbD,AkBcb,ClBdc,EkBcX,CAAL,CAAL,AkBDlB,GlBCiC,AkBDe,ElBCzC,AKGI,CAA5BA,CaJA,ElBCwD,GAAzC,CAAT,ClBdA,AkBaJC,ElBb0E;AACpE,AyBiCL,ADPH,AjBdE,A6BEF,AhCPE,AyBZE,AMKI,ApBnCN,AQoDFD,AcfE,IAAA,EdeI,CCSC,EpBnBA,CJPC,AqCEA,C9BUC,AQ/CA,CsBqCC,CRPC,GtBiBT,AHLA,C+BPa,C5BYC,A4BZR,AECY,CrCDH,AuBiBE,ERpDjB,CfmCkB,AuBiBE,ECStB,GxB1BQ,AwB0BmB,KAAK,KK/BV,IAAX,EL+BgB,CAAiB,SAAjB,CDRzB,ICSA,ADTI,CAAC,KAAL,CAAW,UAAU,GAAG,ECSb,KAAK,WAAL,ADTA,CCSiB,EDTiB,OCSlC,EAAX,CADyB,GACkB,GDT3C,CCQF,ADTsB,EAEpB,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,mBAAb,GAAmC,gBAA9C,CAFoB,CAAtBA;AvBhBQ,AkBaN,AMeF,AiBvBE,AlCOE,AuBHF,ADfwB,AKoB5B,ACdS,AtCCP,AkBpCC,AQuDDA,AXlBE,AyBAA,GtB3CF,CsB2CE,E9BUE,AgBQE,ChBRD,CWCC,AXDA,CWCC,AuBRA,AXIA,AIKT,AChBQ,AtCGC,AkBpCA,AHqCA,CsBYT,CGZW,CnBWC,AXDN,CAAO,A8BVA,EFFE,CLSX,CPWe,CkBff,CXIe,AIKnB,ACdmB,CjBaf,AgBCF,ArCbA,A0BmBoB,CkBfD,AlCOf,AuBHF,CZIkB,AiBbA,C5BYC,A4BZA,AEEA,CFFD,AEEE,CFFL,GMKS,AlCOA,A2BE5B,ACd4B,CMKC,AlCOA,CgBQG,CWN9B,AtBZoB,AyBFA,EdoBa,CYpBpB,C5BYT,C4BZ8B,C5BYC,CkCPhB,EPSnB,E3BFwC,AKVtC,C6BGuC,AlCOA,IAArC,C2BEJ,C3BF+C,AgBQ/CA,EWNW,COTQ,ClCOf,EkCNA,OAAO,CAAC,SADO,GACK,kBADtB;AzCJK,AiBmBP,ACNI,AOoBFA,AlBrBE,AsBnB+C,A3BuBjD,AgCFF,ACdQ,AtCCT,AkBpCG,AL6BG,Aa2BL,AXnBE,AJGG,A6BHH,EdmBF,EcnBE,EnBWE,AXDA,AsBnB+C,CZ0B5C,ACNF,COoBG,CvBjBD,AgCFE,AxBpBK,Aa2BP,AXnBA,AJGO,CUQN,AWpBG,AN4BH,ChBTC,AQ/CA,Cc4BiD,A3BuBxD,AalDE,AsBoCM,E9BUE,A2BEE,ACdF,AEEA,CnCcC,EAAX,AiChBa,AZqBf,CLRI,AgBCK,ACdO,ApBlCN,AQuDM,CSThB,AzBAiB,A4BZA,ApBlCN,CR8CO,AsBnBP,Ad3BD,Cc2BN,AKqBiB,AnBhDjB,CoBkCgB,CGEpB,AHFe,CViCS,AUjCZ,ApBlCI,AL4BX,A2BQiB,C9BUlB,AGlB0B,AFWzB,A6BHkB,CHYG,A1BTK,CiB4BJ,AUjCF,AzBNpB,Ca2BoB,CRxDhB,AL6ByB,COyBlC,AiBLS,CnB/CL,AL2BC,Aa2BW,AXnBI,EKiBa,AiBLA,ACdrB,AzBN0B,Aa2BR,ActBV,CHepB,AXOgB,Cb3BX,AFWA,C2BL6B,AZqBD,CEYI,AVlE3B,AL2BgC,AFWA,CiB4BJ,AVlE3B,CAAD,AL2BL,Aa2BW,CNFwB,AqBjBxC,AvBnCI,CEoDqC,APzBK,Aa2BR,CYrBE,AvBEtC,CGnCc,EoBiC2B,A3BKtC,EiB4BsB,AjB5ByB,CwBOpD,AGZ8C,ApBnCrC,CUoEPA,Aa/BF,AHF+C,CAAD,ApBhC1C,CoBgCI,EAA2C,GpBhCzC,CiB4CV,AjB5CW,CAAD,CEmDV,AFnDI,GAAY,CuBkChB,GAAiB,CvBrCR,EAIL,MAAM,CAAC,CAAD,CAAN,GAAY,EiB2ChB,GAA6B,AjB/CpB,CAAP;AfoCG,AiBoBL,ACPG,AcDD,AMVA,A/BUC,AuBHD,ADhBC,AKqBL,ACdY,ApB9BT,ALwBDA,Aa2BEA,AXpB+B,AJIjCA,A6BHE,CHUJ,GGVI,CnBSA,CRjBI,AFWA,CAAC,CsBID,ApBfE,Aa2BA,EfhBE,CUQD,AcDA,AMVA,A5BRE,Ca2BC,Cb3BC,EQmBA,AKQE,AcnBF,CnBWC,AcDA,AMVA,A5BRE,C2BQD,CPOC,ApBfhBA,Aa2BkB,CLRD,AiBbA,AZqBE,AfhBA,CUQD,AiBbA,A3BKE,CAAD,CAAnBA,CsBIqB,AKTA,CAAX,CGED,AfmBM,CenBS,AfmBE,CAAX,CLRN,EAAmB,CKQG,COZ7B,EAA8B,IOPI,CAChC,CLSF,AMVO,EAAP,GDAkC,EdmBW,AcjB3C,CdiB4C,CAAD,CAA7CA,OcjBY,CAAC,OAFqB,EAGhC,UAAU,CAAC,QAHqB;AnBYhC,AOmBF,AKvBE,AIMN,ACfW,ApB9BV,ALwBCA,Aa2BEA,AXpBE,AJIJA,A6BRoB,AXUf,GWVLA,GnBgBI,ARnBE,AFWA,CUQD,AVRE,CiB2BD,AftCE,Aa2BA,AXpBJ,CcMU,CRMN,AVRE,CUQD,AYJA,AKXD,AzBJG,Ca2BC,Cb3BC,Ea2BE,Cb3BC,CyBMD,AZqBE,Cb3BjBA,AgBaK,CRMD,ANZW,AJII,AkBEK,CHcJ,AfhBA,CegBC,AfhBF,CAAnBA,AkBEK,EDyBH,AKvBE,AJFyB,CIEN,CLuBC,CFXP,CAAW,CAAX,IAAgB,EOZ7B,cPY6C,CAAC,CAAD,CAAlC,CAAbA;AvBrBE,AkBcD,AOmBC,AWnBJ,ANJG,AKTO,AzBNV,Aa2BEA,AXrBa,AJKfA,A6BCA,AXCAA,MlBFM,AkBEA,CUMC,A5BRA,CRND,AuBsBE,Cb3BD,A2BYA,CZ0BC,AjB3BE,AkBEA,CDyBD,AftCA,EVKE,AqCOA,AXCE,ChBbD,C0BmBZ,AVNAA,ChBbO,Aa2BS,EaRE,CDbD,AzBNA,Aa2BE,AfhBA,CgCFnB,ALHU,A3BKU,CEXD,AFWA,C4BQnB,A5BRAA,EEXsB,CVKhB,CAAkB,AyBiCpB,AftCJ,EesC0B,EzBjCpB,AqCOC,CrCPH,AqCOgB,UdeQ,CiBlB5B,AHGO,CAAP,Cde+B,CAAC,MiBlBhC,AjBkBmB,CAAjBA,kBiBlBF,GAAsB;Af8BhB,ADLN,AgBxBE,ALHO,AzBNV,Aa2BGA,AXtB2E,AyBO9E,AXCCC,MAAI,CFoBG,CCKD,AFXE,AXtBqE,G4BIpE,AdIA,GAAG,EcJE,A5BJ8D,CWsB3D,AXtBsE,GWsBnE,GEWC,CDLrB,ECKwB,CDLG,IZ5BiD,CY4B5C,AgBxB9B,C5BJE,GcQ8B,IAAtB,CAA2B,CDyBjC,CDLqB,ADNG,CCMc,AEpBhC,CAAZA,CHciC,CAAC,MCMP,ADNP,CAAlBD,ICOA,sBAAW,KAAK,WAAL,CAAiB,SAAjB,EAAX,CADyB,GACkB,IAD7C;AxB5BI,AkBcF,AOoBG,ADHL,AiBvBE,ALMF,ADZO,AZsBL,AXvBE,AJMJ,IUOE,AKUA,ECOM,AYjBF,A5BPF,CiByBA,Cb/BA,C6BOG,CzCRC,AkBcA,CAAC,CAAC,COoBC,AWpBE,CAAC,AxBbJ,AJME,CRPC,AkBcA,AVPA,CUOL,CAAN,AKUa,AXvBF,CWuBG,ELVE,CAAhB,AkBAI,GZiBoB,ChBxBtB,C4BOsB,CpCdlB,AwB+BqB,ADP3B,CvBxBwB,AuByBtB,EflBwB,CiCC1B,AlBiBK,AflBH,CRPI,AuByBA,EkBjBwB,A7BPF,CwBa9B,AxBb+B,AJME,CiCC/B,AjCDgC,C4BOG,AbUnC,CvBxBkC,CAAhC,AuB0BA,AfnBiC,ERPE,IuBwBrC,CXvB4B,CWyBlB,AfnBiC,CIND,AJME,GgBwBN,EDPtC,CXvB4B,CW0B1B,AX1BA,GW0BG,AfpB8B,CeoB7B,CfpBR,EAA4D,CgBwB/B,CAA7B,ADJI,CAAU,KAAV,GAAkB,IAAI,MAHxB,EAGgC,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,IAAI,MAHvD,EAIE,IAAI,GAAG,WAJT,EAIsB,IAAI,GAAG,WAJ7B,EAKE,QAAQ,GAAG,WALb,EAK0B,SAAS,GAAG,WALtC;AvBvBIC,AiBqBN,ACPC,AOoBK,ADHN,AYjBE,AlCIA,AiChBG,AZ2BJ,AX5BG,AJMF,AkBCF,GHSA,GCcQ,AEvBJ,CTaG,CQaD,CWpBG,AlCIF,EMXE,AkBCT,C1BRU,C0BQC,GlBDT,C4BOA,GAAkB,AlCIlB,GeGF,AQaqB,AvBhBA,EsBaM,CPVD,AQaF,CzBlCC,AoCcE,CZiBG,AYjBF,EpCdA,AiBqB5B,AfH4B,CAAC,IFlBI,AoCc/B,MlCImB,KAAuB,KFlBhB,CAAsB,CwB+BR,ECGF,AvBhBnB,CFlBO,CAAtBA,CEkBkD,GAAnC,GAAyC,CsBahC,CAA9B,ICGwB,CvBhB6C,CuBgBZ,AvBhBa,UAApE,MuBgBsB,CAAlB;AzBjCA,AiBsBN,AQYK,ADHL,AYjBE,ADZC,AtCCL,A0B2BED,AX7BG,AJMF,MgBwBO,ADDF,G1B3BC,MGHM,IuB8BM,CvB9BD,EIQlB,AmBsBsB,GahBX,CvCXb,CAA2B,C2B4BK,EYjBd,CZiBiB,E3B5BnC,EAAmC,CGHpB,CAAsB,CoCcxB,CAAc,EpCdZ,AIQb,CJRM,GoCcK,CbgBsB,GahBE,ChCNnC,IgCMwC,IbgBlB,CCC0B,ADDhDA,OahBmC,AhCNnC,CgCMqD,EhCNlC,EoBuBc,CAAjC,CYjBE,EACE,EADF,EAFmC,CAG3B;AlBDV,AOqBG,ADHH,AYhBG,AhCPDA,A8BOJ,ArCZE,A0B4BA,AGvBEA,EHuBF,ICAQ,EpBvBA,AsBAA,CRKD,AgBET,ArCZS,CqCYT,G9BPe,EcKb,ArBVa,A0B4BA,C1B5BC,A0B4BA,GWhBhB,CAAE,CrCZA,A6BKqB,GAAG,GFuBK,CDA7B,CGvB6B,CFuBG,AUhBlC,ARPgC,CHuBD,AGvBA,CAAL,CQOxB,ARPiC,KHuBjC,CAAqC,GWhBrC,CRPwB,CAAoB,CAApB,CAAtBA,GHuB4C,GWhB9C,CAAW,IVgBmC,ADAT,EAAmB,CAAnB,EWhBrC,AXgB2D,EWhBrC,CXgBe,EAA2B,ECAhC,CAAhC;AxB/BM,AkBcP,AMkBC,ApBxBa,A8BQb,ACdE,AtCEH,AeHG,AJMFA,AkBEEA,MFuBM,AhBzBF,EkBEE,CQOC,AtBfF,EuBCE,CAAC,A3BKE,E0BSE,ClChBD,AmCEA,A3BKE,C2BLb,EDcO,CVgBY,CEvBD,CnBMpB,CiBiBwB,AUhBF,CIZtB,A9BGuB,AkBEA,ClBFC,GgByBK,AjBjB7B,CmBN4B,CAAC,C1BTD,A0BSA,CQOG,AtBfX,AcQG,C1BTjB,AkCgB0B,ARPA,ClBFjB,CRPiB,CQOhCA,CDQA,A2BCS,CIZT,E/BWA,CiBiBwB,AjBjBpB,A2BED,CVewC,CEvBpB,CnBMvB,AmBN2C,CAApB,CnBMd,A2BEC,ARRRA,CYLF,E1BHE,CsBgBC,IAAe,IIblB,CAAY,Cd4BY,CAAxB,EUf2B,CAAC,IADnB,CIZT,EAAwB,CJcrB,KAAO,GIdV,CJcG,CIdgC,GJcjB,SAAS,CAAC,IAFnB,IAGN,KAAO,IAAP,IAAe,SAAS,CAAC,IAH5B;AlCfQ,AyBmCNA,ADHF,Ac5BEA,A/BWAA,A6BCF,AhCTiD,A8BYhD,ACjBA,AvBDC,AJMFC,AkBEEA,CQKJ,KVkBU,AYhBA,A5BTJ,EiB4BI,Aa/BA,A/BWA,AmBNF,CtBFgD,AQN/C,GwBeO,C7BDD,EPfA,AoCgBI,AhCTfD,AIAFC,CDQgB,AmBNdA,CYLe,ENUjB,CRkBsB,Ac5BF,C/BWC,C6BCG,CZgBC,AYhBA,CXmBD,Ca/BC,Eb+BE,CDHG,CjBjBd,A6BChB,C7BD8B,CKdV,ELcJ,CPfR,AOeND,CPf+B,AgCcjC,GpBbE,CZDM,EAA+B,AyBmCE,ADHhB,CCGiB,ADHE,EQlB5C,MMVoB,CAA+B,Ib+BxB,CzBnCnB,AyBoCJ,COtBJ,GAAgB,CPsBP,ADJgB,Ac5BL,Cd4BpB,Ac5BEA,gBbgCE,CAAuB,CAAvB,CADuB,CAAzBA;AzBlCK,AyBqCLA,ADLF,AQlBE,ASLA,AlCMA,A4BbH,AvBF8B,MYgCrB,ECKA,CgB5BD,ETKE,KAAK,IPuBM,GAAG,ADLE,AKrCzB,EtBoBS,CiBiBmB,CQlB1B,CHnBF,EYcE,AlCMY,CiBiBmB,EiBvBF,EAA7B,AlCMiB,EsBpBnB,EAAA,CAAG,ILqCyB,AjBjB1B,AsBpBF,CLqC+C,CCKd,AlBrB7B,AsBrBK,EtBoBP,EAFO,CAGD,GsBrBR,EAAmB,SJ0CI,CAArBA,CDL0B,CAA5B;APTA,AQeEA,ADLF,Ac7BE,AFaF,AhCVE,AyBXA,AdtBG,AH2BD,AJMJ,AkBEE,MFwBM,AYhBF,A5BVF,CSgBG,AThBF,CiB+BG,AalCF,AlCGA,AyBXA,AjBKF,CG3BU,AWmCP,GUQK,ChCVD,AyBXA,ArBWX,CJAY,AyBXA,AdtBP,CAAe,APiCP,E8BHX,AFae,AVRF,EYLE,A1BHF,CcQG,CTclB,AY3BM,AdtBD,CS2DmB,AKrCJ,CdtBQ,CEiDJ,AQeA,CDLG,CYhBrB,AhCVA,AyBXA,CJ0CqB,AI1CzB,EAAyB,CLqCK,AYf5B,AhCXwB,CagBG,AmBLxB,CnBKyB,CFjD3B,AWmCH,EtBF+B,AWjCO,AWmCP,CUSrB,AhCXsB,OoB0BP,AYhBrB,AVRmC,CFwBK,CPV9C,EmBLuB,AVTsB,CUSrB,ChCXtB,EAA+C,EgCWpB,MVT3B,EUQF,AVR2D,EUSpB,AVTsB,EFwBlC,CCMvB,ADNJ,KExBE,EAAqE,GD6B5C,EACX,UADW,EACC,YADD,EACe,gBADf,CAAzBA;AzBrCI,AiBuBR,AOWE,Ac9BI,A/BYF,A6BEA,AhCXE,AyBXA,A3BwBF,Aa9CF,AH0Be,AJOb,AkBEE,CT9DN,GT4DI,E8BHE,AvB9BA,AWmCA,CFyBG,CjBlBD,C6BEG,AlCEF,CwBXC,CtBFC,AyBXAC,AHaA,EnBOE,ACTA,ERPE,AwBkCb,Ac9Ba,ATRA,AHaT,CF0BF,Ac/BY,AFcZ,AhCXE,AyBXU,AdtBd,APiCc,AkBEA,EnBOE,AQ1CA,CqB4CG,AhCXF,AyBXA,AHaA,C1BTC,AwCMlB,AXVSA,AHaS,EGbE,CtBoBC,CsBpBC,ArBWA,CAAC,CNarB,CoChBE,ATRqB,AHaX,CYLY,AZKA,CxBWC,CKJzB,CsBpB2B,A3BwB3B,CFpBW,AOgBiB,AsBpBA,C7BIC,A0BSA,CFyB/B,AEzBgC,CAAD,CF0BP,AE1BV,C1BTD,AsCIT,CtCJE,AIOqB,AyBXvB,AHagC,EGbE,CWUtC,AXVuC,ArBWzB,CAA0B,C4BWV,A5BXhB,CJAV,AyBXsC,ArBWxC,AkBEwC,CAAC,CGbvC,EAA0C,COsB3B,CIZnB,AJYE,APtB8C,CAA5C,EAA+C,ELsCnD,EAEE,AE3BkC,CAAoB,QAApB,CAAtB,CcHd,AdGI,GcHiB,QhB4BrB,EAE4B,qBAF5B,EAGE,aAHF,EAGmB,cAHnB,EAGmC,iBAHnC,EAGsD,gBAHtD,EAIE,eAJF;AxBjCK,AiBwBP,AQeI,AanCC,AEED,AjCUE,A6BED,AhCXA,AyBXG,AdtBJ,ALwBG,AECwE,AJQ5E,AkBEE,GlBJH,CO/BE,CX+BA,GqBkCI,AbxCuE,CawCtE,AfzCO,AFSP,EgCDE,ApCCA,EGSE,CQ1CC,CAAC,CyBgCC,AzBhCF,AHyBgE,CawC7D,AVjEb,AHyBqF,CawCvE,AlBvBA,CAAC,CQ1CC,KR0Cd,CQ1CoB,ALwBnB,CKxBoB,ALwBO,CKxBR,CAAtB,CcsBa,AnBEV,C8BQH,A5BP0E,CFDvC,CECjC,CawCW,AI3CT,CJ2CA,CI3Ce,GJ2CgB,CI3CZ,CAAC,CAAD,CAAnB,EAAwB,QAAxB,EJ2C+C,IAAI,CAAvD,EAA0D;ADA5D,AjBtBG,AHTC,AyBXC,AdtBH,ALwBFD,AFSE,IOjCA,APiCA,CDOA,CiBwBI,AdxCA,CAAC,GAAG,CcwCC,AjBtBF,AHTA,EMTI,AFSF,COjCC,ALwBE,CHkBD,AQ1CA,CXiCT,AWjCQ,APiCE,COjCZ,EXiCe,CGSC,AQ1CA,ALwBlBA,IFSsB,CDSC,ACTA,CgB+BvB,AThEwB,CAAC,CSgEG,AThEJ,CAAtB,CR0C0B,OAAnB,CHTkB,CGSU,IHTjC,OIAU,CAAmC,MAAnC,EAA2C,CAA3C,CAAZ;ARPE,AwBuCF,AjBtBE,A6BEJ,AhCXG,AWjCD,AHwBE,AJSH,A6BGH,AXFI,IXlCA,ISgEM,Ca5BD,E9BME,AmBRA,E1BTE,AYDF,CGxBG,AHwBF,CGxBG,AWkCX,CXlCU,CSgEK,AThEf,AHwBW,CLkBT,AKlBK,EYwCW,AThEF,AHwBF,EZCZ,AYDc,CwBqBb,ANVL,CMUM,CxBrBe,CGxBG,CAAC,CSgEvB,AThEsB,CqB6Cb,ANVX,AfnCE,CsBoCJ,CAA+B,KDSxB,AxBrB2B,CAAC,AyBYnC,CPDE,COCqC,CDSf,CNVtB,CAAI,ClBXA,EwBqBuB,ANV3B,AlBXyC,CAAC,CkBWjC,ElBXoC,CyBY/C,CzBZM,CyBY8C,CDShD,AxBrB+C,EAAE,CAA/C,CwBqBqC,CxBrBa,IwBqBR,ECThD,EAAkE,GDSvB,IAAgB,CAAC,KAAK,QAD/D,EAEE,EAFF,EAvEqB,CAyEb;ApCpBL,AyBwCC,ADDF,AiB5BA,AlCKc,AuBNdC,ADdE,AdrBF,ALwBF,AEAM,AyBYND,AXFC,IXlCC,EsBoCI,C3BZDC,CoBWC,CN6BG,AiB5BF,C7BZD,CayCG,AfzCA,CAAC,CoBWRA,AOCW,CtBpCD,CAAC,ALwBA,CeyCT,AVjEQ,ALwBZ,AEAY,AyBYI,CtBpCd,CLwBc,CeyCC,ADDf,AdxCe,CcwCG,AThEF,AHwBF,EFAI,CAApB,EAAuB,CKxBC,ALwBA,CcwCtB,AThEuB,AsBoCE,Cb4BC,AThEJ,ALwBxB,CKxBE,CLwB0B,E2BYI,IIA9B,C7BZ+B,CayCN,ADDU,AZxCH,C6BYG,EJArB,EZ6BZ,CY5BF,Eb2B0B,AiB5BgB,CAAC,CjB4BE,CAAnB,AZxCiB,CAAC,CYwCI,AZxCL,CAAZ,EYwCL,AZxCsB,CyBYlC,Cb4BuC,Ea3BvC,EzBbiB,CAA3B,Y6BYJ,SJAFD;AZ8BI,ADDA,AjBxBqC,A6BMzC,AhCdE,AyBXC,AdrBD,AHwBG,AJQL,A6BMAA,KRtBE,CLgDE,AhBhCA,A6BME,C7BND,EJAE,EGQuC,AsBnBrC,AdrBA,CsBsCG,Gb0BG,Aa1BA,C7BNf,EgBgCkB,AjBxBuB,ACRzB,CDQsC,EQxCpD,CSgEoB,CAAC,ApBhCrB,CGQE,EiBwBc,CAAS,SAAT,EACZ,Aa3BmB,MAAV,CAAfA,Cb2BgB,CAAC,MAAX,CAAkB,CAAlB,EAAqB,CAArB,CADY,EACa,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CADb,EACoC,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CADpC,CAAd;APfN,AQiBK,ADAE,AjBzBD,AHRF,A0BEA,ADbE,AMQC,AtCEP,AkB/BG,ALwBCC,AFQA,A6BMFD,AXLA,EAAA,CXvCA,ESoEE,CaxBI,CbsBsB,AE3BvB,CFkCH,AMjCI,ApBVA,CNQC,A+BHO,AtCEP,AkB/BA,CEgDT,ASfU,CTeV,AVRW,ACRA,A6BME,EPJA,CpBVC,A2BcE,C7BNZ,AkBCW,CtBDX,CMRa,CHgBX,AGhBFC,AgBSc,CMOhB,AzBAiB,CUQnB,AadQ,CbcN,AadmB,GvBMf,A4BXC,AtCEP,CsCFgC,AtCEP,EUSE,CsBnBZ,AMQR,ClBmBP,CkBnBqC,C5BW/B,AVTN,CoBiBE,AY3BI,ChCU2B,EiCGzB,AKLD,CHWL,AFNkC,AOIX,AXLW,CSJQ,AtCE5C,EiCGQ,AjCH+B,CiCGnC,AKLG,ATIW,CTehB,ASfuC,CICC,AKLO,AESjC,CAAdD,CXLgB,CMOhB,ANPA,ITeA,GAAW,OeRX,GAAiB;AfSjB,ACPK,AM0BH,AQ3BA,AzBAC,AuBNC,ADda,AMSjB,AtCEAA,AkB/BE,ALwBAC,AEDE,AJSH,A6BODD,G7BTA,EDOS,CuBHL,AjCHE,AwCQA,E3BfA,COwBG,ACPK,AiBZP,A3BGA,EwBQE,AzBAA,AuBNA,AflCA,ELwBE,COwBG,AadF,AKLA,AEUE,CxCRC,CaPD,CyBKC,ApB7BA,AsBuCE,CxCRC,AkB/BF,CGyCX,AYPY,CZOQ,AiBZzB,AzBLkB,CAAC,CyBKC,ClBmBpB,AFhDS,CLwBK,CQiBT,AHzCH,ALwBqB,CoBUX,CZOoB,AYPP,CpBVC,CAAC,CoBUf,AjCHkB,AaPJ,CoBUtB,AjCH2B,AaPR,CsBgBrB,AtBhB4B,CAAP,CAAT,CAAZC,A2BesB,EnBEnB,ArBVyB,EqBUc,ArBVL,IAAT,CAA9BD,GwCQoC,KnBE/B,AmBFoC,EnBEkB,OmBFnC,GACtB,YADsB,GACP,yBADA,CAAjBA;ApBUF,ACPEA,AOwBEA,AlBzBE,AuBND,ADfuC,AK4BrC,AClBHA,ApB7BD,AHuBE,AJSD,A6BQFA,AXRA,CTcF,KCLQ,AXDF,AsBrBsC,AQqBpC,AXRF,EDiCI,AUpCA,CDkBM,CL5BV,CtBqBK,A4BXE,A3BGF,AkBAT,CRSY,AXDF,AsBrBuC,CHatC,CSHG,CjBYC,EXDX,A4BXa,C5BWD,A4BXE,CEWC,CnBCC,AWtBhB,ArBac,CUSG,AVTF,C6BQG,C9BAlB,A2BOC,AClBY,CDkBY,AClB3BA,E5BWsB,A8BAE,CnBC1BA,AmBD2B,CHOtB,ETkByB,ASlBK,AGPb,C9BAO,ACRpB,A6BSP,C9BD4B,ACRA,CiBiCG,AjBjCxB,C0BeJ,C1Bf4B,C0BeQ,A1BfhC,A6BSF,C9BDH,ACRF,E6BSQ,CHML,EAA0C,IAA1C,CGNa,CHMmC,AGNlC,CAAD,CADI,CZyB6B,CYxB5B,IZwBiC,CSlBnD,CGNwB,CHMmC,EGNhC,IZwBC,GAC7B,CYzBoC,CAAC,CAAD,CADlB,CAAtBA,aZyBiC,GACR,uBADvBA;ARfJ,ACREA,AMyBE,AjB1BE,AsBrBD,AK4BH,AClBE,AtCCF,AkB9BD,ALuBG,AFSD,A6BUDA,IFbE,EjBYI,AXDF,A2BOA,ArCjBA,AwCYE,CFbD,CAAC,CXqCG,Ad3CFC,EHiBE,CAAC,A8BEE,CFbP,AzBNM,CyBMT,AzBNU,CQkBG,AgBMF,ArCjBb,AwCYe,E9BFX,A4BXW,AtCCA,AaPA,CQkBG,AXDF,AGjBA,Cc2Cd,CAAkB,AUnBF,AClBA,CAAC,AzBNA,CAAjB,A2BmBoB,C9BFlB,C4BXc,AzBNI,CyBMpB,AzBNqB,A2BmBE,C9BFD,A8BExBD,CbwBE,CAA0B,Ad3CF,CwBwB1B,AxBxBE,EQkB6B,AXDF,A2BOA,AxBxBA,CHiBC,AGjBA,EQkBI,ARlBhC,CQkBgB,CRlBgB,CHiB9B,CWCkC,AMyBD,QAAT,EAAmB,GNzB7B,GAAoC,CAAtDA;AACAC,AMyBI,AiB9BF,AlCIC,A6BKH,ANZE,ADdD,AK4BC,AClBA,AtCCA,AaPED,AYjBC,AVgBH,AJUH,A6BUCA,AXVEA,IQeA,AClBA,EjBYE,AmBCE,CDGC,ADhBF,CAAC,ATGE,CeID,A5CNAC,AyBxBO,AVgBP,CY4CG,Ad3CA,CoBUD,AKJJ,CjBYK,AiBZR,ATGU,CQeD,ArCjBA,C2BoCG,AUnBF,ArCjBA,CqBWC,AMyBE,AWrCF,ATGE,CICb,CMYF,AlCFA,ALbe,AwCYE,CbwBP,AUnBR,AClBA,AtCCKA,AaPW,Cc2CC,CYrBC,AvCfF,AwCYE,CHKD,AxBxBE,CbOD,CyBxBf,AI0BkB,CUavB,AdvC6B,AeoCL,AXVA,CRSxBA,AgBME,ArCjBqB,AaPE,CAAC,Cc2CC,AtBvB3B,CsBuB4B,Cd3CP,AYjBhB,AeoCe,AXVS,ChBTC,A2BmBA,AXVA,CJ1BM,AVgBhB,AcUS,CAAN,CeIrB,A/Bb+B,Cc2Cd,A3BpCa,AaPE,AgBSA,CFkCC,A3BpCF,AaPA,Cc2Cd,AiB9Be,AvCOlC,AQpB8B,A2BmBV,AXVG,ChBTc,A2BmBrCD,AXVEA,CFkCoC,Ad3CR,Cc2CX,Ad3CE,Cc2CX,Ad3CNA,C+BaF,A5CNA,AyBxBG,CE4DqC,CtBvB1C,ALbyC,AyBxBO,CzBwBN,AeRxC,EVqBQ,CLbmC,EAA3C,C2BoCgD,CAAC,A3BpCF,EAAE,CAAjD,EAAoD,AyBxBjD,CE4DqC,CAAgB,AF5DK,CE4DrB,EAAmB,CAAnB,CAAhC,EACJ,QAAU,CAAC,MAAX,CAAkB,CAAlB,EAAqB,CAArB,CADI,IACuB,SADvB,GACmC,KAAK,iBAAL,GAAyB,CADlE,EACqE;AACnE,AtBxBJ,AgCIA,AClBA,AbvBFC,AVemC,IsB0BjC,EClBE,AbvBA,GpBqCG,EiCdL,CXsCY,AF7DdA,CYyCW,CAAC,IAAV,ClCvBF,EkCuBmB,ChCJjB,CsBwBuB,AtBxBJ,EgCInB,CVoB0B,CAAC,CAAC,QAAQ,CxB3CtC,AwB2CuC,KtBxBR,CsBwBD,CAAgB,CAAhB,CxB3C9B,CwB2CiD,CAAnB,AtBxB5B,CsBwB2B,EAAwB,QAAQ,CAAC,CxB3C9D,GAAkB,EwB2CmC,CAAgB,CAAhB,EAAmB,CAAnB,CAAxB,CAAD,EACpB,CAAG,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAH,EAA0B,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAA1B,CADoB,EAEpB,CAAG,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAH,EAA0B,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAA1B,CAFoB,CAAtB;AxB1CJ,AkBgBF,AXDE,A6BKF,AFGE,AClBA,AtCAuD,AaPrD,AEDA,AyBoBJ,AXVE,InBQA,A2BQA,EhBPE,AkBIE,ADfF,AtCAqD,CwCYpDA,CzBpBD,CLkBG,A4BVL,ATEKA,CnBQC,AGjBA,C2BmBC,CnBDC,ArBX8C,AwCY9C,CDGG,AFGF,ArCjBL,A6BCK,CUaG,AFGF,ARhBA,CnBQV,A8BEW,CAAb,CnBDe,AQTA,CnBQC,A2BQd,AxBzBc,A2BmBA,CzBpBD,AyBoBE,CGVjB,CNgBmB,AxBzBA,CHiBjB,A8BEkB,CDGd,EFGJ,ARhBqB,CRSvB,ARlBI,AgBSoB,ERSE,AkBIE,A1BtBF,A2BmB1B,CrCjBc,CwCOd,AHU4B,CXVC,C7BF2B,AwCY1B,AXVA,C1BP5B,AHMwB,AwCW1B,AXV6B,CAAN,CWUU,CXVC,CUalC,AvCfwD,C6BEjC,CcAvB,AJauC,AvCdP,A6BC9B,EAAqC,CAAC,IcAxC,AdA4C,E7BDH,C2CC/B,A3CDgC,CAAD,A6BCvC,C7BD8B,CAAa,A6BCK,CAAC,EAAjD,EAAqD,Q7BFC;AqBYtD,AM4BI,AgBrCJ,AjCQA,A6BKA,AFGA,AClBD,AtCCG,AaRE,AYjBN,AVee,AyBqBb,AXVE,CG1G8B,CAAX,EtBkHrB,A2BQA,AGNA,EfpCE,AI0BA,ERSE,ARlBA,CHiBC,A6BKE,C7BLD,AmBRA,CcAC,AdAA,CFqCI,CUrBF,AxBzBA,CwByBC,C3BRV,A8BEW,AXVT,CcAU,A9BTA,AYjBA,AeoCA,AXVA,CRSC,AWnHmB,AQoHrB,C9BFG,AsBlHlB,AK0HI,AGNA,CDGA,AVbe,CRSC,AsBThB,AdAgB,CRShB,AgBOiB,AZ1CA,AeoCA,CDGG,AvCdZ,CqBUW,AM4BG,AjB7BH,CiB6BI,Ad9CnB,Cc8CkB,AUrBtB,CVqBW,CAAe,AErCd,CFqCD,AErCa,CUaG,C7BL3B,A6BK4B,AdvC9B,CzByBmB,C2BsCc,A3BtCb,AyBzBU,CzByBX,A6BCY,C7BD3B,AwCW4B,AXVA,CAAD,CAAjB,CWUqB,CXVC,CUalC,AVbmC,CAAC,CFqC1B,Aa3B2B,CAAC,Eb2BM,Ca3BX,CAAS,CAAT,CXVC,CFqCe,Aa3BJ,CAAZ,AXVrB,CWUZ,AXVE,eFqC0C,GAAyB,CAAjE,EAAoE;ACDxE,ADEM,AjB7BN,A6BKA,AFGA,AClBH,AtCCI,AaRG,AYjBJ,AVc2E,AyBsB5E,AXVE,QhBTG,AEHuE,Ca+CtE,AlB3BA,AelCAA,CE+DC,CUrBC,EZ1CE,CZiBC,AYjBA,EfkCV,AKpB0E,CLoB7D,AGjBA,AYjBA,AVcwE,CFGjF,AYjBCA,EY0CL,AZ1CgB,CE+DG,CAAC,AjB7BpB,AHRF,AkB1BoB,CG6DlB,ADEmB,AcvCrB,CduCQ,CAAiB,AjB7BF,A6BKZ,AdvCY,CG6DC,ADEhB,GpBrCR,CqBmC4B,AlB3B1B,A6BKc,AdvCY,CE+DG,AF/DF,AVc+C,EAAxE,GYiDgC,CF/DlC,ClB0BF,CkB1BqC,CcuC1B,AdvC2B,CcuCX,ChCb3B,CkCFA,AhBxByC,ElB0BlC,AkB1BL,EcuCS,AdvCkC,EAAE,CAA7C,CcuCmC,CXsBb,AarCxB,AhBxBkD,CG8D9C,ADCI,GYxBkC,OXsBlB,EACR,GWvBqB,CEfrC,AFeuD,CEfrC,KbqCM,AWtBtB,EXuB0B,AWtBxB,EADF,CEfF,CFauC,CEbT,AFgBpB,CEhBV,EAAiC,SAAjC,EbqCwB,AarCoB,EbsCK,MatCjD,EAAsD,ObqC9B,EAEpB,gBAAgB,GAAG,sBAFC,CAAtB;APzBE,AM4BK,AcvCPD,A/BUA,A6BMC,AhCdD,A8BgBD,AxBzBI,AYjBD,GYoCJ,GhBDI,AInCA,EgBwBI,AlCEF,CGQC,A2BQA,GhBPG,CdTC,EcSE,CXDX,AelCY,CgBwBG,AhBxBF,ClB0BT,AkB1BQ,CfkCG,AelCb,CJmCc,AoBXE,CpBWD,CdTC,AkB1BA,EfkClB,C+BVuB,CpBWZ,CInCY,CJmCrB,AInCsB,CAAD,CAArB,WlB0B0B,KAA5B,EAAmC,EkCFjB,CAA+B,UAA/B,CAAlBA;ArBmBJ,ACPK,AO4BD,AlB7BA,A6BOF,AhCfI,A8BgBF,ArClBA,AaPC,AYjBA,ACsDDA,AXzCE,AyBsBJ,AXVE,I7BDA,CqBQA,GO+BI,AFTE,CcnBD,CpBOT,CAAA,ACPW,AXDA,AHRA,A8BgBA,ARjBA,EDsCE,A5BvCA,AeXF,CfWG,A0B8BE,AXzCJ,CsB6BG,ARjBX,CnBSY,AHRV,CGQW,AgBoBE,AXzCJ,CAAJ,CoBqBT,A5BRiB,CagBnB,ApBlBI,AeXc,AyBsBhB,CpBOA,CL7BkB,CLqBhB,AVVmB,CqCkBZ,ArClBP,CqCkBqB,AXYE,AXzCJ,CWyCK,CESpB,CRrBR,AQqB4B,CSrBjB,CFRT,CfQA,AiBA6B,CXY3BA,GWZO,CtB7BuB,CsB6BG,AtB7BF,CRaN,C4BQ3B,CfQA,AQqBM,CSrBG,C9BhBL,CqBqCqC,ASrBA,AtB7BrC,EAAqC,CAAC,CK6B1C,AeRA,AEQS,CAAP,CTqBI,AblDuC,CK6BnC,AeRC,CpBrBP,EAA6C,CakDG,CAAlD,AblDiD,CAA/C,CakDmD,CblDD;AK8BtD,ACPI,AM2BE,AQ5BJ,AMXA,AlCGE,A8BgBH,ArClBCA,A0B8BAA,AXzCI,AyBsBP,AXVE,MRUG,EoBZE,AzCCE,A0B8BA,CNZC,AqBnBF,C1BVD,CoBqBG,A5BRA,CcSC,AM2BG,EPpBC,AMYA,CLnBD,CcDC,ApBrBF,CRaR,AmB4Ba,Ce/Bf,CrBmBF,ACPiB,ArBXE,AeXJ,C0BUG,AlCGA,E4BQhB,AnCVoB,C2BsCE,CN3BX,AM2BY,ApBpCH,CcSC,AM2BC,ADRC,CCQZ,ADRa,CCQE,CAAf,CpBpCK,CQbQ,CMsBb,AdTT,AQbuB,CMsBvB,AM2B6B,ADR/BA,AXzCwB,CAApB,GfW8B,CAAC,I2BsCzB,E3BtCwB,C2BsCU,A3BtC5CA,K2BsCiD,iBAAL,GAAyB,CAAjE,EAAoE;APnB5E,ACPK,AO4BC,ADDI,AcvCJ,AJmBL,AnB/CM,ALsBH,AYlBA,ACuDAC,CNdJ,GKzCI,IZkBI,AaqCA,CR3DQ,CSmEN,AF/DA,ACuDA,CESC,EaxCE,A5BNA,AYlBA,ACuDA,GESP,CvB1BJ,CoCdI,A5BNY,Ce8CC,Af9Cf,AaqCe,CAAC,CCQG,Ad7CF,AaqCF,CCQK,ADRX,CCQU,AF/DnB,ACuDmB,CCQb,ADRG,CCQc,ADRvBA,CCQM,AtBzBR,KsByB+B,ETnE1B,CAAkC,Cb0CvC,CsByBoC,ECCT,EVpEtB,Cb0CL,Ca1C+C,CUoE3C,AVpEC,Cb0CI,Ca1CyC,CAA7C,EAAgD,KSmE7C;APlBV,ACRG,AO4BG,ADDK,AcvCN,AlCEC,AFYF,ALdA,AkB5BFA,ALsBI,AYlBH,ACsDCA,AXzCI,AcYN,EAAA,CJ9BA,GPCI,AW6BA,CAAC,C7BDC,AkB5BNA,AQ0DyB,CDtDlB,ClB0BC,AW9BA,AQ0DmB,CrBhBlB,AwBbT,CX7BAA,AW6BU,ChBPC,AaoCmB,EnB5BjB,AQbF,AcYX,CxBac,AUzBF,CFKR,CADe,CRqBV,ALdP,AaNc,AaoCoB,AXzCrB,CWyCsB,AXzC1B,CfWQ,A0B8BiB,CrBhBhB,AqBgBU,AXzCZ,CkBelB,AP0BwC,CAAV,AXzCV,CVyBX,AqBgBPA,EnB5BM,AQbe,CVyBG,IEZI,C0BE9B,A5BU+B,AUzBF,CAAC,ERa1B,EAAgC,EQb9B,EkBeN,A5BUE,AUzBoC,CAAC,GAAG,EAApC,CkBeN,ClBf8C,EkBepC,AlBfsC,CAA1C,EAA6C;AaoDhD,ArBtCG,A0BEJ,AjCJE,AaND,AYlBD,ACsDAA,AXzCM,AcYR,IJzBE,CZI0B,GakDtB,CG7BC,CJzBC,ACsDA,CO1BC,ClBfD,CRaG,APFA,AyBxBA,ACsDA,AG7BX,EQmBa,EJhBE,CAAC,AR5BA,AVaF,CRaR,AkB1BW,ACsDA,CnB5BC,AmB4BA,CAAD,CkB1BjB,AXAS,AP0BE,AXzCO,CkBeG,AP0BA,C1B9BC,AyBxBX,ACsDA,C1B9BY,A0B8BrBA,CDtDA,EQ4BwB,CjCJJ,CAAlB,COEE,GAA0B,C0BEvB,CAAP,GWAF,ArCFqC,AQbF,CAAC,MAAM,CAAC,C6Be3C,A7Bf0C,CAAP,ERa7B,AQbyC,MAAZ,CAA3B,I6BeR,GAAiB;AvBQjB,AM2BM,ActCJA,AGIA,ArCFG,AW/BL,AOKC,ACqDCA,AXxCK,AcYR,MX9BK,CGwCCA,AHxCA,CuB6BC,AGIA,AlByBmB,CkBzBlB,C1BjCC,AQ0DmB,CLlBlB,CAAC,AM2BG,CDTiB,ELlBjB,AoBXA,CpBWb,AHxCc,CAAC,CGwCC,AoBXA,AvB7BF,CGwCG,AHxCjB,AQ0DoC,CAAC,CR1DlB,AQ0DiB,CLlBhB,AoBXlBA,Af6B4B,CCSN,ADTgB,CCSf,ADTK,CCSN,ADTtBA,CCSW,CAAe,CN3B5B,AM2Ba,EN3Be,CAAC,CM2BI,GN3BA,MM2BrB,EiBlCV,CvBOF,AM2B8C,CiBlCX,CvBOS,GM2BO,iBAAL,GAAyB,CAAjE,EAAoE;AN1BxE,AO6BA,ADFM,ActCNA,AGIE,ALYJ,AhCdG,AyBbE,AMYA,AtCFD,AkB5BF,AQ0DAA,AXxCG,IMsBH,AHxCA,EAAE,CqB6CG,CEhBD,Af6BA,CEWC,AInDO,AMYA,ApB9BP,CGwCC,AM2BA,A3BvCA,A0B8BA,CLlBC,CAAD,AoBXNA,CpBWA,AuBPSE,AlByBA,Ce7BC,CHCP,ApB9BQ,CGwCC,AkBKd,AP3BK,AMYgB,AtCFP,AkB5BA,CUqEZ,AInDoB,AhCUP,AkB5BF,CAAN,CqB6CY,ADfd,AZ4BY,CEWC,AgBpCPA,ADFX,AXbK,ANwCa,CCSG,AiBlCVA,ANHe,AtCFlB,AkB5BW,AQ0DF,CLlBG,AM2BE,AKjDK,AhCUP,AkB5BlB,AQ0DS,CCSU,ADTA,CCSb,ADTG,CCSc,AWrCpB,AZ4BHF,CCSM,ActCNA,AFgBwB,ClBLD,AkBKE,ADfK,CjBUN,AoBXA,CpBWD,CAAX,AuBPHE,CjBkCoB,AiBlCd,EvBOc,ArBZvB,C4ByCwB,AaxC9BF,CbwC+B,AWxBd,AvCjBc,C2BuCG,GgBpCpC,CJcwC,CvCjBhC,CqBYN,GuBPSE,CAAM,A5CL2B,CAAxC,C2CGJ,CJcmB,AvCjB4B,C4CKpCA,CAAoB,ChBoCb,AWvBhB,CXuBiD,ADF3C,EiBlCGA,CAAP,GLaO,CAAC,IIfZ,CAAiB,GJcE,CXwBD,CAAhB,AetCF,CJgBE,CIhBsB,AJgBnB,KAAK,UAAR,GAAqB,yBAArB,GAAyC,IAF3C;AlBJE,AO6BAF,ADFO,AiBlCN,ADFDD,AJgBF,AP7BA,AMYAA,AtCFM,AkB5BL,ALuBCA,AYnBF,ACqDEC,GR3DF,CG0CE,EWtBE,AMYE,EVuCA,AetCE,A3CHF,AaLE,AakCiB,CCFgD,ATvDlE,AOIA,CJoCC,AM6BF,ADZqB,CLjBlB,AWtBA,AnBKE,CQiBD,AsBTE,AXbF,CdlBC,AQyDmB,CblChB,CQiBD,AiBVE,Ab1Bf,CJoCQ,CAAN,ARjBe,CyBOC,AzBPA,CVClB,A6BNI,AdlBa,AQyDmB,CLjBlB,AO6BA,AInDA,AdlBA,AQyDmB,CRzDpB,AQyDmB,CRzDzB,AQyDmB,CEYT,AWrBhB,AP9BD,AMYmB,AZ2BiB,CaTlC,AP9BN,AMYwB,AzBPP,AakCa,C1B7BP,AkB5BA,ALuBrBD,AakCAC,CLjBsB,AWtBA,AhCUA,AkB5BjB,EUqEmB,AVrEA,CqBgDf,ClBRiB,CAAC,AiBVX,CAAc,AtCFT,CAAjB,CGJN,CkBgBwB,CACpB,AiBXc,ECkBb,ElBPG,AiBXgC,CjBW/B,CO4BY,AWrBG,CpCxBxB,AyB6CyC,CP5BrC,AiBXc,CjBWL,EkBOgB,ADlBkB,CAAC,EjBW9B,CAAC,CAAC,AiBX2B,CAA/CD,EnCNA,AkBiBuB,ClBjBV,AkBiBK,CAAL,AkBOX,GpCxBF,AkBiB4B,CkBQrB,CpCzBY,EyB6CE,EP5BjB,AO4BFC,AWpBU,ClBTY,CAAN,GACqB,IAAI,AkBQpC,ClBRqC,EAD1B,CkBSO,CAAC,ClBRuB,EAD/C,EkBS6B,UAF/B,EAGE,EAHF,EA7FqB,CAgGb;ApCzBN,AkBiBD,AM4BK,AczCJ,AEEU,ApCAV,AyBZA,AMYFD,AtCFK,AkB5BH,ALuBA,AYnBH,ACqDGA,AXxCE,IGjBF,ALuBA,EyBOI,ApB9BF,CLuBC,CNOC,AMPA,AakCE,Ce7BDC,ATVAA,AdlBA,CAAC,AQyDE,CvBjCD,CmCMG,CGFD,AlCEA,AyBZA,AdlBA,AQyDE,Ce7BD,ATVA,AnBKP,AakCS,CY3BC,AzBPb,CVCY,CsCIC,ATVA,CzBYT,AyBZCA,AnBKS,CsBgBhB,AjBvCiB,CckBC,AdlBA,AQyDE,CRzDH,ALuBE,AakCE,CnB3BD,AyBZA,AdlBlB,ALuBkB,AakCA,CblCD,AakCL,CY3BU,AzBPtB,AakCsB,CMvCD,AMYE,AZ2BX,CvBjCL,AsCIe,CtCJC,AsCIA,CTVC,CAAC,ANuCE,CSlB7B,ChCfS,AsCIP,AHEFD,CnCNE,CsCI6B,CAAC,CTV9B,EAAiC,CSUC,ATVA,CGqBpC,E5BT8B,AyBZS,CNuCG,CMvCxC,ANuCyC,CAAD,CnB3BxC,AyBZyC,ANuC9B,ESlBb,AMX6C,AlCET,AyBZS,CSUC,ATV5C,CNuC+C,CSlBtC,AHrBqC,ESU9C,EAAkD,EAAE,CAApD,EAAuD,Mf6BvDA;AEaA,ADAI,AQ9BJ,AMXE,AGIF,ADH0D,AJqB5D,AhCpBI,AyBZA,AhCUD,AkB5BF,ALuBC,AakCAA,AXxCC,GGnBI,CyB+BqD,A9BN1D,GAAG,Ce8CC,AgBrCA,A/BTA,AakCE,CiB5ByD,AzB7B1D,ALuBF,C8BM6D,A9BNhE,AakCQ,CSlBD,AMXAC,AlCEA,EqCEE,A/BTA,AakCE,Ee7BA,Af6BE,CSlBD,AMXA,AECZD,ApCCE,AMPF,CAnB0B,E4BwBX,AlCEA,EGUjB,AgBiBqB,CSlBnB,ASPI,AlByBgB,CEYpB,AgBrCmB,AlByBA,CAAN,CEYQ,AFZE,CAAV,Ee7BW,CAAC,C/BY3B,AgBiB8B,Ge7B1B,ATVc,ESUe,CAAC,ATVb,CYcf,AZdgB,CzBYK,AyBZN,CYcnB,AlCQF,AsBtBI,CSUkC,CGIC,ElByBI,CAAC,ChBjB5C,AHVI,AmB2BuC,ChBjBpC,AgBiBM,Ge7BkC,A/BY/C,C+BZgD,Af6BE,ChBjBtC,G+BZR,EAAkD,EAAE,CAApD,EAAuD,Kf6BzDA;ANTJ,ACPE,AO6BI,AazCE,AGIF,ADHFA,AjCWAA,AHVE,AyBZD,AMWH,AtCDC,AkB5BC,AQyDAA,IRzDA,EAAE,CoB6BCC,CGDC,AECE,AjCWA,AgBiBA,CLjBD,AHxCA,CE+CT,AQsBU,AVrEN,AQyDQ,CNVZ,AuBlBa,ApCCF,A+BDA,CAAC,CMGC,AlCQE,AgBiBA,CiB5BC,AjB4BA,CLjBd,AiBXa,C5BWG,A4BXhB,CMGI,CrCFA,A+BDY,CAAC,ClBkBnB,AQsBoB,AazCA,Af6BE,CNVpB,AQsBmB,AlB7BE,AgBiBA,CY5BD,AZ4BA,Ce7BC,Af6BP,CAAU,CAAV,GY5Bd,CVwCQ,AlB7BQ,AgBiBa,CNV/B,AVPgC,A4BXF,CVwCxB,AUxCyB,CKAR,CvBkBrB,AQsB+B,AlB7Bf,A4BXhB,C5BWED,C4BX+B,CKAnB,CAAZA,KvBkBF,AMU0C,CAAC,CAAD,CAA7B,Ie7BkB,Af6BkB,Ce7B5B,CrBmBrB,CqBnBkC,CAAb,CrBmBT,CqBnByB,CAAhB,CAAf,Qf6BJA;ANTF,ACPD,AO6BO,AazCA,AGIH,ADHDA,AjCWA,AHVE,AyBZH,AMWC,AtCDH,AkB5BE,ALwBC,AaiCAA,AXzCA,GiBFF,CMeE,CMCA,ENDG,CVwCC,AazCA,AECE,ALAF,AZ4BE,CNVC,AY7BF,AnBMAC,AERA,CWyCG,CkBzBD,ArCFA,A+BDA,CAAC,CzBLC,AaiCE,CNVC,AqBnBF,A5BJA,CaiCG,Ee7BA,AECE,A9BLF,CyBKV,AzBLW,CyBKd,CVwCgB,AexCE,CvBkBpB,AQsBmB,Af7CA,AaiCE,CEYH,AazCZ,AHCc,AzBLlB,AaiCoB,CEYhB,AFZe,CiB5BG,A9BLF,AaiCP,CiB5BU,AjCWhB,AGhBc,AaiCE,CEYD,AFZT,EbjCW,CNMtB,AMNF,CHgBY,AgBiBgB,CY5BD,AzBLA,AERT,CRcU,A+BDA,AzBLA,C8BKV,ApCEd,A+BFuB,CAA3B,AzBLA,C8BKAD,AjCWiB,CGhBe,Oe8C1B,AFbmC,ChBjBzC,AgBiB0C,CAAD,ChBjBb,AgBiBjB,EhBjBX,EAFU,AgBmBsC,AXzChD,CLwBgC,IkB8Bd,CAAC,CAAD,ArBvCH,CqBsCO,EACC,ErBvCH,ImB0BpBA,EnB1BI,EAAwB,KqBuCU,CAAC,CAAD,CADhB,EACqB,SrBvCL,KAAlC,CqBuCsD,CAAC,ArBtCrD,CqBsCoD,CADpC,CAAlB,ErBrCO,iBADP,EAC0B,IAD1B,CADwB,EAGxB,wBAAW,KAAK,MAAhB,EAAwB,mBAAU,IAAlC,EACE,KAAK,gBADP,EACyB,IADzB,CAHwB,CAA1B;AakBN,AQuBQ,ADHA,AiBnCF,ADHFC,ApCME,AyBjBF,AMWD,AzBLGD,AaiCFA,AX1CuC,CK8B3C,OQyBQ,AezCA,AjB4BE,EbjCE,AaiCA,CkBzBDA,ArCGA,CoBgCK,AgBtCZC,CjB4BW,CbjCC,AaiCA,CkBzBC,CjBmCG,Cd3CD,C+BQb,A/BRc,Cc2CG,CCGH,AFbE,CEaD,Af9CE,AaiCA,CEaH,AgBtCI,A/BRA,AaiCF,CEad,ADHmB,Ad3CJ,AaiCP,CCUY,Ad3CR,AaiCM,CbjCC,AaiCX,CEaU,Af9CN,Cc2CG,AiBnCM,A/BRV,Cc4CT,ApBjCJ,CAAuB,AmBsBE,CbjCC,GNW1B,AMX6B,CAAC,CNWD,AMXA,CAAH,CAAO,CAAP,Cc4CT,Ad5CjBD,Cc4CkB,ApBjCgB,CoBiCjB,CAAb,ADXkC,CEclC,ADHiB,ADXkB,CCWnC,ApBjCJ,AmBsBsC,CCUrB,ADVR,ECWgB,EiBpCzB,AlByB6C,EkBzBE,IhBuC/B,CAAC,CAAD,CADI,ADFgB,CAAC,CCGhB,ADHe,CAAX,CAAe,CAAf,CADR,CDVnBA,CCW8C,SCGR,CAAC,CAAD,ADHmB,CCEnC,ADFoC,CAAD,CCGd,ADHG,CAAe,CAAf,CAD3B,CAAf,WCIsD,CAAC,CAAD,CADpC,CAAlB;ARrBR,AQuBO,ADHC,AczCA,AGKA,AlCOJ,AHJC,AyBlBY,AMYhB,ApB9BC,AQ0DEA,AX1CEA,AyB0BC,MtB1CD,CUmEA,AVnEC,CRwCC,AgBkBE,CchBM,CtB1CN,AQ0DE,ECWI,AczCJ,AGKA,A7BjBA,CawDC,AlBhCA,AgBkBE,EAAE,CCWG,ATrEJ,C0BiCC,AvCUf,Aa3Ce,CRwCC,AQxCF,CSqEO,ATrErB,EuB4BmB,AvB5BA,AQ0DE,Ce9BD,Af8BE,AX1CF,CYqDK,AjB7BJ,AuBPrB,APyBqB,CCWK,ADXX,CAAU,CAAV,CCWM,CACb,Aa5BH,CAA6B,C9BFhC,AgBkB4B,EhBlBA,C+BZpB,CAAsB,ApCehC,KsB2BqB,AiBrCX,AXAV,AOSK,Cb4BiB,AiBrCgB,CjBqCjB,Aa5ByB,Cb4BtC,CAAiB,AiBrCf,AvCUV,AqBe2C,CCYnC,ADZoC,CCWvB,AiBpCsB,AlByBA,Ce9BjC,Af8BG,CCYgB,Ac1CvB,CRKN,CQL+C,Cf8BG,EchB7C,EAAsD,GnCC3D,CsB2BwC,CAAC,AiBrC/B,CjBqC8B,AtB3BvB,CsB2BY,AiBrCvB,AXAN,CNqC4C,CAAf,AiBrCgC,CjBoCxC,AMpCL,ENqCgC,ADZ9CA,AchBG,Cdf2D,CceS,Sb4Bd,CAAC,Aa5BvD,Cb4BsD,CAAX,Aa5BqC,Cb4BtB,CAAf,CAD3B,CAAf;ACIA,Aa5CE,AGKA,ADJN,AjCWE,A6BUJ,ANjBE,ADhB8D,A3B0B9D,Aa3CA,ALwBE,AETgB,AyB2BpBA,IRzBgE,AdjB9D,EAAE,AsB0CE,CDQC,APjCL,CJuDI,Ae3CA,AtCcA,CAAC,Aa3CA,CuB4BC,C/BYC,AuBPA,ApBTAC,C2BkBG,ECdA,AFsBZ,AlCPY,Ca3CC,ALwBA,A2BkBE,CtB1CD,ALwBA,C+BSC,ADJA,AJqBE,ArBlDJ,CRwCT,AQxCG,CLwBU,CegDC,AfhDd,C+BSI,ADJW,AzB7BA,CAAjB,ALwBkB,CegDC,AWtBE,A1B1BF,ERmBnB,CQnBsB,CRmBC,AQnBA,C0B0BG,ANjBZ,EAAP,ApBTmB,CAAxB,CoBSgB,CpBTW,CAAC,C2BkBG,C3BlB/B,A2BkBgC,CDQnB,ANjBQ,CpBTW,E8BKP,AJqBW,INjB/B,CAAP,CMiBe,ACRkB,CGbjC,AHaFD,EGbsC,AJqBW,GXsBZ,CWtBrC,WXsBqB,EAA8B,eAA9B,CAAf;AACD,ADHC,Ac1CM,AGML,ADJH,AjCUY,A6BahB,APnCC,AdjBA,ALwBK,AEVgF,AyB4BtF,GtB5CA,KHgBsF,CGd/E,AsB0CA,EGbE,ChBwCI,Ad7CH,CKxBC,ALwBA,Gc6CM,AZvDoE,CFUtE,AEViF,CFU1F,Cc6Cc,ATrEH,CAAC,ALwBA,CKxBD,CAAN,CSqEC,Ca3BU,CtB1CC,AsB0CA,Cb2BK,ATrErB,CyB6BH,CAAsB,AzB7BA,EHc2D,CYuDpD,AgBxC7B,AHakB,CzB5BlBA,CyB4B2B,EGbE,IAA7B,KHakB,EAAsB,Eb2BhB,GAAyB,CAA/C,EAAkD,Ia3BlC,EAAoC,UAApC,CAAtB;AZ+BG,ADHK,Ac3CqD,AGOxD,ADJD,AjCSqC,AsBrB1C,A3B0BK,Aa3CF,ALwBM,A2BkBT,ItB1CG,EyB6BE,AjCSqC,AQtCrC,GAAG,CSqEC,Ac3CqD,AEGrD,AzB7BA,ALwBA,CHcsC,CAAC,CiCTpC,AtCcA,Aa3CA,ALwBA,CAAC,CAAD,CAAH,CHcJ,ALKA,AQnBW,Cc6CG,Ad7CV,Cc6CW,Ac3CmD,AvB1BrD,CuB0BsD,AvB1BrD,CAAD,CAAf,ALwBkB,C4BEyC,A5BFrD,C4BEmE,Cd2CnE,GAAoB,Qc3CiC,AEGpC,CFHjB,Ed2CA,UgBxCJ;AhByCK,Ac3CD,AGOL,ADJA,AtCcA,Aa3CF,ALwBM,AYnBF,ACsDHA,AX9CE,GGfG,EyB4BL,GjBiCM,CR3DD,ALsBD,AYjBQ,CgBqBN,CEGC,E5BhBA,CAAC,C4BgBG,A9BLA,C4BEC,C1BbD,C4BgBG,A5BhBP,CZWT,AgCeA,AMbiB,C1BbD,E4BgBI,A5BhBF,C0BaG,CAAC,C1BbD,CURhB,CkBwBoB,AlBxBO,EUkChC,AToB6B,GejCZ,AhBrBZ,ACsD2B,CvBnChC,CsBnBuC,ACsDrCA,CX9C6B,CAAC,EoB0BhC,CMbqC,GtCFrC,AYXI,C4BgBK,ClBxBJ,AVQmC,CoB0BxC,AQV2C,A5BhBF,CURU,EUkCzC,ApB1BkC,EAAxC,EAA4C,CZWhD,CAAY,AYXsC,CAA9C,EAAiD,C0BaN,ChBrB1C,EAA6D,CtBmBlE,EAAsB,AsCEd;AtCDN,AyBgDA,ADHK,AQ9BL,AQVE,AjCQA,AQrCF,ALwBM,AYnBR,ACsDEA,AX9CI,IGbJ,EAAE,AOKA,EGmEE,AFbE,CEaD,AOjCA,AjBvCA,CRqCC,AQrCN,ALwBM,AEXF,CZWG,EwCKE,A9BLA,CAAC,CHaC,AsBnBA,AnBMF,CsBeT,AtBfM,AYnBM,AVQF,CFWG,C8BKC,A9BLR,CVAS,CYXD,CURG,CtBoBf,AOYA,CGbiB,CHaC,GGbG,EamCI,AX9CJ,CZYb,AyB+CG,AfhDa,AYnBxB,AVQsB,EW8CM,CbnCD,CVCf,AwCIL,A9BLqB,AYnBA,ACsD9BA,CiB9B+B,A9BLF,CAAH,CAAO,C8BKxB,A9BLiB,CVCP,AwCIjB,A9BLI,AYnB6B,CVQD,CAAC,Ca2D9B,Ab3D6B,Ca2DlC,Ab3DuB,CURiB,CGmEZ,Ab3DW,IZWxB,GAEb,EsBrBJ,EAAsD,AVQ7B,CAAnB,CZaI,CAAC,IAAP,CAAY,KAAK,UAAjB,EAA6B,MAA7B,GAAsC,CAFxC;AyBiDE,ADHC,Ac5CG,AGON,ADHE,AjCQE,ALKJC,Aa1CD,ALwBM,AYnBL,ACsDA,AX9CG,IW8CH,CCjB0B,CA2BtB,AgBxCF,AjB8BA,ErBjBE,CoBrCCA,ACsDA,CCjBqB,AgBbpB,AjB8BN,CEaO,ADHE,AiBrCF,CvCUC,CsCbC,AjCQA,AehCA,CgBoBC,AhBpBA,CEqCgB,AtBAf,CuB8BT,AD9BF,AiBVA,CnB3Ba,CAARA,CGmEU,Ca/CT,A/BYF,ALKY,AoBrCA,CfgCC,C+BZC,AEIA,AlBxBA,GAAG,CkBwBC,AjCQlB,GAAqB,CehCC,CpBqC1BA,AoBrC2B,CpBgCZ,CKAX,IehCJ,CGmEyB,CHnEU,CAAC,GGmElC,AHnEqC,EkBwBP,AlBxBhC,EAA2C,EAAE,CkBwBpC,AlBxBT,EAAgD,CkBwBR,uBAAc,aAA7C,GACJ,SAAS,IAAI,mBAAU,MAAvB,IAAiC,SAAS,IAAI,mBAAU,KAAzD,GACE,uBAAc,WADhB,GAC8B,SAFhC;AvBmBN,AQyBK,ADHA,Ac5CO,AEMP,AjCME,A6BcL,A1B3BK,AYnBD,ACsDF,IAAA,CEWA,CHjEE,ACsDA,CaRG,EbQA,CNZT,AMYI,CNZJ,AQyBW,Ca/CC,IhBpBI,CAAC,CgBoBC,AhBpBF,CAAV,CL0CN,CAAE,AqBtBoB,CF0BpB,Ad9CoB,Gc8CK,Ed9CA,CAAC,CL0C5B,AqBtB8B,AF0B5B,Ad9CyB,CgBoBI,AhBpBzB,EL0CJ,EqBtB4B,CAAR,KAAmB,CrBsBvC,IqBtBU,IrBsBV,GAAW;AACX,AQyBID,Aa/CK,A/BYN,A6BeH,ArBrDA,ALyBG,AYnBA,ACsDD,AX/CE,IW+CF,ChB3BA,CgB2BE,GNZK,AFhDF,CUyEG,AFbF,ChBtBC,AQtCA,GEgDK,AFhDF,CRsCC,CQtCN,GAAU,CEgDjB,AVVkB,CkBmCG,AVzEF,GUyEK,AVzEF,CRsCC,CQtCvB,IRsC4B,CgBsB1B,MhBtBO,CkBmC6B,CAAC,AlBnCF,yBkBmCb,CAClB,YADkB,EACJ,KAAK,QADD,CAApBA;ARxBN,AOsBE,Ac5CO,AEKL,AjCOE,A4BPC,ApB/BN,ALyBE,AamCC,AX/CC,CKiCL,COwBE,CdhFqC,CasEnC,EAAE,EiB7BE,CLAQ,CZ6BN,ChBtBC,CiCPC,GLAL,CKAS,ALAO,E5BOjB,CiBgCe,AWvCd,EAAqB,CXuCJ,ApBlCtB,C0BHA,CNqCA,AWvCK,CKAH,CLA6B,CKAN,IjB6BvB,CO3BF,O1BGA,E0BHA,MAAA,C1BGA,A0BHO,GAAP,EAAY,QAAZ,C1BGA,C0BHsB,E1BGL;AacnB,AQyBM,ADJN,AgBvCM,AjCMY,AHDd,A0BHAC,AKFFD,Ab1BE,ACuDA,CCrIJ,GF8EI,ACuDA,EY7BI,AZ6BF,CY7BG,CLED,C1BGC,AkB/BA,Ca0BG,AZ6BF,CEcCC,Ae3CA,ClB1BC,Ca0BG,CAAC,CV2CD,EKzCXA,ELyCe,EU3CP,CV2CU,AU3CE,Ab1BpB,EkB0BE,CAAmB,ALAb,CAAVD,C/BKE,CAAwB,CoCLC,EjB6BzB,EEc6B,CAAC,CrBtC9B,CAAgC,EqBsC9B,EAAkC,IAAI,IAAI,Ee3CvB,CAAoB,IAApB,EAA0B,ApCK/C,EqBsCuD,CAAC,Ce3CnC,CAAnB,Ef2CA,EAA4D,IAAI,EAAhE,EAAoE;AAClE,ADHR,Ac9CQ,AEMH,AjCKsC,AHAvC,A0BHA,A5BWA,AiCbFA,Ab1BC,ACuDC,AXhDA,IkBqBA,AP2BA,EhBxBuC,A4BLnC,AZ6BF,CrBhBC,EERE,CmBwBC,ChBxBsC,A4BLnC,CGND,A/BWqC,CkBsCpCC,AajDA,ARQA,CKFG,CAAC,CLED,CLyCC,AlBtCX,C4BLc,CGNZ,AHMa,CAAnBD,CV2CmB,AajDA,GbiDG,GrBtCpB,GAA0B,CmBwB1B,GnBxBA,A0BH8B,CLyCC,AKzCA,CLyCC,EKzCF,CAA9B,CLyCI,EAAkC,IAAI,IAAI,WAAW,CAAC,IAAtD,EAA4D,IAAI,EAAhE,EAAoE;AAClEA,AajDA,AlCWP,A0BHC,A5BWE,AQnBJA,AaoCEA,AXlDS,AyBgCN,M3BlBC,CAAC,CaoCC,CO5BD,AOUO,CClBN,ApCmBA,AQnBE,IeiDI,AvB9BF,AQnBE,CRmBD,EoCnBE,CbiDG,CfjDR,C4BAQ,A5BAE,CeiDC,AfjDX,CoBQR,ApBRFA,CoBQqB,A5BWb,AqBiBe,EepCf,CfoCkB,CO5BD,AP6BrB,CAAC,CrBlBsB,AmCDtB,CdmBD,AcnB+B,EdmB1B,EAAL,EEYgC,AFZvB,CEYwB,AFZjC,CO7BiB,CAAgB,AP6BrB,CAAZ,AcnBC,EZ+BqC,AFZvB,AcnB4B,EdmB1B,GAAG,CO7BH,A5BWgB,CqBkBjC,CEYgC,AKzCY,AP4BtB,EEa0B,AFXhD,CO9BiB,AP8BhB,CrBnBD,C4BXiD,AP8BjD,CEWgC,AvB9BS,CqBmBpC,CEWiD,CFXtD,EAAS,CEWuB,AFXhC,CO9BiB,CLyC2C,AKzC9D,AP8Bc,CAAZ,EAAe,EAAE,GAAG,EEWY,AFXhC,CEWIA,AFbkB,EAGtB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAE,GAAG,EAApB,CAHsB,EAItB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAE,GAAG,EAApB,CAJsB,CAAxBA;AenCK,A/BUH,A6BiBJ,ANnBE,A5BWI,AiCdN,Ab1BA,AC8DEA,AXvDE,AyBgCJ,EAAA,EPVE,EKHE,CCsBG,CbcC,CD9DD,Cf+BC,C4BLR,CEaU,CPVC,AKHA,Cb1BX,AVOU,CLwBG,A6BiBb,AlCRa,AmCDA,CPVC,EMmBI,AxBzCJ,CZed,AoC0BmB,AlCRb,AqBsBa,CadD,EKpBlB,AlCGI,A6BiBkB,AbcA,CadJ,AxBzCR,CLwBY,A6BiBtB,AxBzCoB,MyBgCO,MIX3B,IJWa,CrCjBb,A8BO8B,AOU9B,IIXA,KzCNA,CuBwCwC,IOjCtC,CWDF,A7BrBoD,C6BqBxC,G7BrBF,CAAN,KWuDkB,CkBlCtB,AlBkCEA,EvBxCF,AyCMwB,CzCNJ,IAApB,EAA0B,EyCM1B,EAAmC,IzCNnC,EAAoC;AAClCA,AyB+CM,AahDH,AGOH,AlCGI,AuBFJ,A5BWG,AiCdH,AzBNF,AYpBD,AVOI,AyBgCHC,IFbE,EEaE,CFbC,AzBNAA,CVEG,AyCMF,ANFA,CMEC,AXCA,EpBTE,CAAC,A2BmBA,C9BRC,CkBsCC,AU3CV,CAAW,AzBNA,A2BmBA,CFbX,AzBNY,CVEG,CyB+CT,AU3CQ,CAAd,AzBNe,CVEG,AyB+CF,AlBtCZ,AGXN,CHWmB,CuBFjB,ApBTkB,CoBSC,ApBTA,EVEI,AqCiBF,C9BRjB,A8BQkB,CPVC,ApBTA,CAAzB,CHW2B,CGXC,CAAC,EHWvB,AGXN,EVEoB,AUFa,A2BmBpB,CrCjBuB,CqCiBpCA,CPVqB,CAAgB,C9BPjB,CAAlBD,EyCMA,EAAiC,GXCd,EAA2B,GAA3B,EAAgC,QAAhC,CAAnB;ALyCQ,AahDP,AGOCG,AlCGC,A6BiBL,ADtBC,AzBNC,AayCA,AX7FF,CRnF0B,CAAJ,EMuIpB,CAAC,C+BQCA,ALoBE,A1B5BF,CAAD,CAAD,AayCI,CAAC,EbzCE,E+BQLA,ALoBS,CKpBTA,ALoBU,A1B5BF,CNvIc,AMuIb,CNvIf,AMuIc,CeiDG,AfjDN,CAAO,C0B4BV,A1B5BG,CayCP,EAAkB,CkBjChBA,A/BRiB,C+BQX,ALoBc,E1B5BA,CAAC,CAAD,CeiDd,AfjDW,CeiDO,AfjDA,CAAP,CAAnB,C0B4BF,CXqBU,CAAuB,AgBzC7BA,ALoB+B,CKpBzB,GhByCA,CgBzCNA,CAAiB,IAAjBA,EAAkB,UAAlBA,EAA8B,SAA9BA;AzCNF,AyBgDO,AgBzCL,AlCGD,A6BiBD,AlCTE,ALbC,A0BmCD,AcvBJ,K9BZS,CLaL,AmCDA,CAAC,CrCjBC,CoC2BG,AvCtBK,CKaN,CKRC,ELQE,AmCDX,ExCZK,AwCYQ,CxCZQ,CGLnB,AEkBa,CAAC,CFlBC,AgCcjB,GnCTK,EuCsBH,AvCtB2B,GuCsBF,CvCtBtB,CKaD,CLb+B,IuCsBD,CAAC,EJbnC,CnCTK,EuCsBsB,AvCtBkB,CuCsBJ,GAAd,CAAkB,CJb7C,EnCTK,EAAkD,KuCsBD,GvCtBjD,CuCsBwC,CvCtBoB,CmCSjE,AIa4D,CJb5C,AIa6B,EAAkB,UJb/D,EAA8B;AhCb1BH,AyBgDG,AOlCL,AMfA,AGQC,AlCGC,A6BiBA,AlCTD,AiCdH,AtCCAA,AaPE,Aa0CC,AXvDH,AyBgCEA,KnCJA,CKHE,AVLE,EwCYE,CLHD,AGVA,AzBNAC,AEbA,CZeG,AoC2BE,CE5BH,A/BWA,CAAC,A8BOE,CnCCD,AQpBA,CyBMX,AzBNY,CVEG,AYff,AyBgCe,E9BPX,ALGF,ALRe,AaPF,CVEG,AsCDhB,A/BWc,AGZA,C0B6BK,AlCzBJ,CLGG,CaPD,A2BmBE,CLHnB,AIasB,A1B7BtB,CHYE,CGZkB,CsBgBC,AtBhBA,CHYC,A6BiBI,CpC3BD,CAAC,CUFD,CAAzB,CHY2B,CAAC,AGZA,CAAC,CbOG,CGLhB,AHKiB,AaPjC,CVEkC,COUhC,AGZ+B,IbOD,CmCSM,CAAC,AnCTE,AwCYN,CrCjBnB,AoC2BM,CpC3BpBD,AoC4BE,EvCvB4B,CAAlCA,CuCuBY,CAAC,GAAP,CAAW,CJduB,AIclC,CJdJ,CIckB,CCXuB,GDWnB,CAAC,CAAD,CAAlB,CADkB,ACVH,CAAN,CDWe,ECXwB,EDWpB,CAAC,GAAL,CAAS,GCXyB,CDWrB,ACXsB,CDWrB,CAAD,CAAJ,GAAU,CAAnB,EAAsB,CAAC,CAAvB,CADN,EAElB,ECZgD,EDY1C,ACZVA,CDYW,GAAP,CAAW,CAAX,EAAc,IAAI,CAAC,CAAD,CAAlB,CAFkB,EAEM,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnB,EAAsB,CAAC,CAAvB,CAFN,CAApB;AXsBC,AOlCH,AzBJE,A6BmBA,ADzBL,AtCCCC,AaPI,AEbL,AyBgCG,IAAA,E9BPE,AVLA,AaPA,GsBgBG,AtBhBA,CAAC,A2BmBA,C9BPC,AGZF,CHYG,AGZN,C0B+BS,A1B/BF,A2BmBA,C3BnBP,CbOS,CmCSX,CzBJE,CAAY,AVLA,CaPC,G0B+Bb,A1B/BgB,CHYhB,AGZiB,CAAD,CAAH,CHYO,AGZA,CAAP,EbOU,CAAC,CUKC,AGZA,CHYC,AGZA,CAAC,CbOJ,AaPG,CbO9BA,AaPI,EHYA,I8BOsB,CAAC,IAAhB,EAAsB,CAAC,IAAvB,EAA6B,IAA7B,EAAmC,IAAnC,CAAT;ArCjBE,AiBuBN,AwBhBID,AlCIC,A6BmBE,A1B/BF,Aa0CD,AcvBD,IduBC,CahByB,EAKpB,CKvBC,EzCPA,AiBuBV,CAAA,AmBE6B,AbgBlB,CahBP,AbgBQ,EvBzCE,EuByCV,EvBzCc,EiBuBlB,CAAE,AwBhBqB,EzCPA,CyCOG,KAAK,QxBgB/B,EjBvBM,CiBuBJ,CjBvBuC,QiBuBvC,KwBhBwB,CAA+B,UxBgBvD,AwBhBwB,CAAtBA,ExBgBiB;AACnB,AQ0BI,AgBzCF,ALsBC,AlCXD,ALdF,AkB7BK,ALuBJ,Aa0CC,GalBF,CbkBE,E1BpCE,CAAC,EoBkBI,AwBfF,ALsBE,ArBtDK,CUyEN,CvB9BC,AqBsBA,CAAC,CaXG,CnBPC,CQ0BD,AvB9BX,CLdF,E4CGE,A5CHc,C4CGC,ALsBR,CIxBT,CJwBqB,AbWnB,MEQM,AVzEH,CE+CI,AQ0BiB,AVzEO,E0BgC/B,CAA2B,CxBeG,EQ0BxB,AVzEH,E0BgC6B,A1BhCO,GUyEJ,CAAjC,EAAoC,Ae3CxC,GCE6B,C1BhCxB,EAAgD,C0BgCN,EDF/C,IvBiBgD,KAAK,EwBfxB,GAAkC,CxBe/B,CAAhC,GuBjBA,CAAoB,GCES,GAA8C,EAAzE,QDFF,EAAsC;AxCLhC,AiBuBR,AQ0BQ,Ae3CJ,AjCIA,A6BoBA,AvCzBA,AkB7BF,AQiEEA,AcxBF,CpBIF,GpBhBI,IGLI,AuByCE,CiBnCD,AJwBE,ArBtDF,AsByCA,E9BPE,EkBuCE,A5B5CA,EwCYX,C9BPc,AVLA,CGLC,AuByCE,CvBzCD,AyBiDV,Ae3CJ,CAAe,AzB9BA,CAAC,AQiEE,CEQD,AFRE,EvBzCN,AuByCQ,CvBzCjB,AwCMJ,AjCIO,CAAc,CQlCN,AQiES,CvBzCD,AHKA,CUKhB,AVLiB,AkB7BA,AQiEL,ChB/BnB,A6BoBA,CAA4B,CbWC,C1BpCN,CAAX,A0BoCM,GaXlB,AvCzBgC,C0BoCG,C1BpCnC,AkB7BkC,AQiElCA,CRjEmC,CUyER,AVzEO,CAAnB,CfwBX,CexBmC,EUyEnC,QVzE6C,CAAC,CAAD,CAAlC,CAAjB;AfyBM,AiBwBR,AQyBO,AgB1CH,ADDA,AjCIA,A6BoBC,AhCpBL,APLG,AkB7BF,ALsBC,Aa2CEA,AcxBH,M9BPK,EgB+BI,CkBlCDA,ADDA,ApCIA,AMZA,CVEC,AUFR,CHYS,EkCHI,EzCPA,AyCOX,ElCGA,AgB+Be,EkBlCE,ClBkCC,CAAC,CnB/BvB,CmB+ByB,CkBlCC,CDDtB,ApCIqB,CmB+BG,EiBnCA,AjBmCL,GvBzCb,AuByCuB,CvBzCD,CuByCV,GvBzCZ,CAAF,AuByC+B,CAAnCA,MiBnCA,ECCA,EAA8C;AzCN3C,AyBiDF,ADJL,AiBtCMA,ADDF,AjCIA,A6BqBJ,AhCrBEA,AMZD,Aa2CGA,Ca9IJ,KhC+GQ,CJdF,CuB6CI,CiBnCD,ApCIE,CqCHC,AlBkCA,ChB/BD,CHAG,CJVD,AwB6Cb,ADJe,CCIf,EgBvCI,AjCIY,CAAC,EkCHI,GAAG,CjBsCxB,AjBnCI,CiBmCF,GiBtC2B,ElBkCE,CAAC,MCIhC,GAAE,ADJ6B,EAAY,GnB/BP,CAAtB,EAAyB,CoBmCrC,ApBnCY,CqCHU,ArCGtBA,CqCHkD,AlBkCrB,EkBlCP,AlBkC8B,CkBlChDA,ClBkCyB,EAA2B,EAA3B,CAA3BA,CCIF,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC;AxB5ClC,AwB6CN,AiBtCI,ALyBN,AhCtBE,APNAC,AyBxBK,AC6DHD,EnB/BF,GAAG,CqCHC,ArCGA,APNA,C2ByCG,CxB7CD,AuByCE,CD7DM,CC6DJ,GAAG,EkBlCA,ArCGb,CqCHc,CzCPC,AwB6Cf,A3BzCe,CGJC,AwB6CE,ApBnCF,EPNE,E2ByClB,AFjEK,CEiEkB,AFjEK,CtBoBtB,CAAiB,EyCOnB,CAAsB,ClBkCG,CvBzCvB,AuByCwB,EvBzCA,AHIA,CGJxB,AIUN,APN+B,AyBxB1B,EAAmC,EmB2BL,ElBkCN,EkBlCU,AlBkCE,C1BrCX,EAAY,M0BqCb,E1BrCC,A0BqCsB,EkBlC1B,A5CH0B,A0BqCvB,EAA2B,CkBlCD,ClBkC1B,CAA3BA,G1BrC4B,EAAgC,E4CGpC,GAAyC,A5CHrC,CAA9BC,C4CGI;AjBuCF,AiBtCC,ArCGH,AkB9BA,AC6DED,EnB/BF,AkB9BA,EEiEE,CpBnCC,CAAC,EmB+BI,ECIE,ADJA,ECIE,CAAC,AFjEF,AC6DE,CnB/Bb,AkB9BY,ClB8BC,CAAb,CoBmCY,AFjEZ,ClB8BgB,AkB9BA,CEiEG,ApBnCnB,EAAmB,CAAnB,CoBmCY,Ac9CZ,ARSA,C1BEsB,CoBmCG,ApBnCzB,GkB9B0B,CEiEd,AMrCZ,AR5B2B,AC6DE,CCGN,ADHO,MD7Dd,EQ4BhB,AR5BA,CC6D6B,CD7DS,CQ4BtC,APiCyC,COjCrC,GAAJ,EAAS,CQTT,EhBnBA,AC6D6B,EOjC7B,APiCoD,EOjCpC,APiCa,EAA2B,Ce1CxD,Cf0C6B,CAA3BA,KOjCF,EAA4B,aQT5B,CAAuB,UAAvB,EAAmC;AtCC7B,AwB8CJ,Ac9CA,AlCWF,A0BFE,AjCLF,AyBvBA,AC8DE,ICGA,ADHA,E1BvCE,EiCKE,C1BEC,CoBmCG,Cc9CD,Af2CA,CvB3CC,AwB8CE,Ac9CV,AlCWQ,AmBgCA,CCGG,ApBnCF,CoBmCC,EAAI,CAAJ,A3B1CZ,CiCKE,APkCA,CCGiB,ApBnCnB,APPiB,A0BuCA,CCGL,AMrCM,C9BTC,AuB2CA,CvB3CC,AuB2CA,CD9DH,AC8DE,CAAjB,EAAsB,EvB3Cd,AuB2CgB,CAAC,CAAD,CAAxB,EvB3C6B,AsBnB/B,CtBmBM,CsBnBuB,CtBmBK,SsBnBlC,EAAyC,cAAzC;AtBoBQ,AwB2Ce,ApBhCxB,A0BFK,AKHC,AtCFH,AyBvBH,AC8DG,GCAF,CDAE,I1BvCI,CsCEQ,AtCFP,EiCKE,APkCA,CAAC,CYrCL,CAAc,GnCNJ,AmCMV,AtCFH,CiCKE,APkCF,CS5BF,AFNiB,AKHO,AtCFP,A0BuCA,EAAE,CvB3CC,A8BShB,APkCgB,CYrCf,AZqCc,CAAjB,CYrC4B,CLGN,APkCA,EAAE,CAAC,CS5B3B,AT4B0B,COlCtB,APkCF,CvB3Ca,CAAgB,IAAhB,CAAP,CgCeR,QAAA,CAAS,KAAT,EAAgB;AhCdT,AwB8CT,AQ/BI,AFNC,AKHHA,AZqCE,CCFJ,GDEI,COpCA,CKDI,GHSC,EFNE,APkCA,CYrCG,AZqCF,GS5BR,AGTa,EjCaf,C8BJgB,AGTE,AZqChB,CYrCiB,AZqCF,EAAE,CAAC,CS5BlB,AT4BiB,CAAjB,CYrCa,CZqCS,EAAE,CAAC,CYrCG,AZqCJ,CYrC1BA,AZqCE,QrBxBF,SAAA,mBAAA,GAAsB;AFlBjB,AiBuBP,AOwBA,AQhCI,AFNEA,A5BUF,AiCbFC,AtCFI,A0BuCF,IAAA,EYrCE,AtCFA,EKeE,C8BJC,A9BIA,CeIT,AadY,CbcZ,AkBjBEA,AZqCS,CAAC,ErBxBE,CERC,C4BIX,AT4BA,C1BvCa,CiCKG,AjCLF,EoBmBlB,CAAE,AadqB,I5BUnB,C4BVwB,AjCLtB,CKeqB,ELfE,IiCKN,CAAa,AjCL9B,CoBmBN,EaduB,CbcrB,AadID,SbcJ,cAAA,GAAiB;AjBtBd,AiBuBH,AeRC,AFNG,A5BUA,ALfD,A0BwCD,IAAA,KNrBO,EadA,APmCA,CAAC,ENrBI,IadV,CAAa,EvBEjB,AgBiCE,COnCE,APoCA,INtBJ,AadwB,KAApB,CvBEJ,CgBkCe,CAAC,CAAD,CADb,EACkB,GhBlCpB,QAAA,AgBkC+B,CAAC,CAAD,ChBlCpB,AgBiCT,EACkC,WAAW,CAAC,CAAD,CAD7C,EACkD,WAAW,CAAC,CAAD,CAD7D,EACkE,EADlE,EACsE,EADtE;AvB3CD,AiBuBH,AVZI,ALQC,AiCbH,AtCFC,A0B0CC,CNzBJ,EpBtBE,C0B+CE,GYxCGC,EtCFE,EUOE,A4BLA,AZwCA,CYxCC,AZwCA,GYxCG,C5BKC,A4BLd,EAAgB,CAAC,EZwCf,ChBnCA,A4BLkB,AZwCA,MYxCpB,EAA4B,CAAC,EAA7B,EAAiC,GZwCG,CAAC,CAAD,CAAhB,GAAsB,qBAAxC,EACE,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,qBADxB;ANrBJ,AahBM,AKFF,AtCFA,AaLG,AaiDH,IY1CA,AtCFA,A0B4CA,KY1CK,AzBPO,CoBSN,CPwCC,CY1CC,AZ0CA,GY1CG,AtCFA,CsCEC,CAAD,AZ0CX,COxCc,AKFd,AzBPG,AaiDW,CbjDQ,G+BQxB,CXCqB,KAAjB,EAAwB,GpBTvB,CaiD2B,CbjDQ,EaiDL,UkBzCnC,AlByCE,EACE,CAAC,MkB1CL,UlB0CI,GAAoB,SkB1CxB,CAAuB,AlByCrB,UkBzCF,EAAmC;AACjC,AXCI,A5BWJA,ALhBW,AaJb,AYlBK,ACqEH,CSnK2B,CAAV,ETmKjB,IkB3CI,AvCYA,CQpBC,AYlBO,ECqEL,CrB/BC,AqB+BA,CO1CC,E5BWE,E8BpIgB,CAA/B,CFyHQ,CUFN,AVEkB,A5BWA,CqB+BhB,CAAkB,CEJpB,AKtCM,ApBTe,AYlBhB,CAAwB,CQ2BN,CpBTC,GAAjB,ERoBLA,CQpB4B,CoBSxB,ER3BD,ACqE4B,CbnDC,AamDA,CbnDC,AYlBO,EZkB1C,Ee+CA,AexCA,CjB4CE,EAAwC,CAAxC,CkB1CI,ClB0CuC,CAA3C,EEJF,AexCA,CCEW,aAAL,ChBsCN,CgBvCM,EhBuCY,AexClB,CAAmB,CCEW,UADxB,IACsC,ADF5C,CCE6C,CDFT,GAApC,EAAyC,gBCEe,KAAK,aAAL,EAAX,EAAiC,UAAjC,CAD3C,EACyF;AhBuCzF,AgBtCE,ADFF,AJyBJ,ANvBO,A5BWHA,AiCdA,AtCHwC,AaH3C,AYlBC,ACqEE,CvBxL2B,CAAV,AsBmHnB,ECqEE,IEJI,AWfR,AlCZQ,AiCdA,CKCC,AJyBT,EbmBW,CrB/BC,AiCdA,AZ6CA,CEJC,AgBtCA,ANHA,AbxBA,CmB2BP,AnB3BQ,IGiEN,AWfR,AD1BY,CC0BV,AbmBE,CY7CgB,CnC3IW,AmC2InB,AbxBV,CtBnHF,AyBoLsB,AHjEA,CawBC,CKCnB,ELDQ,CKCe,ALDvB,EAAyB,MC0B7B,AdlDE,GckDA,GXe8B,CexC5B,KJyBF,CXeE,EAAqC,aWfvC,CAAiB,MAAjB,EAAyB,IAAzB,EAA+B,QAA/B,EAAyC;AXgBrC,AgBtCD,ADFD,AJyBF,ANvBG,A5BUO,AiCbN,AtCHA,AyBrBL,ACqEE,AX/DH,GWjBE,EkBmCE,CL0BM,AvC7BJ,G2CIG,A5BnBA,Ea2DE,AgBtCA,C5CNC,CsCGC,CtCHC,CuC6BK,GIzBf,AJyBkB,AD1BhB,CKCa,G3CLyB,CyCF1C,AFgCyB,CxB5C3B,CAAyB,Ea2DnB,Ka/CJ,I1BZF,C4BmBI,C5BnBkC,G0BYpC,G1BZF,EAA8C,C0BY5C,CFgCoB,CAA+B,CEhC1C,KFgCW,EAAuC,IAAvC,CAApB;AXgBG,Aa/CD,AGSE,AvCS8B,AiCZ/B,AtCHC,AefJA,MfeI,AefA,EV8BFA,EU9BM,C0BYC,EGSE,A7BrBA,CfeC,AefZA,CZYa,CsCAC,AzCGA,CAAC,C4CMC,A5CNA,EyCHd,MzCCwC,C4CQ/B,EAAP;AACD,ADHD,AJyBF,ADzBC,AtCHG,AkBzBC,AQyEL,AX/DAD,MfeI,A0BgDA,AX/DE,CwB2CCC,CIzBD,CzB5BQ,AHUL,EwB2CE,CAAC,AxB3CA,EfeA,C2CGC,AJyBE,CvC5BD,E2CGR,GjB6CN,EiB7CqB,AzB5BhB,AQyEgB,AX/DE,CwB2CC,AvC/BkB,AkBtBb,AHUL,CwB2CC,IAAlBA,CxB3CPD,CwB2C+B,ArBrD1B,EqBqD4B,ArBrDK,CyB4BpC,EAAgC,AJyBE,IrBrD/B,EAA0C,GqBqDF,CAAC,IAA9C,EAAoD,CAAC,IAAI,EAAzD,EAA6D,EAAE,CAA/D,EAAkE;AXgBhEG,AexCE,AJyBF,AlCbA,ALfE,AkBzBJ,AQyEE,AX/DFF,Ia0DEE,AFKA,E1BhDE,AefA,CV8BC,CuB4BHA,Ab1DI,Ca0DJA,AWfOF,ArBrDF,EyB4BE,AjB6CA,AX/DA,CfeC,A0BgDA,CapBG,CAAC,AvC5BF,EkBzBE,AQyEZ,CiB7CE,AJyBa,ArBrDF,CUoEbE,AexCc,AzB5BF,CUoEN,AVpED,ClBqBmC,C2COtC,AjCMJ,CKxBoB,CGVC,AHUA,GwB2CK,AxB3CF,CwB2CG,ExB3CA,CGVC,AHUR,CLwBpB,A6BmBSF,ArBrDoB,AHUpB,CGVmB,AHUE,CwB2CG,ArBrD1B,AHUE,Ca0DPE,Ab1DFF,Ca0DQ,AWf2B,ErBrDA,CqBqDG,CXepCE,CAAqB,AlBlCvB,IkBkCEA,AVpEwC,CAAC,CAAD,CRkC1C,A6BmB+C,ArBrDZ,CqBqDa,E7BnBtC,CQlCuC,CqBqD/C,EAAoD,CAAC,GrBrDC,CqBqDG,ArBrDF,CAAD,CqBqDtD,ArBrDK,EqBqDwD,EAAE,ArBpD7D,CqBoDF,EAAkE,IrBpDzD,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADlB,IACyB,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADrD;AyB6BG,AjCMDH,A6BmBE,AlCbA,AiCbJ,AtCFI,AkBxBL,AQyEG,AXhEFC,IWgEE,CiBhDA,CJ2BE,AvC5BA,AefA,ELwBI,AKxBF,CuBiBC,CjCaC,ALfA,C2CGC,AjB8CA,AXhEA,CLwBG,AVTF,A0BiDA,CY/CV,CC0Bc,AlCbF,CKNG,A6BmBA,AlCbF,CkCaG,G7BnBG,C6BmBJ,EAAO,AxB3CF,CwB2CL,AlCbP,AqBkCN,AXhEmB,CLwBN,CAAU,A6BmBA,CAAV,AbqBS,AXhEA,CwB2CV,CAAV,ClCbuB,AU9BA,CLwBG,AKxBV,CAAX,CAAqB,CWgE5B,AXhEO,CAATA,ELwBe,CAAbD,WLMmC,MAAjC,EAAyC;AsCXzC,AjCMFC,A6BmBG,AD1BN,AtCR2C,A0BuDxC,IAAA,C1BvDA,GUeI,CAAC,EiCNE,AjB8CA,ChBxCC,AgBwCA,ChBxCRA,KiCNE,GjB8CF,GAAoB,CAApB;ASrCJ,AQRK,AjCMDA,A6BmBC,AbsBD,AXlEF,IWkEE,GXlEGA,CLyBC,CyBEC,EpB3BE,CAAC,CLyBRA,EKzBW,CAAb,CWkEe,CAAC,AXlEA,CAAC,GAAG,GAApB,CoB2BF,CAA2B,ApB3BA,CAAC,EWkExB,AXlEF,EAA8B,CWkEC,OAA7B,CAAqC,CSvCzC,EAA4C,OTuCM,QAAT,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B;AStClE,AIiBF,AbsBMD,AXlEFA,CwBqCJ,KJVM,CAAC,CpB3BG,EWkEE,AXlEA,GAAG,GWkEG,GAAG,GSvCnB,EAAsB,ApB3BE,CAAC,CAAD,CWkEG,AXlEd,CWkEe,AXlEA,CAAf,CAAXA,IWkEEA;AStCF,AzBHA,A6BqBJ,AlCdQ,ALjBiD,AaDlD,AaqDDA,AXlEFA,IfcqD,IKiBjD,AU/BE,CLwBD,AGXO,CbCwC,A0BoD5C,AXlEA,CoB2BD,AnCZL,CKgBM,AqBmCE,CrBnCD,AU/BE,CLwBD,CyBGV,ATuCa,CAAC,ChB1CD,CGXV,CAAmB,GHWJ,AgB0CE,CAAC,CrBnCjB,AqBmCgB,AXlEE,CWkER,AXlES,CWkEC,AXlEF,CV+BC,ALjB6B,A0BoDtC,AXlEH,CfeQ,AefO,CLwB1B,AKxBW,CAAXA,CLwB2B,ALOvB,AqBmCyB,C1BpDuB,CaDjD,CbEsB,CaFa,CHWtC,EAAkC,KAAK,CgB0CG,CAAC,ChB1CD,AVTL,A0BmDK,C1BnDJ,A0BmDzB,IhB1CkC,AgB0CE,ChB1CD,KAAhD,CVTqC,CUSkB,AVVH,Q0BoDlDA;AStCH,AzBHG,ALOE,ALhBJ,AaFF,AaqDIA,AXlEF,IfeA,AefA,ELwBE,EKxBE,CFaC,CHWC,AgB0CE,ChB1CD,CAAC,AgB0CE,AXlEF,CfeC,CUSH,AVTI,CUSR,AgB0CW,EAAE,ChB1CD,AVTd,CAAe,G4CMjB,ClCGqB,AGXA,AaqDE,ChB1CD,AgB0CE,CAAD,CbrDC,AaqDP,CAAU,ChB1CvB,AgB0Ca,E1BnDf,AaF0B,CAAC,CaqDG,CbrDzB,AEba,C6BqBpB,C7BrBsB,CFaY,EEbT,CFazB,CEbU,G6BqBV,ElB6C6C,AXjEtC,CWiEuC,CAAD,CAA9B,CXjEJ,G6BoBX,AlB6CoD,CXjErC,CAAC,C6BoBJ,E7BpBD,CAAS,UWiEhBA,WXjE0B,EAAV,CAAT,CAAJ,GACD,IAAI,CAAC,GAAL,CAAS,qBAAU,EAAV,CAAT,CAFI,CAAR;AKqCJ,AwBfI,AlCGC,ALOE,ALhBJ,AaFF,AaqDKA,AXhEF,IAAA,EAAE,CVuBA,EUvBG,CKkCT,AM8BY,CN9BZ,AwBfW,A7BnBP,C6BmBA,AlB6CU,CrBnCD,EqBmCI,CAAC,CrBnCD,GeKjB,CAAE,AfLmB,CAAC,AqBmCE,CetDtB,AfsDuB,CAAD,CAAN,CAAU,CAAV,GrBnCD,CqBmCgB,CetD/B,IpCmBkC,GeKpC,EqBxBE,CrBwBA,EM8B4C,CAAC,CAAD,CetD5C,AfsDe,CetDR,GrBwBP,AqBxBA,AfsDmD,EetDvC,EpCmBgC,OAAjC,EAA0C,GqBmCjDA,EN9BJ,GAAqB;AACrB,AeVA,AMdE,AfsDEA,AXhEF,IAAA,EoBwBE,ApBxBA,E0BUE,CrBwBG,ALlCF,CWgEG,CSxCD,ApBxBP,CoBwBQ,ATwCE,CetDD,CrBwBG,CM8BC,EetDT,AfsDW,ESxCb,CAAc,EMdE,Cb8CpB,AKrCA,AP6CuB,CAAC,CetDtB,AfsDqB,CAAN,CetDQ,AfsDE,CAAV,EN9BjB,EM8BgC,EERhC,COhCI,CAAJ,EAAoC,CFLpC,ILqCA,EFQ6C,CAAC,CAAD,CO7C7C,AP6Ce,GERf,CFQoD,EERzC,OKrCX,CAAc,MAAd,AP6CIA,EO7CkB,UAAtB,EAAkC;AbgBpC,AQsBI,ADCJ,AQjCI,AMdE,A/BWF,AuBFA,AjCNF,AyBpBK,ACuEDA,AXhEH,CKgCH,QabSA,AjCNA,AyBpBO,CCuEJ,CERD,AOhCA,AMdA,A/BWA,Ce5BJ,ACuEO,CCPd,AMtCe,AR1BK,CEgEpB,Cc/CM,A/BWF,AgB2Ca,CERD,AKrCZ,AP6Cc,EetDA,ERSI,AjCNpB,CmCWkB,AMdd,CfsDkB,CERpB,ADCJ,ADOyB,CCPvB,ADOsB,CAAN,CO7Cd,AP6CwB,CDvErB,ACuEW,CO7CY,CR1BM,EU+BzB,ATwCsB,CCPjC,CQjCgC,ERiC9B,SAAA,ADO4C,CAAC,CAAD,CAA7B,IAAoC,CCPnD,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EDOjBA,ECPJ,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,cAA7C,EAA6D;APrB/D,AOuBE,AQlCI,AMdA,ARSA,A5BUE,AiCbD,AtCHN,AyBpBC,ACuEIA,MCNI,EtB7BF,CiCbQ,AbvBP,CCuEG,CetDD,ARSA,C5BUC,AqBmCE,CSxCD,CFLP,CAAS,A5BUA,AiCbR,AZgDU,CYhDM,AbvBP,CCuEG,CetDb,ARSA,C5BUE,C4BVY,AKHb,EX0CmB,AW1CG,CZgDJ,CAAC,CCNG,ADMJ,CO7CC,AKHnB,AZgDY,CO7CQ,AP6CE,CSxCvB,AGR6B,AZgDhB,EO7CO,AR1BjB,CQ0BH,CP6C4B,CO7CD,ER1BE,QQ0B7B,AR1BG,ECuEsC,CDtE3C,ACsE4C,CAAD,CAA9B,IAAqC,CCNV,CAAC,GFhE9B,CEgE6B,AFhE5B,EEgEmC,CFhE/C,GEgEwC,EAAa,EDMnDA,ECNsC,EAAmB,IAAnB,CAAf,CAA3B;AACA,AQlCG,AMdA,ARSA,A5BUE,AiCbLA,AbvBiB,ACwEb,AXlEJ,KoBuBE,CRoCM,AW1CF,AZiDF,CrBxCO,EU1BJ,CuBiBG,GjCaC,AiCbE,AZiDF,AXlEA,CWkEC,EXlEE,CV8BC,AiCbE,CAAC,GX0CK,AtB7BJ,CAAC,AU9Bb,CWkEH,CCPsB,AW1C1BA,CvBjBuB,IY2DQ,CtB7BhB,CU9BR,GAAyB,EV8BE,CU9BlC,SY2D0B,GACxB,MtB9B0C,IAAjC,EAAuC,UsB8BrC,gBAAX,IAA+B,KAAK,iBADZ,GACgC,IAD1D;AAEA,AQnCC,AVhCwC,ACyErC,AXlEL,EUP0C,IEmEjC,ADMJ,OAAO,CAAC,EDzEV,CADK,GkByBP,AjBiDI,CAAe,CCNK,CDMpB,EAAmB,EAAnB,EiBjDJ,SAAA,MAAA,CAAO,GAAP,EAAY;AhB2CY,AgB1CtBA,ALDF,ApBzBK,AOEH,ACyEE,MYlDA,AZkDA,EiBjDI,CzB1BM,CoByBN,EKCI,CjBiDD,CAAC,CiBjDG,ALDF,IAAI,ApBzBZ,CyB0Be,ALDF,ApBzBO,AQ2ErB,CAAe,EAAf,CiBjDW,CjBiDQ,CYlDvB,ApBzBK,CyB0BsB,AjBiDvB,CYlDsB,ApBzBO,CAA5B,EAA+B,CAA/B,EAAkC,yByB0BF,GAAV,CAAzBA;AhB0CgD,AQjClD,AQRE,AtCaI,AiCdJ,ApBzBF,AOC8B,AC0E1B,ED1E0B,IUiC1B,ATyCA,CCRmD,CtB5BjD,CsCbC,AzB1BA,EoByBE,CjCcC,C8BLC,A9BKA,AqBoCA,CAAC,CR3EC,CyB0BX,ALDA,ApBzBY,AOCe,CkByBd,AzB1BF,CAAN,EOC0C,AC0E7C,CiBjDF,AjBiDiB,CkB/CnB,A1B5BoB,CAAb,AQ2EH,CCRJ,AtB5BM,AoBxCN,CE+D6D,ADatC,CCNvB,CtB9ByB,AavCA,AQ2ErB,CSzCA,AjBlCsB,GbuCG,CAAC,AavCA,CiBkCC,CSN/B,I1B5BoC,CAAC,CAAD,CAA7B,EiBkCP,ASNA,AvCWM,E8BLqC,AjBlCA,MAAM,C0B4BjD,A1B5BkD,C0B4BxC,A1B5BuC,CAAN,IAAa,CAAjD,I0B4BP,A1B5B6D,CAAC,C0B4BxC,G1B5B4C,MAAM,CAAC,CAAD,CAAxE;ASsEA,AQnCE,ASNA,AvCWG,AiCdJ,ApBzBF,AOCA,AC0EK,MAAA,CrBxCO,CuCPL,GTMG,E9BKE,AqBoCA,CAAC,SAAR,GSzCF,oBSLI,KAAK,aAAL,EADA,IACwB,UADxB,IACsC,CAAC,sBAAW,KAAK,aAAL,EAAX,EAAiC,UAAjC,CAD3C,EACyF;ATM1F,ASLG,ALsBN,AlCZQ,AqBoCF,MAAA,EaxBN,AlCZQ,CkCYR,GlCZY,CuCVC,AlB8CA,CAAC,CrBpCC,GuCVT,ALsBN,CAAE,AlCZM,CqBoCF,ChB5CJ,EkBkCA,UlBlCA,GkBkCA,MlBlCA,GkBkCA,KWdF,C7BpBE,E6BoBA,C7BpBY,CkBkCZ,GAAa,IWdb,+BAAA,CAAgC,SAAhC,EAA2C,QAA3C,EAAqD,QAArD,EAA+D,aAA/D,EAA8E,UAA9E,EAA0F;AnBP5F,AQsBIA,ADGF,AiBvCG,AlCEDA,A6BoBF,AlCZK,AiCfL,AzBJK,AauDF,KkBjDD,AlBkCA,CCQM,AYjBF,CD3BDC,CVyCG,AlBlCA,CGXM,COuBhB,CAAA,AwBdW,ANLA,CX4CK,AW5CJ,E5BOI,CkBkCC,ADGE,AYjBjB,AD3Ba,AzBJR,CyBIL,AzBJqB,CHWJ,A6BoBA,A1B/BZ,Ce6Ca,AWdlB,AD3BgB,CAAC,AzBJO,COuB1B,AQsBID,ADGoB,AYjBF,A1B/Bf,COuBL,AVZqB,A6BoBrB,CD3BoB,AzBJO,IHWV,A4BPjB,C5BO2B,C4BPD,ClBmB5B,AkBnB6B,EX4CV,AW5CjB,ClBmBA,AOyBkC,AjBrCF,C4BPD,K5BOd,CAAfA,CiBqCe,CPzBjB,KO0Ba,GP1Bb,GAAW,SO0BmB,GAAG,GADhB,IACuB,eAAe,GAAG,CAD1D;APxBA,AQsBE,ADKF,AQpCA,ASLI,AlCEFC,A6BoBF,AD3BE,AzBJFD,AawDE,IAAA,ECNI,AYnBA,A1B/BA,CAAC,CHWD,A4BPA,ClBmBG,AQsBF,AO/BA,AzBHA,CGXG,CAAC,AawDF,ChB7CC,A4BPA,AZoDA,CkB/CCG,AlCETF,A4BPS,ClBmBG,AkBnBJ,AzBJI,CyBIR,AzBJND,IsBcgB,AT0Cd,CkB/CSG,ANLO,ClBmBlB,AQsBE,AgBpCSA,ALsBU,CXcD,ADKE,EYnBE,AD3BF,CX8CG,AW9CF,CAAD,CAApB,CC2BF,CXcE,AO/BK,AGVoB,CVyCC,ADK5B,AiBzCWA,CTKiB,ASLX,ShBoCoB,AgBpC1BA,CAAM,GhBoCW,CgBpCjBA,ChBoCgC,AgBpCjB,ChBoCE,EAAkB,CgBpCnCA,EhBoCiB,AgBpCD,EhBoCwB,QgBpCxCA,CAAP;AxBeN,AQsBM,AO/BF,ASLC,AlCEDF,A6BoBF,AlCbI,AiCdA,AzBJJ,AawDC,CNnCH,KmBUQ,AlCbF,CkCaG,C7BpBD,CGXC,Ce6CC,AWdE,AlCbF,AQlBA,CsBcC,CAAC,CzBHRA,ALOS,AiCdA,AzBJA,Ce6CC,Af7CL,GRkBQ,AQlBA,Ce6CC,AvB3BA,AiCdZ,AzBJG,C0B+BY,CAAC,CAAD,A1B/BA,Ce6CC,AWdV,A1B/BU,Ce6CC,Aa9CrB,EFgCyB,A1B/BF,C0B+BvB,A1B/BO,CsBcE,CAAP,C9BIE,AQlBuB,CAA3B,Ce6CgB,Ia9ChB,Eb8CmC,Oa9CnC,SAAA,CAAU,Eb8CmC,MAAzC,EAAiD,Aa9CrD,EAAsB;ArB0BxB,AQqBQ,ADKN,AQpCC,AMfC,ApCmBC,AiCdA,AzBJJ,GsBYC,E9BbE,CsBmDI,ECLA,Ga9CG,EpCmBE,EuB2BE,CAAC,Aa9CA,CpCAZ,GuB8CI,ADKc,CCLD,EDKI,AcnDrB,CdmDF,EAA0B;ACJlB,ADKN,AQpCH,AzBJG,A6BoBF,AD1BC,AZmDD,MazBM,EZoBE,CjBxCD,AgB6CA,CEVC,CWfG,EZoBE,CjBxCD,EkBmCE,AFUA,ChB7CC,AgB6CA,CEVC,IlBnCI,A6BoBd,CXee,AKrCrB,AP+CA,CCLQ,CAAiB,EYpBE,CAA3B,C7BpBE,C6BoB4B,C7BpBD,AuBF7B,EN0CQ,GjBxCN,EkBmCc,AlBnCoB,CkBmCC,ADKE,CM1CvC,GvBEyC,CiBwCG,CM1C5C,CvBE4C,AuBFtC,GAAN,EvBEiD,AuBFtC,CvBEuC,KkBmClC,AlBnCd,CkBmCsD,ClBnCC,EiBwCvD,AM1CF,CLqC4D,CAAC,ADKE,AM1CxC,SLqCP,CADG;AAEX,ADKJ,AjBxCA,A6BoBF,ANtBA,AP+CH,IazBG,CAAG,C7BpBD,E6BoBI,ANtBF,ELqCE,ADKI,CM1CH,CvBEC,CAAC,CAAC,CkBmCC,AKrCA,CvBEH,CkBmCK,AlBnCX,A6BoBa,CAAC,CAAD,C7BpBC,A6BoBhB,ANtBgB,CLqCC,CAAC,GlBnCG,CiBwCK,AjBxCJ,CuBFtB,EN0C6B,AM1CJ,CLqCZ,ElBnCX,yBiBwC0C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAA3B;ACPe,ADQf,AjBxCD,A6BoBD,ANtBED,AKLJ,IC2BE,CAAG,GAAG,CXYF,AUvCC,CX+CK,AM1CF,GKLV,EHYa,EIeI,CAAC,ANtBA,CMsBD,CIzBjB,AJyBE,CNtBmB,IN0CM,CM1CD,EN0CI,EgB7C9B,GVGqB,CAAa,GAAb,CAAjBA,CUHJ,OAAA,CAAQ,GhB6C+B,CgB7CvC,EAAc,ahB6CgB,IAA6B,KAAK,iBAA5D;ACJC,ADKD,AgB7CF,AJyBC,ANtBC,AKLL,GCwBC,GZuBI,GgB7CG,AJyBE,IIzBP,AVGS,GUHG,EVGE,EUHd,EhB6CoB,GAAG,AM1Cd,CAAa,GAAb,CAAP,UN0CoC,GAAG,kBAAlB,IACnB,gBADF;ACJD,ADME,AgB9CHA,AjCIA,A6BqBA,ArBlDG,AHSA,IwByCH,CXQ0B,CAOxB,EexCI,CzBzBM,AHSA,CaiDc,CAOnB,AexCE,AjCIF,GiCJK,CfiCc,CAA1B,AbjDG,CLoBH,AKpBoB,C4BgBJ,CAAC,AJyBA,GAAG,CIzBR,CAAU,C5BhBnB,EwByCsB,AxBzCK,C4BgBlB,CAAZA,EzBzBG,CAAgC,MAAhC,AHSA,EGTwC,AHSA,KwByCvB,CAAwB,IrBlDzC,EAAoD,GqBkDnC,EAAmC,UAAnC,CAApB;AXgBA,AWfC,ANvBC,Af3BJA,AHSAA,MGTM,AHSA,GawDC,CKtCC,Af3BE,Ce2BD,Ef3BI,AHSA,GAAG,GGTG,CAAC,CUiElB,AKtCE,Af3Be,CUiEC,AgBrCpB,A1B5BAA,Ce2BqB,IlBlBM,CawDzB,GAA2B,AbxDE,CawD7B,CbxDFA,gB6BmBA,SAAA,0BAAA,CAAyB,UAAzB,EAAqC;AxBevC,AO4BI,AiB1CA,ADJA,AVGI,Af3BNA,AHSAA,MGTM,AHSA,EY6DE,AiB1CF,ADJA,ChB8CG,AiB1CF,CxBcT,AF1CY,CE0CZ,CLjCc,C4BeD,AVGA,Af3BE,ESsEL,AZ7DO,IY6DI,AM3Cb,Af3Ba,CE0CrB,AafoB,Af3BE,CE0CpB,AF1CmB,CAAnBA,AHSsB,C0BStB,ARSM,AlBlBiB,CY6DC,CM3CD,IlBlBR,CKiCjB,GAAE,AafM,AlBlB2B,EY6Dd,CAAiB,CgB9ClC,EAAmC,CFNrC,ErBwBA,CwBdE,CjB0CiB,CiB1CgB,CjB0C3B,CZ7DRA,E0BSA,CdoDkD,CP5BlD,CAAU,MAAV,EAAkB,GqBxBlB,EdoDE,CcpDe,CdoDkD;AP3BnE,AQuBE,ADKE,AcpDF,AGUE,ADJA,AJyBJ,ANtBK,Af3BLA,AHSAA,MY6DI,ATtEE,AHSA,CKiCC,CQuBD,CWhBG,CAAC,ArBjDA,CuBkBD,AEMA,ECIEG,A1B5BE,CE0Cb,AmBOc,CXgBD,CAAC,Aa/CA,A1BTE,CKiCC,EmBOE,ArBjDA,AHSA,C6BmBRA,A1B5BS,C0B4BTA,A1B5BQ,CUiEb,ADKgB,ATtEtBH,CE0CA,CqBxBS,CdoDgB,AcpDF,CF+BvB,AxBxC0B,CawDD,AbxDE,CawDzB,AWhB0B,CIzBxB,CfyCwB,AgBrCjBG,ADJiB,CCIX,M7BnBE,E0BSV,CdoD+B,CcpDtC,A1BTuC,EY6DE,SZ7D3CH,G6BmBWG,CAAM,IAANA,CjB0Cc,AiB1CgB,IjB2CjC,AiB3CGA,EAA+B,KDJM,IAApB,CCIjBA,CAAP,ADJkD,GhB8ClD,EgB9CuD,QAA/B,CAAxB,EAAkE,GAAlE;AvBmBJ,AQuBI,ADMC,AiB3CF,ADJA,AJyBD,ANtBC,Af3BHH,AHSAA,K4BaE,CzBtBI,AHSA,CKiCC,CmBOC,ErBjDE,AHSA,CawDD,AezCA,EJyBI,ArBjDA,AHSA,GKiCb,AQuBI,CvB5BJ,EeKmB,AQuBF,AVjEE,CE0CC,AF1CA,CAAD,AHSE,CKiCC,AF1CtBA,AHSsB,EwBwCd,InBPoB,CmBOC,AxBxChB,CwBwCX,CxBxCFA,CKiCgC,AmBOA,AlCZhC,KeKqC,CQuBV,GvB5B3B,EuB4BI,CRvBgB,CAApB,QfLA,GAAe;AeMjB,AQuBK,ADMA,AgB/CC,AJyBA,ANtBH,A5BUC,AarCFA,CEuCF,IQwBI,CWdE,ArBjDE,CqBiDC,ArBjDA,GqBiDG,ArBjDA,CUiED,AezCA,AtCaA,GkCYK,CAAC,ClCZD,CsCbV,CAAY,EJyBN,ArBjDU,CyBwBhB,AJyBiB,ArBjDA,CqBiDC,ArBjDF,CAApBA,EqBiDyB,AlCZvB,CkCYQ,CAAN;AnBLN,AQsBMA,AgBtCFA,ADHC,AJyBC,ArBjDJA,ALmBK,AEXL,MwByCI,ArBjDE,AHQF,CwByCG,ArBjDA,C0B2BC,C/BRM,Ce8CJ,AWhBA,ArBjDA,AHQF,CayDG,Ef9CN,Ce8CS,AWhBA,A1B9BK,C0B8BJ,A1B9BV,AEXQ,C6BmBG,C/BRM,CAAjB,Ce8Cc,AgBtCA,CLsBT,ArBjDU,ALmBK,C0B8BJ,ArBjDA,ALmBhB,C0B8BiB,ArBjDF,CAApBA,ALmB4B,C+BQJ,CLsBC,CAAf,CAAN,SXgBU,CAAuB,AgBtClB,A7BnBO,CayDZ,CAAVA,AgBtCFA,iB7BnBF,EAA+C;Aa0D3CA,ADMJ,AYtBI,ArBjDJC,ALmBA,AEXE,IAAA,EY+DI,AYtBF,ArBjDA,CSuEG,EdpDA,Ce8CG,Af9CF,EEXE,CFWC,Ce8CG,Af9CF,C0B8BG,AxBzCF,EayDI,CWhBC,ArBjDF,ALmBA,CAAC,EHUjB,AQ7BmB,CUiEG,Af9CF,CcoDd,AdpDM,AEXS,CFWrB,AEXsB,GY+DK,EZ/Dd,GY+DmB,AjB1ChC,AKrB8B,KayDb,CAAqB,GlBpCtC,AKrBa,CAA2B,CGRR,KSuEhC,CCNiB,AlBpCjB,A6BoB0C,CXgBQ,ADMA,AYtBhC,ArBjDlBA,CUiEiB,CAAbD,AlBpCO,A6BoBkC,AxBzChC,CwByCK,CxBzCkC,CwByCJ,CAA9B,EAAiC,CAAjC,EAAoC,IxBzCzC,CAAX,QwByCgB,CAAd;AXiBAA,ADMF,AiB7CA,AlCGA,A6BoBG,AvC1BA,AaJN,AEXE,CkBnGgC,CAAV,GMwIrB,GZ0BM,AiB7CF,CjB6CG,A3BhDK,C4B0CJ,ClBpCD,A6BoBE,EKvBA,EhBuCI,ClBpCD,EkBoCI,C5B1Cb,CAAoB,C4CGnB,AXrH2B,CAAnC,CvBwHW,CAAa,CkBoCG,CgBvCD,A5CHnB,C4CGoB,C5CHQ,C4B0Cf,ClBpChB,EVNG,C2BgDe,CCNc,A5B1CK,C4CGf,IAAa,GhBuCnB,A5B1Cb,EAA4C,C4B0CJ,IAA3B,ADMT,EAA6B,CCNc,A5B1C/C,EAAsD,E4B0CH,ADMb,CCNc,CAAD,CAApDA,EgBvC4C,QAAX,EAAqB,CjB6CjD,CAAP,EAA4D,MiB7CzB,CAA/B,CAAJ,EAAsE;AhBwCpEA,ADMA,AiB7CA,ALuBA,AD1BC,AtCAL,AkBxBA,MqBkDI,ArBlDA,CAAC,EoBwBS,AtCAP,C4B0CG,AVlEF,G0B2BG,C1B3BX,CqBkDe,AvC1BF,C4B0CG,A5B1CF,AkBxBA,E0B2BE,ALuBE,CXgBC,AU1Cd,CAAoB,EtCAZ,CuC0BU,AD1BlB,CtCAiB,CsCAQ,CV0CJ,AgBvCtB,E5CHS,E4B0CM,A5B1CS,K4B0CO,AU1C9B,EAAqC,CtCA7B,EAAyB,G4B0CnB,GAA2B,EWhB5B,AvC1BL,CuC0BoC,CXgB9B,A5B1C6B,G4B0CK,C5B1CxC,CAAb,E4B0CyD,CAAC,CAAD,CAArDA,IWhBc,EAAgD,CAAhD,EAAmD,aAAnD,CAAd;AXiBAA,ADMA,AiB7CD,ALuBE,AD1BLA,AtCAD,AkBxBG,AHQFC,IGRE,C0ByBA,CNDI,AvBhBF,Ia0DM,Ab1DF,C6BmBC,CNHG,CvBhBD,CAAXA,CuBgBe,CpBxBD,EoBwBI,CAAC,ApBxBF,MoBwBjBD,CV0C0B,GAAG,EVlEA,GUkEK,AVlEF,eUkEH,CAAqB,MVlEL,IAA3C,GUkE2B,CAAmC,CAAnC,CAAzBA;ARvBN,AQwBMA,ADMC,AiB7CDA,ANHJA,ApBxBC,AHQDC,GGVA,GoB0BM,AvBhBF,GuBgBK,ApBxBF,CE0CT,AQwBY,AgBvCA,CxBeZ,CkBlBc,CpBxBD,CAAC,G0B2BK,ANHA,ApBxBF,AHQfA,CuBgBkB,CvBhBD,CKkCnB,AwBfsB,CxBepB,AkBlBqB,ApBxBd,CoBwBe,CpBxBD,EHQrBA,Ca0D0B,Cb1DD,CuBgBR,AvBhBjBA,Ca0D6B,AU1C7BD,CvBhB4B,EAA5BC,Ea0DkC,Ab1DF,CAAhCA,EAAmC,C6BmBR,CxBe7B,ALlCEA,GKkCA,MwBfoB,ChBuCS,AgBvCzBD,ChBuC8C,CRxBlD,YQwB6B,CAAmC,KRxBhE,AQwBqE,GRxBhD,KQwBQ,CAAzBA;ARvBJ,AQyBIA,ADKD,AYvBD,ADzBFC,ApBxBE,IAAA,EoBwBE,CAAJA,CCyBQ,CnBPC,CQyBC,IRzBI,EmBOE,ArBjDF,CqBiDG,AlCZjB,EarCiB,EqBiDT,CXkBc,AWlBA,GXkBG,GvB9BzB,EeKA,AQyB8B,AWlBtB,CrBjDqB,CqBiDG,CAAxB,CrBjDwB,CqBiDG,ElCZnC,OkCYQ,CXkBiB,AWlBvB,AlCZF,CuB8B8C,CWlBC,ClCZpC,QarCkC,KAA3C,GUmEuB,CACnB,KAAK,iBADc,CAArBD;ARxBN,AQ0BM,AgB1CA,ALuBA,AlCZF,AarCD,AOEI,AVKL,CKiCF,QKtCgB,CmBwBN,A7BnBA,Ca6DC,AvB/BA,CuCXC,CLuBG,CxB1Cb,EV8Bc,CkCYV,CXmBA,CgB1Ca,CDFjB,Cf4CmB,AvB/BjB,EuCXmB,InBxBhB,CmBwBqB,AnBxBO,EkBsBjC,QlBtBK,CkBsBL,ClBtB6C,CGkER,KAAlB,Ae5CnB,CAAQ,Cf4CoC,Ae5C5C,CCEQ,CAAJ,ADFO,AlBtBN,CkBsBL,CCEkD,AnBxBO,CkBsB3C,Cf4CK,Ae5CnB,Ef4CoD,Ae5CnC,ClBtBZ,EAA2D,EGkEP,OHlEpD,EAAsE,EGkExD,EACb,gBADa,EACK,KAAK,eAAL,CAAqB,SAArB,EADL,EAEb,gBAFa,EAEK,YAFL,EAEmB,KAAK,cAFxB,EAEwC,OAFxC,EAGb,KAAK,OAHQ,EAGC,KAAK,YAHN,CAAf;ARxBN,AQ6BM,ADAJ,AiB9CM,ADFJA,AJyBG,ANvBPA,AKHE,AbrBA,AVKE,EULF,EQwBI,EN8CE,CAAC,AWjDF,CKCG,ALDF,CvBhBC,EaiEE,AUjDA,CAAT,AbrBU,CmBwBC,CNHC,CAAC,AbrBA,CGsET,EUjDY,AbrBA,CGsEC,AHtEA,CkBsBG,GhBgDpB,AgBhDuB,CVEC,AKHxB,CXiDyB,CWjDD,CLGG,AKHF,ELG3BA,AKHE,AbrBgB,CAAhB,CaqB6B,AvBhBT,G6BmBd,CAA2B,C7BnB/B,EaiEyB,IgB9CrB,EhB8CF,EgB9CwC,GDFX,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAArBA,qBCEmE,UAAzB,CAAtC;AhB+CH,ADAD,AiB9CG,ANHH,ApBxBF,AOGAC,AVKE,IuBgBA,EpBxBE,AOGA,CaqBC,ApBxBA,CSyEG,AWjDF,CXiDG,AWjDJ,AvBhBE,CuBgBL,ApBxBM,GoBwBG,CpBxBX,EAAc,CSyEG,CAAC,GjB1ClB,Ae5BAA,CEsEsB,CAAC,CAAD,CAAL,CAAT,IAAsB,CAAC,AZjEX,ILuBpB,IiB0CuC,CAAC,EZjEtC,EYiE0C,AjB1C5C,CiB0C6C,CAAD,CAAL,CAA/B,IACF,CAAG,EjB3CT,GAAc,GiB2CG,CAAC,IAAI,CAAC,CAAD,CAAL,CADT,IACsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAD/B,IAEF,CAAG,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAFT,IAEsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAF/B,IAGF,CAAG,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAHT,IAGsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAHrC,EAGgD;AAC9C,AgBpDF,AjCOA,A6BkBA,AD1BU,ApBvBV,AOGFD,AVKE,IGRA,EqBiDI,AD1BM,AbpBN,Cc8CJ,CIzBI,C5BhBC,CYoEG,CjB7CD,A4BRQ,CbpBL,CkBqBD,ALDQ,CAAR,CbpBI,Cf4BD,AQ/BA,GAAG,GyBwBX,CFLN,AEKqB,AjCOZ,CiB6Ce,AjB7CF,Ce5BG,CAAC,CEyEC,CAAvB,AjB7CF,EiB6C4B,CT5ED,AHQT,E0BWpB,CEKM,AzBxB0B,CyBwBC,OFLjC,A1BXE,K4BgBI,CAAJ,AlBrBa,CgBgBf,CAAQ,AEKwC,AlBrBhDA,CgBgBA,EAAW,CAAX,EAAc,AvBnB+B,CuBmB7C,EAAiB,EvBnBf,QuBmBF,EAA6B,UAA7B,EAAyC;AbsDvC,ADII,AczDJ,AGOE,ADFA,AJyBD,AD3BmB,ApBtBrB,AHQC,GGVF,GoBwBsB,EXsDhB,CCJC,AVxEA,AHQA,E0BWE,AEKA,ALFkB,EAAE,ApBtBlB,CAAC,EUwEV,AUlD8B,CAAC,ApBtBlB,CoBsBiB,EKE5B,CAAe,AzBxBZ,EAAc,CS4EG,AgBpDpB,CAAmB,EhBoDI,IAArB,AZpEc,C0BWlB,KEKE,W5BhBF;AYqEK,AgBpDJ,ALHQ,ApBrBT,AOEF,AVME,IGRA,CoBqBA,CbnBE,CEwEA,EZlEG,GUNP,CE0Ea,CF1ED,EPFE,GAAG,YAAY,AHQT,GGRY,QHQ9B,cGR2C,KAA3C;AE2CJ,AOkCQ,AiBnD2D,ADDhE,AJwBD,AD3BC,ApBrBA,AOEC,AVK+B,IUL/B,Kc8CO,CnBNX,CAAA,EwBjBwE,CLuBtE,Kd9CiB,CLwCnB,CAAE,CKxCoB,MAAM,CAAC,KmBuBsC,CAA2B,IxBiB9F,AKxC4B,EAAa,CLwCvC,AwBjBiE,InBvBvC,CAAxB,ILwCF,kBAAA,CAAmB,QAAnB,EAA6B;AAC7B,AOkCO,AiBrDH,ALyBN,ANpBO,AR1BJ,AVKG,CwBiBN,EdxBE,IL0CO,EadO,AR1BP,cLwCP,GAA0B,CadrB,CAA4B,GAA5B,EAAiC,CbctC;AACF,AOkCO,AiBnDF,ALwBL,ANrBE,AKRA,ApBrBA,AOGEA,AVKC,CKiCL,CkBpBE,GAAG,CAAC,ApBrBA,EOGI,CQ0BD,CKRP,CAAS,EblBI,GAAG,EPHA,GoBqBE,CAAT,CpBrBY,CoBqBA,CAAZ,CblBiB,CakBF,AblBG,EQ0BA,CAAC,KR1BZ,EAAdA,OQ0BK,CAAoC,Af7BT,Ge6B3B,IACL,Af9BF,EAA2C,kBe8BrB,CAAC,GAAD,CADf,GAEJ,oBAAoB,CAAC,GAAD,CAApB,GAA4B,YAAY,GAF3C;AbgBF,AOiCK,AM9CJ,AKVG,ApBrBA,CyBzJ4B,CAAV,EzByJlB,OoBqBO,IK9KqB,CAAhC,AzByJgB,GAAG,EoBqBE,CAAC,CAAC,CAAC,KAAH,EAAU,CAAC,CAAC,KAAZ,CAAV,EpBrBqB,EoBqBW,CAAC,CAAC,KAAF,GAAU,ApBrBjD,CoBqBkD,CAAC,KAAnD;AACD,ApBrBA,AOEC,AVKA,GuBYF,KbjBM,CVKC,IULI,IAAI,cVKK,CULC,MVKnB,CULI,IAA0B,CAAC,SAA3B,IAAwC,SAAS,IAAI,eAAM,OAA/D,EAAwE;AE4E1E,AF3EI,AVIyB,MYuEvB,AF3EF,SkBsBS,AVQA,KN6CO,CjB7CpB,Ae9BmB,EGsEnB,ADKuB,CAAvB,AF3EsB,EE2EI,ICL1B,IHtEI,Ef8BJ,GkBwCA,IAAA,ElBxCA,CkBwCO,WlBxCP,GAAe;AkByCb,ADKA,AjB7CA,A4BZF,ApBrBA,AOGG,AVIC,KUNF,EaoBG,CVoDC,ADKE,AWzDF,AvBdF,CYuEK,AT9EF,ERiCE,A4BZA,AblBA,CakBT,CVoDW,CUpDC,CAAC,C5BYC,CLMd,CuBkCM,AUpDU,CvBdD,EuBcI,ApBrBnB,CUyEoB,AUpDA,C5BYX,CAAa,CiB6CpB,EAAyB,CjB7CzB,ALMF,AiClBA,EAA4B,CAAC,EAA7B,EAAiC,EjCkBjC,IuBkC8B,IAA5B,AvBlCF,CAAS,CuBkC2B,IvBlCpC,EAAgB;AuBmCZ,ADKA,AtBvCF,AiClBA,AtCMG,AkB3BN,AHMgB,IuBeb,GAAG,CAAC,CjCkBC,AiClBF,AtCMS,C2BmDF,AWzDV,CVoDO,EUpDE,CjCkBT,EuBkCE,ADKc,AWzDJ,CjCkBC,AiClBA,AtCMV,CsCNS,AtCMS,C4B8CN,ADKI,AWzDV,CXyDW,AWzDJ,CXyDK,CAAC,AtBvCtB,CsBuCuB,Ac1DzB,Cd0DwB,A3BnDnB,C2BmDkB,AWzDrB,CtCM6B,E2BmDD,CAAC,CAAC,A3BnD3B,C2BmD0B,CAAT,A3BnDe,I2BmDC,CAAjB,Ac1DrB,CbqD2B,CDKc,CAAC,A3BnDrC,C2BmDsC,CAAC,A3BnDG,C2BmDJ,CAAD,CCLtC,CarDJ,Cd0DiD,CAAC,CAAC,CAAD,A3BnD7C,C2BmDoC,C3BnDgB,G2BmDA,CAApC,CAAjB,Ac1DJ,GAAc;AbsDV,ADKA,Ac1DF,AF6BJ,AlCVI,AiClBD,AtCMDA,AetBsE,MfsBhE,EuCsBR,AxB5CwE,CwB4CxE,AlCVS,CsBuCK,CCLH,AarDA,IzCOM,CyCPD,ApCmBZ,AUlCmE,CAAW,CaoE5E,AWxBN,AvCtBoB,C2BmDG,AY7BrB,GZ6BwB,Ec1DtB,Gd0D2B,CY7B/B,EvCtBgC,CuCsB9B,AvCtB+B,AetBsC,EAAjE,IfsB0B,EAAS,C2BmDf,AY7BxB,CZ6B2C,E3BnDb,CAA9BA,G2BmDwB,CAApB,CY7BJ,GAAY;AX0BRC,ADKA,AY9BJ,AD5BD,AvBhBK,QAAA,CwB4CK,CXyBD,ADKE,EAAN,AZ1EI,EwB4CM,CxB5CH,IAAI,CaqEG,AbrEF,CwB4ChB,CKvBA,ChBgDqB,AbrEV,CaqEPA,AbrEgB,eAAe,CAAC,U6BqBpC,C7BrB+C,CAAC,CAAD,CAAZ,EAAiB,G6BqBpD,G7BrBmC,CAAxB,CAAP,oB6BqBJ,CAA0B,UAA1B,EAAsC;AxBkBxC,AQgCM,AgBjDF,ALuBJ,AvCvBE,AyBvBID,Cc4CN,KvCrBM,E4CAE,CAAC,CxBiBT,AKxCY,CLwCZ,AQgCW,I5BjDT,EAAe,GoBiBjB,AKxCsB,CLwCpB,EKxCuB,OLwCzB,CQgCM,ERhCJ,CQgCgC,EAA5B,MRhCJ,CwBjBE,EAAiC,KnBvBe,CLwClD,AKxCmD,CLwCzC,MAAV,EAAkB,CKxCgC,EAAa,GAAG,CAAC,WAAD,CAAhB,CAA9CA;ALyCJ,AQgCI,ADGA,AiBpDA,ALwBN,AvCxBIA,AyBvBEC,AVCA,OKuCG,CpBjBC,E2BoDE,AF3EF,CGwEC,EgBjDEE,A7BtBF,CKuCT,ALvCU,EY0EN,CPnCa,ALvCJ,CY0EK,AF3EF,AVCP,CfsBU,C4CARA,A7BtBK,C6BsBLA,AnBvBQ,CzBuBG,AyBtBhB,AVAY,CKuClB,AQgCI,CAAkB,CbvED,EUAV,CAAC,CAAD,CmBsBAA,AnBtBL,CGuEF,AgBjDa,ChBiDa,CHvEb,CzBsBiB,CAAC,CetBH,CAAC,KauEM,CHvEZ,AVAvB,CfsB8B,CetBO,CauEX,A5BjDgB,AyBtBhB,AVAY,CUDvB,CGwE0B,CAAf,AHvEG,AVAY,EauEG,AbvE5C,EAA6C,CauEnB,A5BjDI,AyBtBI,CAAC,AVAY,CauEE,AgBjD1CA,A5CA6C,AyBtBlB,AVAlC,C6BsBa,AnBvBE,CVCmC,CUChD,EmBqBKA,CAA+B,E5CAR,AyBrBvB,CAAC,CmBqBDA,A5CAuD,AyBrBvD,CAAL,CmBqBqC,E5CAT,AyBrBjB,CzBqBfH,O4CASG,CAAP,CnBrBuB,GAAG,CAFX,EAEc,KAAK,CAAC,CAAD,CAFnB,EAGb,KAAK,CAAC,CAAD,CAHQ,EAGH,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CAHrB,EAIb,KAAK,CAAC,CAAD,CAJQ,EAIH,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CAJrB,CAAfF;ALyCJ,AQgCMD,ADGA,AiBpDH,AnBlBC,AVJE,MUIF,CLmCG,GLvCD,EauEM,ADGE,EFtEF,AVJF,EKuCV,CQgCiB,AHnEF,CVJD,CKuCK,CAAC,AQgCA,ERhCE,ALvCJ,CAAC,CauEK,CAAC,CbvEX,CKuCa,AOmCE,AFtEJ,AVJF,CUIG,EEuEhB,CAAG,ECJO,CRhCE,CQgChBA,CHnEmB,ELmCa,AKnCF,IVJE,CAAC,CKuCnB,CAApB,CKnCyB,EAAqB,CEuE1B,AFvEK,CAArB,GEuEoB,CAAC,AZ3EyB,CY2E1B,AZ3E2B,CY2EtC,AZ3EqC,CAAZ,CY2ET,CZ3E0B,MAAjB,CAAxB,CAAR,OY2EO,IACF,kBAAS,IAAI,CAAC,CAAD,CAAb,EAAkB,gBAAlB,CADD,IACwC,CAF5C;APlCR,AOqCQ,A3BvDJ,AyBjBEA,AVJC,CKoCP,OOwCQ,A3BvDA,E2BuDI,AFxEA,GEwEG,EFxEE,GAAG,CzBiBhB,EUQF,AVRmB,MUQnB,CiB+C4B,GAClB,KjBhDV,GAAA,GAAM,CezBwB,MEyEX,EFzEmB,CAAC,KAAT,CEyEF,AFzEiB,CEyEhB,AFzEC,CEyEF,CAAlB,AFzEsC,CAAlB,CEyEG,AFzEf,EAAkC,QAAQ,CAAC,KEyEnD,AFzE0C,CEwE9C,AFxE6D,CAAf,EAAkB,CAAlB,CAAlC,CAAdA;ALqCN,AQ8BQ,ADOC,AiBxDLA,AlCQAA,AVRE,AyBjBAA,MzBiBA,C2BkDA,CiBlDI,AlCQA,EezBE,EGkEA,CDOG,AjBhDA,GkCRG,AlCQA,AezBA,CGkED,EgBjDI,A5CAF,AyBjBE,CzBiBD,C4BiDC,AlBzCE,GkCRG,IlCQtBA,GVRe,CAAb,K4CAe,EAAjBA,ChBiD2B,IAAnB,AHlEqB,IGkEM,IHlEE,CGkEG,AHlEF,IGkEM,CHlEf,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,CGkEN,IHlEH,CAAe,CAAf,CGkE/C,CHlEiE,CGkEN,AHlEZ,CAAlC,CAAfA;AGmEI,ADOF,AjBhDJ,AVRC,AkBzBE,AOQD,AVLA,MUKA,EEyEE,CTjFQ,CU0EN,ADOE,CjBhDD,EiBgDI,CAAC,EjBhDA,EiBgDI,CAAC,CCPD,ADOA,ATjFb,CSiFS,AFzEK,EPRS,CSiFJ,AjBhDf,AezBa,CfyBC,AezBA,GEyEK,CAAC,CAAD,AjBhDA,AezBA,CEyEf,AjBhDgB,EezBE,EEyEI,AjBhD1B,CiBgDI,AjBhDX,GiBgDqC,AFzEjB,IAAmB,CAArC,IEyE4C,CAAC,CAAD,CAA1C;ACLEA,ADMD,AiB1DkC,A5CExC,AkBzBD,AOQIA,AVLD,Q6BoB0C,CAAC,A1BvBvC,CAAC,AOQE,IGmEI,GgBpD+B,C1BvBtC,EAAW,C0BuBwC,EHJ1D,AhBXuB,GAAG,EPRnB,CU2EsB,CV3ED,CAAC,CU2EG,GHnEG,GAC7B,CPTC,EAAgC,CAAC,C0BuB6B,OHJrE,AvBnBO,C0BuBmD,A1BvB1D,CU2EuC,CgBpDwC,GhBoD/C,EAAa,CaxD7C,EhBVsB,EmBcoC,CAAjB,EAAmD,InBdtF,CAD6B,GAE7B,GGiEiD,MAAvB,CHjEhB,CGkEN,AazDV,AhBTiB,CgBSQ,SbyDN,CAAT,AazDV,EbyDsB,AazDe,GhBT/B,EAFFA;AGqEQA,AazDV,AGIE,AlCSF,A4BXG,AtCIN,AkBzBA,QuBmBO,A/BaA,C+BbC,AHEO,IMEH,AlCSA,C+BbC,A/BaA,EkB4CM,EgBrDF,ANFX,C5BWH,A4BXsB,EVuDD,AlB5CJ,C+BbjB,AHEG,EVuDqB,AazDJ,AHEO,GMEzB,ChBqD0B,AUvDzB,CVuD0B,CUvDI,OVuDT,EAAdA;ADKR,Ac7DA,AGID,AlCSC,A6BgBN,AD3BEC,AbZI,AVPF,K6BmBuC,ClCWrC,A4BXA,EC2BN,CAAA,AxB9CS,CY8EK,AFvEJ,CmBcC,AlCSA,A4BXTA,CX2Dc,AjBhDJ,C+BbC,Ed6DM,CAAC,CjBhDd,CAAY,A6BgBlB,CAAE,CZgCsB,CAAC,CAAD,CAAJ,AjBhDd,AevBiB,GEuEO,AjBhDJ,EevBE,CcuC5B,CZgCkC,AjBhD5B,CiBgD6B,AZ9Eb,CY8EY,AYhChC,CZgCiB,IAAsB,AFvEnC,CEuEa,CFvEoB,EEuEM,AYhC3C,GxB9CE,C0BiBkC,Kd6DgB,CAAC,AYhCrD,CZgCoD,CAAhD,CYhCS,CE7BF,CAAP;AbyDQ,ADKR,Ac7DD,AGICD,AlCSD,A6BgBH,AD3BAA,AbZM,AVR6B,K0BgBjC,CHII,EbZA,CcuCG,CZgCG,AiBzDF,CHJD,AHEE,GC2BG,AD3BA,CAAC,CVsDC,CgBpDC,AvCejB,CiCjBkB,CAAC,CMEC,ChBoDC,AW3BrB,EdvCqB,CpB6BrB,AiCjBe,CVsDU,AUtDA,EbZA,IEuEQ,EtB1CjC,CsB0CoC,CW3DF,CX2DI,CtB1CtC,AiCjByB,CMEE,CjByDc,AW3DH,CjCiB/B,AoB7BD,CEuE8B,AtB1C7B,CiCjBkB,EVsDU,ADKW,AW3DH,EX2DK,EiBzD5B,CjByD+B,AiBzD/CA,ChBoDY,CDKZ,GCJc,KAAK,IAAI,mBAAU,KADrB,IAEE,KAAK,IAAI,mBAAU,KAFzB,EAEgC;AAC9B,ADGV,Ac7DA,AF6BN,AD3BI,AbZG,AVRD,CwB6CN,GDzBI,EX2DE,EZ/EA,CuBoBG,GAAG,CGFC,EHET,GGFc,C1BlBD,GY+EO,GAAG,Cc7DrB,eb0DwB,KDGkB,GAAG,KAAK,ECHxC,oBDGV;ACFU,ADGT,Ac7DF,AGGC,AlCSF,A6BkBJ,AD5BI,AbZC,AVTY,SL+BR,CkCTC,CNDC,CMCC,ANDA,EVwDI,ElB9CZ,A4BVY,CAAC,EMCE,ANDH,EAAK,EMCE,ChBuDG,AUxDV,EAAU,EMCE,CNDZ,CAAZ,oBMCM,CAAJ,EAA+C;AxBqBrD,AwBpBQ,AlCQQ,A4BTb,AbZA,AVV4E,GuBmB9D,CAAfA,IvBnB6E,EK2C/E,CAAA,EwBpBa,G7BvBiE,CAAW,GK2CzF,CAAE,UL3C4E,EAAxE,EK2CN,AwBpBQ,CAA4B,ExBoBlC,KwBpBM,IxBoBN,AwBpB6C,IAAI,UxBoBjD,CAAe,OwBpB8B,CAAc,GxBoB3D,EAA4B,AwBpBoC,SAAL,CAAe,aAA7B,CAAvC;AxBqBN,AQkCc,ADGZ,AiBzDG,AlCOkC,A4BRvC,I5BQuC,GUahC,COqCC,CjBlDoC,A4BRrC,C5BQsC,I4BRjC,C5BQV,E4BRa,CVuDG,CRlClB,GAAsB,AkBrBV,EX0DV,CW1DqB,CX0DG,AW1DF,CAAxB,CVuD4B,KRlC5B,AQkCiC,CAAnB,EAAsB;ARjCtC,AQkCkB,ADGZ,AW1DL,AbbC,AVVI,CK0CN,QKhCS,CEuEG,GZjFD,CYiFK,AZjFJ,CYiFK,EZjFF,CYiFH,AZjFD,CYiFU,CAAC,AZjFJ,Ca8EK,ADGA,CAAD,AZjFF,CYiFC,CFvEnB,CVVqB,CYiFK,CAAC,CAAC,CAAD,CAAjB,KAAyB,CZjFH,Ca8EhB,Ab9EiB,EYiFM,CAAC,GAAL,AZjF/B,CYiFwC,CAAC,AZjFJ,CYiFK,AZjFJ,CYiFG,CAAD,CZjFC,EYiFM,AZjF/C,CYiFgD,CAAC,AZjFJ,CYiFG,CAAjB,AZjFgB,CYiF/C,AZjFA,EYiFsD,AZjFJ;AK8CxD,AQiCkB,ADGV,AiB1DF,AlCOF,AepBH,AVVO,QL8BA,CAAC,CK9BD,G6BuBK,ClCOC,EK9BA,E6BuBI,C7BvBD,Ea8EM,AlBhDnB,EAAmB,OK9BK,Ca8EV,Ab9EW,CAAD,CAApB,O6BuBK,CAA4B,OAA5B,CAAP;AhBwDW,ADGT,AiB1DH,AlCOC,AK9BE,UAAA,CL8BG,CiBmDK,EAAE,AZjFN,GYiFS,CAAC,AjBnDhB,AK9BU,CYiFO,CAAC,CAAC,AjBnDJ,CiBmDG,AZjFJ,CYiFG,AZjFF,EL8Bf,CiBmDwB,AZjFd,CYiFe,AZjFN,CYiFO,CAAD,CAAT,IAAgB,CAAjB,EAAoB,CAAC,CAAC,CAAC,CAAD,CAAD,AZjFF,CAAC,EYiFQ,CAAC,CAAC,CAAD,CAAT,AZjFM,CAAC,CAAD,CAAP,CYiFiB,CAApC,AZjF+B,CYiF5C,KZjFgC,CAAxB,CAAR;Aa+EO,ADGP,AjBnDH,YiBmDW,KAAK,GAAG,KAAK,aAAL,CAAmB,EAAnB,CAAhB;ACFK,ADGL,AYhCR,AxBlDQ,QwBkDR,CAAA,EXgBkC,CDgBlB,CCHD,CDGG,CZlFL,CAAC,CakEoB,ADgBb,AtB1CnB,CuB0BQA,ADgBY,AYhCtB,CZgCuB,AYhCrB,AxBlDe,CYkFO,AZlFX,CYkFY,CAAD,AZlFJ,CYkFG,CZlFD,EYkFQ,CAAC,AZlFN,CYkFO,AtB1C9B,CsB0C6B,AYhC/B,CZgCsB,EYhCpB,CxBlD6B,CYkFO,AZlFN,CYkFX,EAAoB,AtB1CvC,CsB0CwC,CAAC,CAAC,AZlFpC,CYkFmC,AYhCzC,CZgCwC,AZlFF,CAAC,EYkFQ,AtB1C/C,CsB0CgD,AtB1CvC,AUxCiC,CYkFO,CAAD,AtB1ChD,AUxCM,CYkFiC,CtB1C1B,AUxCiC,CwBkD9C,CxBlDgD,CYkFO,AZlFjD,CYkFa,AYhCN,AlCVb,CsB0CM,AZlF6C,CVwChC;AuBwCX,ADGF,AjBpDJ,A6BoBF,AlCVE,ALZG,AkBzBA,AHHG,ML8BJ,ELUE,CkCUG,AlCVF,ALZO,AkBzBA,ER2BL,CiBoDK,AZlFN,EwBkDM,AlCVF,CuBuCC,Cb/ED,CYkFO,AjBpDjB,GiBoDoB,AZlFN,CwBkDhB,CvCtBK,CAAuB,AkBzBvB,CAAwB,AHHT,CYkFO,AtB1CzB,AUxCmB,Cf4BhB,CKYoB,CLZQ,AkBzB5B,AHHW,CAAS,CGGU,IAA9B,CU4EG,CAA0B,AV5EO,ES+EnB,CAAmB,CCHjC,AV5EH,CU4EkC,ADGjB,CAAhB,AT/EyC,EHHP,CAAC,CGGpC,EAAgD,GHHN,CAAC,CAAD,CAAP,Ea+EhC,Ab/E4C,EGG/C,EAA4D,EHHzB,CAAxB,CAAR;AagFD,ADID,AjBrDJ,A6BoBJ,AlCVM,ALZJ,AkBzBA,AHHO,CwBgDT,KvCpBM,AkBzBA,GlByBG,EUEE,EiBqDI,AtB3CF,ALZA,CKYP,EKVU,AVFA,AkBzBd,CR2Be,AVFA,CkBzBC,GSgFV,CACE,CADF,Ac9DN,A/BSE,AVFF,E2BwDa,A3BxDU,C2BuDjB,EACU,EADV,EACc,EADd,EACkB,IADlB,EACwB,IADxB,EAC8B,Gc/DpC,Ed8DM,EACqC,KADrC,Ac9DN,Ed+DkD,cAAc,GAAG,CAD7D,Kc9DN,CAA0B,UAA1B,EAAsC;Ab2DjC,ADKC,Ac/DJA,AF8BJ,AlCXK,AarCD,AHHG,IGGH,GUuD4B,CAqBxB,Aa1DE,IbqCsB,CAqBnB,ADKE,CTjFD,CAAC,CuBkBG,AvBlBJ,CUuDkB,AVvD5B,CUuDE,CarCe,CvBlBD,CSiFZ,CACE,EADF,Ac/DkB,AvBlBtB,ESkFY,EADR,EACY,CADZ,EACe,CADf,EACkB,CchEL,EAAjBA,Ed+DI,EACyB,KADzB,EACgC,IADhC,EACsC,IADtC,EAC4C,cAAc,GAAG,CAD7D;ACHF,ADKG,A3B1DgD,AkBxBrD,IlBwBqD,AkBxBrD,GSuEE,A3B/CsD,CAAC,G4BqDlD,EDKI,C3B1DyC,AkBxB1C,ClByBR,AkBzBS,CAAD,CAAV,GAAgB,GU6Ed,CAAkB,AV7EpB,OU6EE,CAA0B,E5BrDwB,CAC9B,GAAG,CAAC,G4BoDW,C5BrDe,EACpB,C4BoDJ,EAAe,A5BpDR,C4BoDP,A5BpDQ,E4BoDU,GAAlB,EAAuB,M5BrDC;AoBkBxD,AQoCQA,ADKA,AcjEJ,ApCoBAC,AiChBG,AtCIHD,AkBzBA,AHJE,IGIF,IuBiBI,ApCoBA,ALZE,CsCJM,ClBoBhB,CAAA,CQoCc,CvBxCD,CarCC,CAAC,CuBiBC,ApCoBA,AarCF,CU6EK,AUxDZ,AtCIY,AkBzBf,CoBqBqB,ElBoBzB,AQoCsB,Aa5DF,AzCQE,AkBzBF,CEyClB,AqBxBmB,ApCoBA,AiChBd,EAAuB,CVwDJ,AV7EtB,CU6EuB,MUxDpB,CtCI2B,C4BoDZ,AUxDkB,AtCIL,E4BoD3BA,C5BpD8B,CAAC,CKYvB,CAAuB,EAAvB,CeIhB,AfJIC,CoCpB4B,AHIzB,AtCI2B,EoBgBhC,AkBpBkD,AtCIL,GAAG,CAAC,EyCR9B,EAAqB,AzCQR,CoBgBhC,ApBhBED,SyCRiB,CAAjB,EAAmD,SrBwBrD,CAAsB,IAAtB,EAA4B;AAC5B,AOyCM,AcjEF,AHIJA,ApBrBE,AHJC,IGID,EoBqBI,ClBoBC,KOyCO,CcjEH,AHIE,CX6DG,ATlFJ,CAAC,CoBqBG,ApBrBJ,CSkFO,AcjEf,AvBjBF,CSkFkB,CAAC,CAAC,ATlFJ,CSkFK,CAAD,CAAD,CW7DG,ApBrBtB,ESkF0B,CAAC,CAAC,AW7DF,CX6DC,CPzC7B,AOyCoB,GPzCa,COyCG,CAAjB,EPzCnB,AOyCuC,CAAC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAAT,IAAgB,AW7DvDA,CX6DmB,CAAb;APxCR,AQmCQ,ADMA,AcjEH,ApCmBD,AiCfF,AtCGE,AkBxBA,AOQG,CL+BP,IqBxBI,GpCqBI,ALZA,CKYC,AiCfA,AbbO,EgBSL,AvBjBA,CU4EC,ADMI,AW7DJ,CAAC,CjCeT,EAAY,CuBwCC,ADMI,A3B1DjB,CsCHK,CAAU,AtCGA,C2B0DK,CCNH,AV5EjB,ISkFyB,IW7DD,IbbrB,CAAkC,IE0EjB,CAAmB,AW7DxB,CVuDY,CDMP,AW7DgB,CX6DhC,ECNA,CHpED,CGoE8B,AUvDlB,CbbmC,CaaP;AlBsB/C,AQkCU,ADMF,AcjEF,ApCmBA,AiCfF,AtCGEA,AkBxBH,AOQD,AVbE,EUaF,CPdA,Gb0CI,EiCfE,CpBrBC,AHLA,CaiFC,A5BpDE,CKYD,ALZE,C2B0DG,CcjEH,AHIA,CVuDC,ADMI,AtB9CJ,ALZE,C4BoDD,CHpEC,CE0EK,AF1EJ,CE0EK,AcjEJ,ApCmBZ,AiCfY,CVuDR,ADMa,AW7DnB,CX6DoB,CAAC,AW7DJ,CX6DG,CAAD,GAAO,CAAC,AcjEzB,CdiE0B,AF1EhB,CE0Ee,AF1E7B,CE0EoB,C3B1DW,Ae7BX,GYuFgB,A3B1DtB,C2B0DK,EAAoB,A3B1DF,C2B0DG,CAAC,CAAC,A3B1DF,C2B0DC,A3B1DA,C2B0DD,GAAO,CAAC,CAAC,CAAD,CAAT,CZvFrC,Ef6BY,C2B0DyC,CAApC,CAAb,A3B1DiD,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAnDA;A4BqDG,ADMD,AcjEH,ApCmBC,AiCfA,ApBrBF,AOQF,AVdyC,EUczC,SpB4BS,AapCA,CSkFK,ATlFJ,CoBqBC,AbbA,CAAC,EPRH,CSkFU,AW7Df,CpBrBY,ESkFM,CF1EtB,CPRS,AOQW,EPRE,CSkFK,GtB9CvB,AapCK,CboCkB,CapCC,CboCxB,CoB5ByB,EPRpB,CboCwB,AapC/B,GSkFoB,AF1EF,CE0EqB,CtB9CrC,AoB5BiC,CE0Ef,CAAhB;ACLD,ADOC,AtB/CH,AiCfA,AtCEC,AkBvBH,AOQC,AVdEA,IUcF,CpByBA,EuBsCE,G5BhDI,CKaC,ALbA,Ce7BC,CYyFG,EtB/CA,AoB5BA,CzBeC,AyBfA,CzBeC,CAAX,EKac,ALbA,C2B4DZ,AjBxDN,CiByDQ,AZ1FY,CYyFd,AF3EJ,CAAoB,CE4ET,AtBhDU,CAAC,CsB+ClB,AtB/CG,EsBgDQ,AtBhDU,EsB+CrB,AjBxDN,EiByDqB,CADf,AF3EyB,EE4EP,IADlB,AjBxDN,EiByD8B,GF5ER,EE2EhB,AjBxDN,AenB4C,CfmBpC,CiByD6B,EjBzDrC,EAAa,CiBwDP,EACsC,EjBzD5C,EiBwDM,AjBxDc,EiByD8B,cAAc,GAAG,CAD7D;AAEA,AjBzDJ,A6BmBJ,AlCVM,ALbE,AkBvBP,AOQK,AVfgB,QwBqDtB,AvCvBQ,CUIC,A6BmBT,CdtCU,EfmBN,CiByDW,AjBzDF,ALSA,CAAP,EKTF,AenBY,CzBeC,CUGK,A6BoBtB,AvCvBkB,CUIA,A6BmBhB,EZsCM,AF5Ea,CE6EX,EADF,A3B7DA,CAAiB,C2B8DT,A3B9DR,C2B6DA,CYtCR,AvCvB4B,C2B8DT,A3B9DX,C2B6DA,CYtCN,CZuCoB,AF7EhB,EE4EE,AF5E0B,EE6ER,IYvCxB,CZsCM,EACyB,IADzB,EAC+B,AYvCrC,CAAU,CAAV,EZsCM,AYtCO,EZuC8B,KADrC,EAC4C,cAAc,GAAG,CAD7D;ACPF,ADSG,AYvCP,AlCVG,AiChBDA,AtCGG,AyBfC,AVhBgF,MwBsDhF,ED1BE,AvB5B8E,EaoF9E,CW9BG,AD1BA,GAAG,EvB5BuE,CAAW,CwBsDhG,EX8BkB,AW9BE,CD1BC,CMArB,ANAsB,GVwDC,AUxDE,CVwDrB,AUxDsB,EVwDA,CHpEH,CVhB8D,CuB4BtD,CvB5B3BA,EuB4B8B,CAAT,AbZnB,CmBYN,ANAqB,CbZU,CaYO,OMAtC,GNAqB,AbZf,CaYJA,CbZ0C,MmBY5C,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,AnBZM,EmBYe,UAArB,EAAiC,UAAjC,EAA6C,GAA7C,EAAkD;AhByD5C,AgBxDJA,AlCMA,A6BoBA,AD1BA,AbZG,QGoEC,AgBxDE,ClCMD,E6BoBI,AD1BF,EAAE,GC0BK,AD1BF,CMAG,AlCMf,CkBkDc,AlBlDA,CkBkDC,AUxDA,CMAG,ANAT,CMAU,AlCMnB,CkCNkB,ClCMC,A6BoBnB,CX8BoB,AgBxDE,ANAF,CMAF,EAAO,CAAP,CAAlBA,AlCMA,GAA4B,EkBkDb,AUxDe,CVwDC,ElBlD/B,C4BNkC,CVwDnB,CAAqB,CUxDC,GVwDtB,CAAD,CUxD4B,CVwDC,AUxDpC,CVwDO,AUxDd,CVwDI;AACD,ADQD,AiBhEFA,AL0BC,AlCVDA,AiChBD,AtCEG,AyBdD,AVjBC,GwBqDJ,AD9BO,CAAP,CbVE,GmBgBM,AvCgBA,CkCUC,CvCxBD,GKcK,AU7CJ,CAAC,EV6CM,CU7CH,CAAJ,Cf+BQ,C4CFG,AvCgBA,ALdF,Ae/BF,EAAE,C6B6BK,AvCgBA,EU7CF,Cf+Bb,E4CFoB,AvCgBZ,GAAgB,ALdH,CAAzB,EAA4B,Ce/BD,CAAC,EV6CO,EAArCA,CAbiB,CAawB,AU7CvC,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD,C6B6B9B,CACnB,SADmB,EACR,UADQ,CAArBA;AxBqBJ,AQoCK,ADQE,AiB/DHA,ALyBA,AD1BH,AtCEO,AyBdL,AVjBK,GUWN,KmBmBQ,A5CCF,EoBkBR,ALjDQ,CKiDR,AmBMa,GxBvDD,C6B8BK,CLyBC,EKzBE,A7B9BJ,EKiDhB,CAAE,EpBlBqB,CuCwBV,AvCxBW,CuCwBG,AxBvDJ,CwBuDV,AxBvDW,CwBuDpB,AvCxBuB,CAAC,E4CDI,GAC1B,C5CAiB,EAAa,Ae/BF,CAAC,C6B+BxB,A7B/BuB,Cf+BK,Ae/BhB,Cf+BiB,Ce/BD,EKiDvC,CpBlBuB,CAAf,CoBkBN,MLjDqB,C6B+BjB,A7B/BE,C6B+BmB,CxBkBzB,WwBlBI,EAAmC,SxBkBvC,CwBlBI,ExBkBqB,AwBlB0B,UAA/C,CAD0B,GACmC,SAD/DA;AxBoBF,AO4CG,AiB9DDA,ALwBC,AlCXD,ALbG,AyBdN,AVjBM,Q6B+BG,AvCaF,CeKG,GwBlBG,CvCaD,CeKG,CwBlBC,EvCaA,EuCbI,GvCaC,EuCbI,SAAT,AvCab,CuCZE,CvCY6B,EeKjC,MwBlBe,EAEX,OAAO,KAAK,SAAZ,GAAwB,mBAAU,IAAlC,GAAyC,mBAAU,KAFxC,EAGX,OAAO,KAAK,SAAZ,GAAwB,OAAxB,GAAkC,EAHvB,EAIX,KAAK,WAJM,EAKX,KAAK,gBALM,EAMX,KAAK,WANM,CAAbA;AxBmBD,AwBZC,ALkBJ,AlCXM,ALbD,CoBgBL,AmBEA,GKZI,IAAI,CAAC,GAAL,CvCOS,CAAP,CuCPS,GAAX;AjByDF,AiBxDE,ALmBJ,AlCZK,AU7CC,MY8FE,MAAN,EAAc,UiBxDL,IAAP,EAAa,mBAAU,MAAvB,EACE,KAAK,gBADP,EACyB,IADzB;AjByDA,AiBvDA,A5CRA,AkBrBG,AHVF,QY8FK,CAAC,ATpFK,E0B6BL,GjBuDK,CP3CD,AwBZX,K5CRM,GAAN,KkBrBG,CAA6B,ESoFhC,EAA+B,MTpF5B,EAAyC;ASqF1C,AtBlDF,ALbD,AkBrBD,SAAO,EbkCE,YoClBT,AvBhBqB,CACnB,ObiCc,CalCK,EACT,EbiCS,GAAG,GalCH,CuBgBrB,CpCkB6B,AajCP,CAAC,OuBevB,CvBhBqB,EbkCZ,AajCwB,CbiC/B,AajCgC,QADb,EACuB,GuBe5C,CAAkB,MvBhBG,CAArB,GuBgBA,EAA8B;AdqEzB,AcpEH,AzCKH,AkBpBA,AHZG,W0B2BO,KAAK,K/BUd,MAAA,I+BVE,K/BUF,GAAA,CAAI,GAAJ,EAAS,KAAT,EAAgB;AACd,AKtCS,uBauFX,ElBjDS,EAAE,GAAG,IAAI,KAAK,GkBiDvB,KlBjDS,CAAP,EACE,CkBgDJ,ClBjDE,EADc,CAER,YkBgDR,GAAmB;AACjB,ADQA,AZ/FE,SauFG,ADQE,KZ/FC,IAAI,KAAJ,CY+FR,AZ/FkB,GY+FO,ECRzB,CAA0B,CDQ1B,MCRA,CAAkC,kBbvFgB,GauFlD,CbvFQ,CAAN;AawFF,ADQC,AjBzDDA,AKtCC,QLsCK,CkBiDD,IlBjDM,gBkBiDX,GAA4B,IAA5B;AACD,AlBlDY,AK1Eb;AYqIA,AjB3DsC,A6BqBxC,OZsCS,CYtCT,CAAA,SAAA,CZsCE,AYtCA,CZsCoB,CAApB,CiBvDA,CjBuDuB,CAAvB,EAA0B,CAA1B,EAA6B,GiBvD7B,ALiBF,CZsCE,EAAmC,AYtCnC,IZsCA,EAAyC,AiBvDzC,GLiBA,CZsCA,GiBvDA,CAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CLiBA,CKjBiB,ALiBH,CAAd,EAAiB,OKjBjB,EAA6B,UAA7B,EAAyC;AjBwDzC,AiBvDEA,AlCJE,A6BqBJ,AxB1DA,MLqCI,CiB2DG,CiBvDC,CLiBC,AxB1DF,CLqCC,EAAE,CKrCV,CwB0Dc,C7BtBwB,IiB4DtC,CAAoB,CAApB,EAAuB,CAAvB,AiBvDwB,EjBuDE,AYtCjB,CZsCT,AYtC2B,CAAlB,CZsCoB,AYtC7B,IZsCA,EAAmC,IAAnC,EAAyC,IAAzC;AACF,AiBxD0B,AlCHpB,A6BqBN,AxB1DC,Ca1M4B,ADmM7B,AY+DA,CXlQyB,IlB+OnB,KAAK,EAAE,EkB/OgB,CAA7B,ClB6OwC;AiB+DxC,AiB1DsF,AlCFhF,A6BsBN,ArB7CO,MRuBD,GkCEqF,A1BzB3E,ERuBL,EAAE,KAAK,IkCEoE,EAAlFA,ClCLoC,YQpBjC,CAAsC,UAAtC,EAAkD,UAAlD,EAA8D;ARwB/D,AVHC,AkBpBLA,MRuBI,AQvBE,CAAC,ElBoBO,CkBpBJ,ERuBA,EAAE,CkBkDC,K5BrDR,AkBpBe,ClBoBM,AkBpBL,CAAD,CAApBA,IlBoBK,EAA6B;A4CKhC,AlCNoC,AVEtCA,AkBpBAA,KRkBEA,CVEI,AkBpBA,CAAC,C0BwBD,CAAC,C1BxBG,ObgCV,ALZiB,GAAG,AkBpBA,CAAC,CAAD,CuBcpB,AvBdAA,SbgCA,ELZkC,CAAC,MKYnC,ALZkC,CyCNlC,AzCMAA,C4CIM,IACA,CAAC,GHXP,EpCkBA,CAAa,EAAb,EAAiB,MuCRX,GHVN,CAAiB,AGWU,CHX3B,AGW4B,EHXR,QGUd,EHVN,EAAgC,AGWU,UHX1C,EAA4C,UGWS,gBAAX,EAA6B,UAA7B,CADxC,EACkF;AHVlFA,AGWE,AvCOF,AahCF,AOOK,QgBOG,ApCkBF,CAAC,AahCA,AOOO,ImBkBH,CvCOC,EoClBI,EGWA,CHXG,IvBdE,CuBcG,AvBdF,CbgCpB,AahCmB,EbgCI,AahCA,CAAJ,EAAO,CAAP,COOhB,CmBkBM,A1BzBoB,AOOO,CmBkBN,A1BzBX,C0ByBV,C1BzBuB,C0ByBC,CAAxB,EAA2B,CAA3B,EAA8B,EnBlBpC,CPPgB,CAArB,AOOoD,CgBOjC,CAA8B,IGWtC,EAA0C,IHXlC,AhBPd,CgBOHA,ChBPgE,UmBkBG,IAAI,EnBlBpE,EAA+E,MmBkBzE,CAAP,SnBlBC,EAAiG;AgBQpGA,AGWC,AlCHD,ALUE,ALbJ,AkBnBD,AOOC,EAAA,GmBeE,C5CHE,EyCLI,A/BQF,CAAC,EkCGE,EvCOE,CKVC,AefA,CAAC,EzBYb,CKaI,CLba,EUGf,C+BRoB,AhBPtB,CfeqB,AefA,EgBOI,KAAK,GhBPA,WAAT,EAAsB,CgBOlB,CAAuB,UAAvB,CAAvBA;AACAA,AGWEA,AlCHA,ALUD,ALbD,AyBZA,IAAA,IgBOM,CzCKDA,C4CMG,ClCHD,EVHI,E4CME,CHXC,AhBPF,CzBYZ,AyBZa,CmBkBG,AlCHd,C+BRe,E/BQA,AVHE,E4CME,CnBlBrB,CAAqB,CfenB,MVHF,EAAgC,CyBZF,EgBON,QAAQ,CAAC,AhBPZ,EmBkBL,AnBlB2B,CmBkBI,QHXvB,CAAqB,CAArB,AGWR,CHXC,AGWfA,EHX+C,KAAK,OAArC,CAAjBA;AGYEA,AlCHD,AVHC,AyBZA,KfaF,CVDE,I4CMM,ClCHD,QkCGU,E5CNA,C4CMG,A5CNF,C4CMG,CAAD,EAAI,CAAJ,AnBlBD,CzBYF,C4CMU,CAAP,A5CNM,C4CMxBA,G5CNe,CAAf,GyBZA,EAA8B,WAA9B,EAA2C,gBAA3C;AE2EN,AcpEI,AGYEC,AlCHA,A6BqBN,AlCZI,ALZC,AyBZC,QgBME,AF8BR,CAAA,CKlBU,ClCHC,ALSA,EsBkDX,CAAA,AiBxDMA,EvCMU,EKTV,A6BqBN,C7BrBmB,A6BqBjB,GE9BoB,CdoEtB,CAAE,AjB3DI,E+BToB,CAAtB,A/BSuB,AefJ,EgBMM,G/BSvB,C6BqBN,AlCZW,CAAuB,EkCYhC,AlCZS,EoBxBL,EAA8B,EpBwBM,CAAC,CAAvC,CsBkDJ,AYtCE,GZsCA,GF1EI,EAA2C,IE0E/C,EYtCA,GAAiB,OdpCb,SE0EJ,GAAwB;AACxB,AcpEI,AGYAD,AlCHD,A6BqBH,AvCxBC,AyBZE,KAHD,CE6EM,GYtCC,CKlBC,EjBwDI,CcpEH,CF8BG,CZsCG,McpEb,CGYkB,GAAG,CLkBzB,eZsCA,OiBxDgC,SAAP,CAArBA;AjB0DJ,AcrEG,AF8BL,AvCxBC,AyBZE,CckCH,EdvCE,EgBSE,EduEK,IcrEE,MdqET,CAAkB,OAAlB,CAA0B,UAAS,QAAT,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B;AACnD,AcrEE,AGWA,AlCHF,A6BuBJ,AdrCC,QE2EW,CjB7DH,CkCGC,CjB0DK,EcrEF,CdqEK,CiB1DH,CAAC,AlCHZ,GAAe,GiB6DO,CAAC,CjB7DvB,GkCGM,CAAkB,CjB0DxB,CcrEmB,QAAV,EAAoB,AGWvB,CAAJ,EAAqC,WHX9B,EAAoC,KAAK,OAAzC,CAAP;AdsEF,AcrEC,AGWG,AlCHJ,QkCGI,ClCHC,GkCGG,KlCHR,CAAc,GAAd,IAAqB,KAArB,IiB6DmB,MAAnB,EAA2B,GAAG,CAAC,CAAD,CAA9B;AACA,AiB3DQ,AlCFR,AQrBG,MRqBD,GQrBU,ERqBL,MAAP,iBiB6DmB,ITlFhB,CAAuC,CSkF1C,EAA2B,GAAG,CAAC,CAAD,CAA9B,ETlFG,EAAoD,UAApD,EAAgE;ASmFnE,AiB5DyD,A1BtB3DA,AHdK,MGcC,E0BsBqD,C7BpC7C,GGcF,C0BsBoD,CAAC,C1BtBlD,AHdV,CAAgB,C6BoCsC,CAAU,A7BpChE,EAAoB,QAApB,E6BoCsD,A7BpCxB,C6BoC7B,GjB4De,ATlFa,CAAC,EHd9B,EAAuC,CYgG1C,EAA2B,GAAG,ATlFE,CSkFD,ATlFjCA,CSkFgC,CAA9B,CZhGG,EAAmD;AYiGrD,AiB5DE,A1BtBL,AHdAA,GY2FA,GZ3FM,GGcC,GHdK,GAAG,UAAU,CGcD,CAAC,EHdI,IGcL,EAAS,QHdjCA,GGcwB,CAAxB;ASoFA,ATnFD,AHdCA,MAAM,GYiGG,CZjGC,GAAG,EYiGb,EtBrDA,gBAAA,CU5CuB,EAAE,CAAC,CAAD,CAAZ,CAAbA,EV4CA,aAAA,CAAc,EAAd,EAAkB;AsBsDpB,AiB9DMA,AvCSF,AoBvBG,AVrBLA,CYsFF,KZtFQ,EV4CA,CoBvBQ,CmBcJ,A7BnCA,G6BmCG,AvCSF,AU5CE,G6BmCG,KAAK,GvCSnB,EAAsB,CuCTR,CnBdX,CmBcDA,EnBdgC,GVrBb,EAAE,CAAC,CAAD,CAAZ,CAAbA;AYmGF,AtBtDM,AoBvBJ,AVrBAA,EUqBA,IVrBM,IAAI,CV4CD,EoBvBE,AVrBE,CUqBD,KAAZ,EVrBqB,GAAG,IV4CpB,CAAuB,CU5C3BA,CV4CI,IAA6B,CAAC,CAA9B;AuCTA,ALsBN,AlCZK,AoBvBH,AVrBAA,MAAM,EwBwDR,CAAA,AxBxDW,C6BkCD,E7BlCI,E6BkCA,E7BlCI,CAAC,C6BkCD,ALsBlB,CAAE,ExBxDY,C6BkCQ,A7BjClB,C6BiCmB,GAAL,A7BjCV,CAAC,G6BiCqB,A7BjC1B,CAAS,E6BiCP,EAA6B,A7BjC/B,IAAiB,IAAI,CAAC,CwBuD1B,ExBvDqB,CwBuDnB,AxBvD4B,IAAT,CAAjB,GACE,CwBsDJ,GxBtDQ,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,CwBsD9B,CAA2B,ExBtDN,CAAjB,GAAkC,GwBsDtC,CxBtD0C,CwBsDJ,AxBtDK,GAAL,CAAS,OAAT,CAF1B,CwBwDZ,AxBxDAA,EwBwDqD,UAArD,EAAiE;AKrB3D,ALsBN,AlCZC,AoBvBF,AVnBCA,MwBsDM,AxBtDA,GAAG,GAAG,G6BgCC,ALsBE,CAAC,AxBtDA,CwBsDD,CAAT,CKtBA,A7BhCa,EwBsDE,ExBtDE,CAAC,EwBsDE,GxBtDP,CACjB,GwBqDF,CxBrDM,CwBqD6B,AxBrD5B,GAAL,CAAS,OAAT,IAAoB,IAAI,CAAC,GAAL,CAAS,IAAT,CAApB,GAAqC,IAAI,CAAC,GAAL,CAAS,IAAT,CADpB,EAEjB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,GAAT,CAFjB,CAAnBA;A6BiCK,ALsBH,AxBpDF,O6B4BI,CLwBI,CxBpDD,CAAC,G6B8BG,ALsBE,WAAL,KAAqB,CAA3B,CxBpDgB,CwBoDc,ExBpDxB,CAAD,EAAiB,qBAAU,GAAV,CAAjB,CAAP;A6B+BMA,ALsBF,AxBpDL,UwBoDa,EKtBA,ELsBI,GAAG,I7BrBnB,KkCD0B,ALsBE,CAAC,CAAD,CKtBC,ALsBV,E7BrBnB,C6BqBkC,CAA9B,CKtB8B,MlCClC,OAAA,CAAQ,IAAR,EAAc,IkCDe,CAA8B,gBAA9B,CAAvBA;AjB+DR,AiB9DQA,AlCCJ,A6BqBE,ClCvOwB,CAAX,OKkNV,C6BqBK,EKtBA,CjB8Dd,CAAA,AYxCkB,GAAG,AlCvOS,CAA9B,IKkNI,CiB6DJ,CAAE,CjB7DuB,CkCDG,ALsBE,CAAC,CAAD,CKtBC,AlCC3B,A6BqBiB,GAAe,CAA9B,CKtB8B,EjB8DpC,GAAE,SAAA,UiB9D6B,CAA8B,CjB8D3D,GAAe,MiB9Dc,CAAvBA;AjB+DN,AiB9DMA,ALsBF,SZwCK,GiB9DG,CLsBC,CZwCC,UAAd,IiB9D4B,GAClB,KAAK,QLqBsB,IAAxB,EAA8B,IAAI,GAAG,CAArC,EAAwC,IAAxC,EKrBH,ALqBiD,CKrBb,GLqBiB,GAAG,CAArD,EKrBH,ALqB2D,EKrBZ,UAA/C,CADJA,ALsBO,CAAT;AZyCH,AiB7DKA,ALqBD,CZsCP,WiB3Dc,GvCQC,IuCRM,GAAG,CHTtB,GGS0B,aAAJ,CACd,gBHVR,AGSsB,EACI,OHV1B,OGSsB,EAEd,UAFc,EAEF,SHXpB,CAA+B,IGST,EAGd,GHZR,EAA0C,IGSpB,EAGH,QHZnB,EAA0D,MGSpC,EAGe,KAAK,iBAAL,CAAuB,UAAvB,CAHf,EAId,KAAK,SAAL,EAJc,EAKd,UAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,UAAlB,EAA8B;AHbpCA,AGcQ,QHdF,SGcS,CHdC,GAAG,CGcC,aHda,EGclB,CAAqB,CAArB,CHduB,CGcC,CAAxB,EAA2B,CAA3B,EAA8B,EHd1B,GACjB,KGaa,EAA0C,OHdtC,GACA,KAAK,CGaT,CAAP,WHbW,EADnBA;AAEAA,AGaO,ALeP,ArBzCG,QuBaG,AF4BE,CKjBF,A1BxBM,C0B0BJ,IAFF,CjB2DK,AiBzDE,CHbC,GAAG,AGWX,CALc,EAOA,CLeG,CE5BD,EF4BI,CKfD,ILeM,WrBzC5B,CAA2C,KuBa7B,CAA8B,AF4BrB,CAAwB,IKtB9B,EAQd,E1B3BH,CuBac,AF4BS,CE5B1BA,AvBb+D,C0B2BpD,ALckD,KrBzC1D,EAAoE,GqByC7C,ArBzCvB,CqByCH,CrBzC4E,MAAzE,EAAiF,I0BmBhE,CAAhBA,K1BnBD,EAA6F;A0B4B5F,ALcJ,ArBzCFA,AOOK,MPPC,E0B2BA,CnBpBQ,EckCH,CrBzCC,G0B2BC,A1B3BE,C0B2BD,ALcE,GKdV,GAAc,GAAd,AnBpBD,CAA0B,QPPG,CAAC,COO9B,EAAsC,GckChC,CACP,GrB1C8B,CAAlCA,GOOK,EAAmD,MckC7C,EACY,SAAS,CAAC,CAAD,CAAT,GAAe,CAD3B,EAC8B,aAD9B,CAAT;AE5BA,AF8BC,ArB1CH,AOOA,MAAI,CAAC,CgBKC,CvBZC,IuBYI,IhBLX,EAAiB,EgBKX,MAAmB,GvBZG,CAAC,MuBYM,AvBZP,CuBYQ,CvBZC,OuBYZ,EAAvB,EAA8C,IvBZpB,EAA0B,MAA1B,EAAkC,GAAlC,EAAuC,MAAvC,CAA5B;AuBaI,AGeE,A1B3BP,AOOG,MgBKE,KhBLK,CmBoBC,EnBpBE,CgBKC,AhBLA,CmBoBP,EHfU,AGeA,GlCNhB,KedY,CAAV,EfcF,SAAA,C+BTsB,I/BStB,GAAQ,C+BTQ,EAAgB,SAAhB,EAA2B,UAA3B,CAAZ;AACD,AGeK,AlCNN,A6BoBF,AdlCC,GAFD,McoCS,AdlCF,CmBoBC,ClCNC,E6BoBT,AdlCW,GfcG,CkCMC,CAAC,EnBpBE,SmBoBV,ClCNC,AedE,EmBoBmB,AlCN5B,EAA8B,CedC,CmBoBzB,OnBpBD,EAAoC;AmBqBnC,AlCNJ,A6BoBN,AdlCI,CcsBJ,SKFU,ClCNC,AedA,GfcL,AedQ,CAAC,EmBoBE,CAAC,OnBpBJ,CAAV,WmBoBM;AHfN,AGgBM,AlCNL,A6BqBL,AdnCG,GAFM,MAEA,CmBoBC,CHhBC,IGgBI,CAAC,OAAN,CAAc,YAAd,EAA4B,MHhBV,CGgBlB,QHhBC,EAA4B,QAA5B,IAAwC,SAAxC,GAAoD,IAA3D;AGiBK,AlCNN,AedC,SmBgBI,MAIO;AACL,UAAA,KAAK,CAAC,GAAN,CAAU,YAAV,EAAwB,OAAxB;AACD,AnBrBwB,MAAA;AAD7B,CfhQ8B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EmBmBE,ALeI,CdlCH,CAAb,EAAgB,CAAC,GAAG,CmBmBb,CAAe,ELe1B,CKfW,CAAmB,AnBnB1B,EAA4B,CAAC,IAAI,KmBmB1B,CAAP,GnBnBA,EAA4C;AcmChD,ArBvCK,AOKCD,OckCC,ErBvCO,GOKF,GPLP,CAAgB,COKJ,GAAG,GPLf,EAAyB,IqBuC9B,CAA8B,ErBvCzB,EAAkC,AOKL,CAAC,CckCC,AdlCA,CckCC,CAAD,CAApC,EAAyC,AdlCA,CAAC,CAAD,CAAN,EAAW,CckCC,CAAC,CAAD,CAA/C,CdlCmD,CckCC,AdlCA,CckCpD,AdlCqD,EckCE,CdlCC,CAAL,CAAhB,CAAD,CckClC,AdlCMA,EckCwD,SAA9D;AKfI,ALgBJ,ArBvCA,AOKM,MckCE,ArBvCJ,EOKE,EmBkBE,ALgBI,GAAG,ArBvCJ,C0BuBC,A1BvBA,AOKA,CmBkBC,A1BvBF,AOKE,CPLT,AOKQ,CAAN,CmBkBE,C1BvBS,COKC,EmBkBE,ALgBI,CAAC,CAAD,CKhBpB,ALgBJ,AdlCuB,CPLC,AOKA,CmBkBC,A1BvBA,AOKF,CPLC,AOKlB,CPLN,EAA6B;AuBSxB,AF+BL,ArBvCE,AOKI,IgBGK,AvBRT,EqBuCM,EdlCF,EckCM,CrBvCH,CAAC,CqBuCK,ArBvCN,CAAP,AOKU,CAAC,CAAC,CPLC,EuBQW,AhBHT,CAAL,CAAN,CckCkB,CAAC,CAAD,ArBvCF,AOKA,CckCtB,ArBvCuB,CAAD,CAApB,EOKyB,CAAC,CAAD,CAArB;AgBGkC,AFgCxC,ArBvCC,OqBuCM,sBAAP,CAA8B,MAAM,CAAC,CAAD,CAApC,EAAyC,MAAM,CAAC,CAAD,CAA/C,EAAoD,CAApD,EAAuD,IAAvD,EAA6D,SAA7D;AEhCwC,AFiCxC,AdnCM,ScmCG,CEjC+B,GhBF7BC,EgBE6B,EAAA,AhBFzB,CAAC,GAAG,SAAS,GAAG,CAAzB,EAA4B,CAAC,GcmCF,CdnCM,CAAjC,EcmCG,AdnCiC,EcmCH,AdnCK,CAAtC,EAAyC,McmCC,CAAC,CAAD,CAAvC,EAA4C,IAA5C,EAAkD,SAAS,CAAC,CAAD,CAA3D,EAAgE,aAAhE,CAAT;AE5BA,AGaMD,ALgBR,ArBxCE,AOKQ,Cc4BV,KrBjCM,IOKI,CgBMR,CGaY,C1BxBD,CAAC,CAAD,CAAP,AOKU,CAAC,CAAC,CPLC,EOKE,CAAL,CmBmBS,AnBnBf,GgBMR,AGa0B,A1BxBF,AOKA,CgBMZ,AvBXa,CAAD,CAAxB,C0BwBMA,CHbN,AvBX6B,AOKA,CAAC,CgBMZ,AhBNa,GAAG,CgBMlC,AhBN6B,CAArB,CgBMgB;AAEtBG,AGYI,ALiBR,ArBzCI,AOKK,IgBOLA,AvBZA,I0BwBI,CHZJA,CAAAA,CvBZO,C0BwBC,A1BxBA,CAAD,CuBYPA,AvBZA,CuBYK,AGYM,E1BxBE,EuBYbA,CGYgB,CHZV,GvBZc,CuBYpBA,AvBZqB,CAAD,CAApB,I0BwBW,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkD,GAAlD,CAAP,CALmB;A1BlBxB,AOKI;AmBqBC,YAAI,WAAW,CAAC,QAAZ,MAA0B,mBAAU,IAAxC,EAA8C;A1BzBpD,AOKI,MPLA,OAAO,AOKA,CPLC,CAAD,CAAP,GAAa,AOKb,OPLoB,CAAC,CAAD,CAAxB,EAA6B;A0B2BrB,A1B1BN,AOKC,IPLD,M0B0BM,C1B1BC,CAAC,CAAD,C0B0BG,A1B1BV,C0B0BW,E1B1BE,OAAO,CAAC,C0B0Bf,A1B1Bc,CAApB,E0B0ByB,WAAW,CAAC,WAA/B;AACD,A1B1BN,AOhBD,SmBuCM,MAGO;AACL,ALcV,AdpCC,QcoCD,CAAA,CKdU,IAAI,CAAC,GLcf,CAAE,OKdQ,GAAmB,QLc7B,GKdU,ALcR,SAAA,kBAAA,CAAmB,SAAnB,EAA8B;AE1B5B,AGaK,ALcP,ArBzCA,MqByCQ,ArBzCJ,GuBcG,GF2BO,CE3BZ,AvBdS,CAAC,CqByCK,ArBzCN,CuBcG,AvBdV,GAAa,CuBcf,AF2BoB,MrBzCE,CAAC,CAAD,CqByCP,ArBzCjB,CqByCgC,CrBzCH,QqByCY,CAAC,CAAD,CAAxB,CAAjB;AACA,ArBzCE,IAAA,EqByCM,KrBzCC,CAAC,CAAD,CAAP,EqByCgB,CrBzCH,EqByCM,KAAK,ArBzCJ,CAAC,CAAD,CAApB,UqByCmB,CAAmB,SAAS,CAAC,CAAD,CAA5B,CAArB;AKdM,ALeN,ArBzCC,MqByCO,EKfF,IAAI,CAAC,CLeK,GAAG,eKfb,GLeoB,KAAK,WAAL,CAAiB,SAAS,CAAC,CAAD,CAA1B,CAAP,EAAuC,KAAK,QAA5C,CAAnB;AKdM,ALeN,SAAS,CACP,GKhBS,GLgBD,CAAC,CAAD,CAAR,GKhBI,ALgBU,CKhBK,ALgBJ,OKhBX,CAAuB,CLgBH,CAAC,CAAD,CAAT,GAAe,GAAhB,EKhBV,EAAqC,ALgBJ,IKhBjC,ILgByC,CAAC,CAAD,CAA/B,GAAqC,UAD5C,EAEP,MAAQ,CAAC,CAAD,CAAR,GAAc,CAAC,SAAS,CAAC,CAAD,CAAT,GAAe,GAAhB,IAAuB,QAAQ,CAAC,CAAD,CAA/B,GAAqC,UAF5C,CAAT;AKdK,ALkBP,ArB7CE,CqBqCF,QrBrCS,OAAP;A0B4BG,ALmBL,ArB9CC,iBuBYE,CAAA,UAAA,cAAA;;AGgBC,CHhCsC,CAAL,SGgC1B,IAAP,CHhCsC,CAAnC;;;eAoBQ;;AvBTR,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,UAAlC,EAA8C;AACnD,MAAI,UAAU,CAAC,CAAD,CAAV,GAAgB,MAAM,CAAC,CAAD,CAA1B,EAA+B;AAC7B,IAAA,MAAM,CAAC,CAAD,CAAN,GAAY,UAAU,CAAC,CAAD,CAAtB;AqB6CJ,ArB5CG,QqB4CH,CAAA,SAAA,CAAE,kBAAF,GAAE,SAAA,kBAAA,CAAmB,SAAnB,EAA8B,UAA9B,EAA0C;AAC1C,MAAQ,MAAM,GAAG,KAAK,EKnBtB,OLmBiB,CAAe,SAAS,CAAC,CAAD,CAAxB,CAAjB,QKnBA,SAAA,0BAAA,CAA2B,MAA3B,EAAmC;AACjC,ALmBF,ArB7CA,MqB6CQ,ArB7CJ,E0B0BE,CAAC,OLmBW,ArB7CJ,CAAC,CAAD,CqB6CO,ArB7CjB,GAAgB,EqB6CM,IrB7CA,CAAC,CAAD,CAA1B,EAA+B,IqB6CV,CAAmB,KKnBlC,IACA,ALkB2C,CAAC,CAAD,CAA5B,CAArB,CKlBW,wBAAL,IAAiC,MADrC,EAC6C;AAC3C,ALkBJ,ArB7CE,IAAA,EqB6CM,IrB7CA,CAAC,CAAD,CAAN,CqB6Cc,ErB7CF,CqB6CK,SrB7CK,CAAC,CAAD,CAAtB,MqB6CwB,KAAK,WAAL,CAAiB,SAAS,CAAC,CAAD,CAA1B,CAAP,EAAuC,KAAK,QAA5C,CAAnB;AKjBG,ALkBH,ArB7CC,MqB6CO,IAAI,GAAG,MAAM,CAAC,CAAD,CAAN,GAAY,SAAS,CAAC,CAAD,CAAT,GAAe,QAAQ,CAAC,CAAD,CAAvB,GAA6B,UAAxD;AACA,MAAQ,IAAI,GAAG,MAAM,CAAC,CAAD,CAAN,GAAY,SAAS,CAAC,CAAD,CAAT,GAAe,QAAQ,CAAC,CAAD,CAAvB,GAA6B,UAAxD;AKlBE,ALmBF,ArB9CA,AOQK,McsCG,ArB9CJ,G0B2BG,AnBnBO,CcsCF,GAAG,GrB9CD,CqB8CK,ArB9CJ,CAAD,CAAV,CqB8CkB,ErB9CF,MqB8CU,ArB9CJ,CqB8CK,ArB9CJ,CqB8CG,ArB9CJ,CqB8CJ,ArB9CtB,COQK,CmBmBH,A1B3B6B,AOQO,CcsCF,EKnBF,GnBnB7B,EAAyC,CmBmB5C,ELmBF,QdtCK,EAAsD,OAAtD,EAA+D,OAA/D,EAAwE;AcuC7E,ArB9CE,AOQFH,IPRE,EqB8CM,AdtCF,IcsCM,ArB9CJ,CAAC,CAAD,CqB8CO,ArB9Cb,GAAY,AOQE,CcsCG,EdtCA,CcsCG,EdtCA,CAAC,GPRC,CAAC,CqB8CK,ArB9CN,CqB8CO,ArB9C7B,AOQoB,CcsCQ,AdtC9BA,CcsCsB,GAAc,UAApC;AKnBE,ALoBF,ArB9CC,AOQDA,MAAM,GmBkBCA,ALoBE,IKpBI,CnBlBC,CmBkBZ,EnBlBe,EmBkBE,CnBlBC,CAAC,GmBkBG,QnBlBJ,CAApBA,IcsCwB,IAAf,EAAqB,GKpB5B,CLoBO,CKpBuC,CLoBZ,IAA3B,EAAiC,IAAjC,EAAuC,UAAvC,CAAT;AKnBI,ALoBN,AdtCE,Cc6BF,UKXW,YnBlBQ,UmBkBb,AnBlBJ,CmBkBgC,CnBlBH,CmBkBzB,EAAgC,KAAhC,AnBlBJ,EAAuC,sCAAsC,CAAC,OAAD,CAA7E;AmBmBG,ALqBL,ArBhDE,AOSA,MPTI,UAAU,CAAC,CAAD,CAAV,GAAgB,COSH,KPTS,CAAC,CAAD,CAA1B,AOSA,EPT+B,AO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","file":"XYZ.dc21f8e5.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @private\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target, true);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (const type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass Event {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    evt.target = this;\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {TileState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  setState(state) {\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {}\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\n\nexport default Tile;\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nclass ImageTile extends Tile {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nclass LRUCache extends EventTarget {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super();\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.getCount() > this.highWaterMark;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  forEach(f, opt_this) {\n    let entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  get(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    const entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n\n\n  /**\n   * Prune the cache.\n   */\n  prune() {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super(opt_highWaterMark);\n\n  }\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      const zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  }\n}\n\n\nexport default TileCache;\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   */\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function(c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n        !!maxSourceExtent &&\n        !!this.sourceProj_.getExtent() &&\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n      getWidth(this.sourceProj_.getExtent()) : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n      getWidth(this.targetProj_.getExtent()) : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      MAX_SUBDIVISION);\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function(triangle, i, arr) {\n        leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(function(triangle) {\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]]];\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          const maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      }.bind(this));\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c]\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_ ?\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX = this.sourceProj_.canWrapX() &&\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n            needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n        // whole quad outside source projection extent -> ignore\n        return;\n      }\n    }\n\n    if (!needsSubdivision) {\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          return;\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n              (modulo(aSrc[0], sourceWorldWidth) +\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\n          dx = centerSrcEstimX -\n              modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n          this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n          this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function(triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              const state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\n\nexport default ReprojTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n       this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n       this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return this.minX <= tileRange.maxX &&\n       this.maxX >= tileRange.minX &&\n       this.minY <= tileRange.maxY &&\n       this.maxY >= tileRange.minY;\n  }\n}\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(isSorted(this.resolutions_, function(a, b) {\n      return b - a;\n    }, true), 17); // `resolutions` must be sorted in descending order\n\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined &&\n        !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ = options.tileSize !== undefined ?\n      options.tileSize :\n      !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function(size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in `callback`.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   * @template T\n   */\n  forEachTileCoordParentTileRange(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n      }\n      if (callback.call(opt_this, z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n    return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n    let tileCoordX = scale * xFromOrigin / tileSize[0];\n    let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.tileCache.clear();\n    this.changed();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n\n}\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutterForProjection(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getOpaque(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        const newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n}\n\nexport default XYZ;\n"]}